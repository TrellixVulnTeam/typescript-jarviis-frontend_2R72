{"ast":null,"code":"import n, { useEffect as e, useState as o, useRef as t, useContext as a, useMemo as i } from \"react\";\nimport r from \"react-dom\";\n\nvar l = function (n, o, t) {\n  e(function () {\n    if (n && t) {\n      var e = function () {\n        var e = [].slice.call(arguments);\n        return void 0 === e ? t(n) : t.apply(void 0, [n].concat(e));\n      };\n\n      return kakao.maps.event.addListener(n, o, e), function () {\n        kakao.maps.event.removeListener(n, o, e);\n      };\n    }\n  }, [n, o, t]);\n},\n    s = n.createContext(void 0),\n    u = function (a) {\n  var i = a.id,\n      r = void 0 === i ? \"kakao-map-container\" : i,\n      u = a.style,\n      c = a.children,\n      d = a.center,\n      p = a.isPanto,\n      k = void 0 !== p && p,\n      f = a.padding,\n      m = void 0 === f ? 32 : f,\n      g = a.className,\n      v = a.disableDoubleClick,\n      w = a.disableDoubleClickZoom,\n      C = a.draggable,\n      y = a.zoomable,\n      h = a.keyboardShortcuts,\n      M = a.level,\n      b = a.maxLevel,\n      O = a.minLevel,\n      I = a.mapTypeId,\n      x = a.projectionId,\n      L = a.scrollwheel,\n      z = a.tileAnimation,\n      P = a.onCreate,\n      S = a.onBoundsChanged,\n      A = a.onCenterChanged,\n      E = a.onClick,\n      W = a.onDoubleClick,\n      D = a.onDrag,\n      R = a.onDragEnd,\n      N = a.onDragStart,\n      Z = a.onIdle,\n      T = a.onMaptypeidChanged,\n      _ = a.onMouseMove,\n      j = a.onRightClick,\n      V = a.onTileLoaded,\n      F = a.onZoomChanged,\n      G = a.onZoomStart,\n      B = o(),\n      q = B[0],\n      H = B[1],\n      X = t(null);\n  return e(function () {\n    window.kakao ? X.current && kakao.maps.load(function () {\n      var n = \"lat\" in d ? new kakao.maps.LatLng(d.lat, d.lng) : new kakao.maps.Coords(d.x, d.y),\n          e = new kakao.maps.Map(X.current, {\n        center: n,\n        disableDoubleClick: v,\n        disableDoubleClickZoom: w,\n        draggable: C,\n        keyboardShortcuts: h,\n        level: M,\n        mapTypeId: I,\n        projectionId: x,\n        scrollwheel: L,\n        tileAnimation: z\n      });\n      H(e);\n    }) : console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n  }, [v, w, I, z]), e(function () {\n    q && P && P(q);\n  }, [q, P]), e(function () {\n    if (q) {\n      var n = q.getCenter();\n      n instanceof kakao.maps.Coords && (n = n.toLatLng());\n      var e = \"lat\" in d ? new kakao.maps.LatLng(d.lat, d.lng) : new kakao.maps.Coords(d.x, d.y);\n      e instanceof kakao.maps.LatLng && e.equals(n) || e instanceof kakao.maps.Coords && e.toLatLng().equals(n) || (k ? q.panTo(e, m) : q.setCenter(e));\n    }\n  }, [q, d.lat, d.lng, d.x, d.y]), e(function () {\n    q && void 0 !== C && q.setDraggable(C);\n  }, [q, C]), e(function () {\n    q && void 0 !== y && q.setZoomable(y);\n  }, [q, y]), e(function () {\n    q && h && \"boolean\" == typeof h && q.setKeyboardShortcuts(h);\n  }, [q, h]), e(function () {\n    q && M && q.setLevel(M);\n  }, [q, M]), e(function () {\n    q && I && q.setMapTypeId(I);\n  }, [q, I]), e(function () {\n    q && x && q.setProjectionId(x);\n  }, [q, x]), e(function () {\n    q && b && q.setMaxLevel(b);\n  }, [q, b]), e(function () {\n    q && O && q.setMinLevel(O);\n  }, [q, O]), l(q, \"bounds_changed\", S), l(q, \"center_changed\", A), l(q, \"click\", E), l(q, \"dblclick\", W), l(q, \"drag\", D), l(q, \"dragstart\", N), l(q, \"dragend\", R), l(q, \"idle\", Z), l(q, \"maptypeid_changed\", T), l(q, \"mousemove\", _), l(q, \"rightclick\", j), l(q, \"tilesloaded\", V), l(q, \"zoom_changed\", F), l(q, \"zoom_start\", G), n.createElement(n.Fragment, null, n.createElement(\"div\", {\n    id: r,\n    style: u,\n    className: g,\n    ref: X\n  }), q && n.createElement(s.Provider, {\n    value: q\n  }, c));\n},\n    c = function (n) {\n  var e = a(s);\n  if (!e) throw new Error((n ? n + \" Component\" : \"useMap\") + \" must exist inside Map Component!\");\n  return e;\n},\n    d = function (n) {\n  var o = n.id,\n      a = n.className,\n      l = n.style,\n      s = n.map,\n      u = n.position,\n      c = n.marker,\n      d = n.children,\n      p = n.altitude,\n      k = n.disableAutoPan,\n      f = n.range,\n      m = n.removable,\n      g = n.zIndex,\n      v = n.onCreate,\n      w = t(document.createElement(\"div\")),\n      C = i(function () {\n    var n = new kakao.maps.InfoWindow({\n      altitude: p,\n      disableAutoPan: k,\n      range: f,\n      removable: m,\n      zIndex: g,\n      content: w.current,\n      position: u\n    });\n    return w.current.style.whiteSpace = \"nowrap\", n;\n  }, [k, m]);\n  return e(function () {\n    return C.open(s, c), function () {\n      C.close();\n    };\n  }, [s, c]), e(function () {\n    v && v(C);\n  }, [C, v]), e(function () {\n    C && C.setPosition(u);\n  }, [C, u]), e(function () {\n    C && p && C.setAltitude(p);\n  }, [C, p]), e(function () {\n    C && f && C.setRange(f);\n  }, [C, f]), e(function () {\n    C && g && C.setZIndex(g);\n  }, [C, g]), e(function () {\n    o && (w.current.id = o);\n  }, [o]), e(function () {\n    a && (w.current.className = a);\n  }, [a]), e(function () {\n    if (l) for (var n = 0, e = Object.entries(l); n < e.length; n++) {\n      var o = e[n];\n      w.current.style[o[0]] = o[1];\n    }\n  }, [l]), r.createPortal(d, w.current);\n},\n    p = n.createContext(void 0),\n    k = function (t) {\n  var a = t.children,\n      i = t.averageCenter,\n      r = t.calculator,\n      s = t.clickable,\n      u = t.disableClickZoom,\n      d = t.gridSize,\n      k = t.hoverable,\n      f = t.minClusterSize,\n      m = t.minLevel,\n      g = t.styles,\n      v = t.texts,\n      w = t.onClusterclick,\n      C = t.onClusterdblclick,\n      y = t.onClustered,\n      h = t.onClusterout,\n      M = t.onClusterover,\n      b = t.onClusterrightclick,\n      O = t.onCreate,\n      I = c(\"MarkerClusterer\"),\n      x = o(),\n      L = x[0],\n      z = x[1];\n  return e(function () {\n    if (window.kakao.maps.MarkerClusterer) {\n      var n = new kakao.maps.MarkerClusterer({\n        averageCenter: i,\n        calculator: r,\n        clickable: s,\n        disableClickZoom: u,\n        gridSize: d,\n        hoverable: k,\n        minClusterSize: f,\n        minLevel: m,\n        styles: g,\n        texts: v\n      });\n      z(n);\n    } else console.warn(\"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\");\n  }, []), e(function () {\n    null == L || L.setMap(I);\n  }, [I, L]), e(function () {\n    L && O && O(L);\n  }, [L, O]), e(function () {\n    L && d && (L.setGridSize(d), L.redraw());\n  }, [L, d]), e(function () {\n    L && f && (L.setMinClusterSize(f), L.redraw());\n  }, [L, f]), e(function () {\n    L && void 0 !== i && (L.setAverageCenter(i), L.redraw());\n  }, [L, i]), e(function () {\n    L && m && (L.setMinLevel(m), L.redraw());\n  }, [L, m]), e(function () {\n    L && v && (L.setTexts(v), L.redraw());\n  }, [L, v]), e(function () {\n    L && r && (L.setCalculator(r), L.redraw());\n  }, [L, r]), e(function () {\n    L && g && (L.setStyles(g), L.redraw());\n  }, [L, g]), l(L, \"clusterclick\", w), l(L, \"clusterover\", M), l(L, \"clusterout\", h), l(L, \"clusterdblclick\", C), l(L, \"clusterrightclick\", b), l(L, \"clustered\", y), L ? n.createElement(p.Provider, {\n    value: L\n  }, a) : null;\n},\n    f = function (o) {\n  var t = o.map,\n      r = o.position,\n      s = o.children,\n      u = o.altitude,\n      c = o.clickable,\n      k = o.draggable,\n      f = o.image,\n      m = o.infoWindowOptions,\n      g = o.onCreate,\n      v = o.onClick,\n      w = o.onDragEnd,\n      C = o.onDragStart,\n      y = o.onMouseOut,\n      h = o.onMouseOver,\n      M = o.opacity,\n      b = o.range,\n      O = o.title,\n      I = o.zIndex,\n      x = a(p),\n      L = i(function () {\n    return new kakao.maps.Marker({\n      altitude: u,\n      clickable: c,\n      draggable: k,\n      image: f,\n      opacity: M,\n      range: b,\n      title: O,\n      zIndex: I,\n      position: r\n    });\n  }, []);\n  return e(function () {\n    return x ? x.addMarker(L) : L.setMap(t), function () {\n      x ? x.removeMarker(L) : L.setMap(null);\n    };\n  }, [t, x, L]), e(function () {\n    g && g(L);\n  }, [L, g]), l(L, \"click\", v), l(L, \"dragstart\", C), l(L, \"dragend\", w), l(L, \"mouseout\", y), l(L, \"mouseover\", h), e(function () {\n    t && L && r && L.setPosition(r);\n  }, [t, L, r]), e(function () {\n    t && L && f && L.setImage(f);\n  }, [t, L, f]), e(function () {\n    t && L && u && L.setAltitude(u);\n  }, [t, L, u]), e(function () {\n    t && L && void 0 !== c && L.setClickable(c);\n  }, [t, L, c]), e(function () {\n    t && L && void 0 !== k && L.setDraggable(k);\n  }, [t, L, k]), e(function () {\n    t && L && M && L.setOpacity(M);\n  }, [t, L, M]), e(function () {\n    t && L && b && L.setRange(b);\n  }, [t, L, b]), e(function () {\n    t && L && O && L.setTitle(O);\n  }, [t, L, O]), e(function () {\n    t && L && I && L.setZIndex(I);\n  }, [t, L, I]), s ? n.createElement(d, {\n    position: r,\n    map: t,\n    marker: L,\n    id: null == m ? void 0 : m.id,\n    className: null == m ? void 0 : m.className,\n    style: null == m ? void 0 : m.style,\n    altitude: null == m ? void 0 : m.altitude,\n    disableAutoPan: null == m ? void 0 : m.disableAutoPan,\n    range: null == m ? void 0 : m.range,\n    removable: null == m ? void 0 : m.removable,\n    zIndex: null == m ? void 0 : m.zIndex\n  }, s) : null;\n},\n    m = function (e) {\n  var o = e.image,\n      t = e.position,\n      a = e.children,\n      r = e.clickable,\n      l = e.draggable,\n      s = e.infoWindowOptions,\n      u = e.onClick,\n      d = e.onDragEnd,\n      p = e.onDragStart,\n      k = e.onMouseOut,\n      m = e.onMouseOver,\n      g = e.onCreate,\n      v = e.opacity,\n      w = e.title,\n      C = e.zIndex,\n      y = c(\"MapMarker\"),\n      h = i(function () {\n    var n, e, t, a, i, r, l, s, u, c, d, p;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (n = o.options) ? void 0 : n.alt,\n      coords: null == (e = o.options) ? void 0 : e.coords,\n      offset: (null == (t = o.options) ? void 0 : t.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (i = o.options) ? void 0 : i.offset.y),\n      shape: null == (r = o.options) ? void 0 : r.shape,\n      spriteOrigin: (null == (l = o.options) ? void 0 : l.spriteOrigin) && new kakao.maps.Point(null == (s = o.options) ? void 0 : s.spriteOrigin.x, null == (u = o.options) ? void 0 : u.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (d = o.options) ? void 0 : d.spriteSize.width, null == (p = o.options) ? void 0 : p.spriteSize.height)\n    });\n  }, [o]),\n      M = i(function () {\n    return \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : new kakao.maps.Coords(t.x, t.y).toLatLng();\n  }, [t.lat, t.lng, t.x, t.y]);\n  return n.createElement(f, {\n    map: y,\n    position: M,\n    image: h,\n    clickable: r,\n    draggable: l,\n    infoWindowOptions: s,\n    onClick: u,\n    onDragEnd: d,\n    onDragStart: p,\n    onMouseOut: k,\n    onMouseOver: m,\n    onCreate: g,\n    opacity: v,\n    title: w,\n    zIndex: C\n  }, a);\n},\n    g = function (e) {\n  var o = e.id,\n      t = e.className,\n      a = e.style,\n      r = e.position,\n      l = e.children,\n      s = e.disableAutoPan,\n      u = e.removable,\n      p = e.zIndex,\n      k = e.onCreate,\n      f = c(\"MapInfoWindow\"),\n      m = i(function () {\n    return new kakao.maps.LatLng(r.lat, r.lng);\n  }, [r.lat, r.lng]);\n  return n.createElement(d, {\n    id: o,\n    className: t,\n    style: a,\n    disableAutoPan: s,\n    removable: u,\n    zIndex: p,\n    map: f,\n    position: m,\n    onCreate: k\n  }, l);\n},\n    v = function (n) {\n  var o = n.id,\n      a = n.className,\n      l = n.style,\n      s = n.position,\n      u = n.children,\n      d = n.clickable,\n      p = n.xAnchor,\n      k = n.yAnchor,\n      f = n.zIndex,\n      m = n.onCreate,\n      g = c(\"CustomOverlayMap\"),\n      v = t(document.createElement(\"div\")),\n      w = i(function () {\n    return new kakao.maps.LatLng(s.lat, s.lng);\n  }, [s.lat, s.lng]),\n      C = i(function () {\n    return new kakao.maps.CustomOverlay({\n      clickable: d,\n      xAnchor: p,\n      yAnchor: k,\n      zIndex: f,\n      position: w,\n      content: v.current\n    });\n  }, [d, p, k]);\n  return e(function () {\n    if (g) return C.setMap(g), function () {\n      C.setMap(null);\n    };\n  }, [g, C]), e(function () {\n    m && m(C);\n  }, [C, m]), e(function () {\n    C.setPosition(w);\n  }, [C, w]), e(function () {\n    f && C.setZIndex(f);\n  }, [C, f]), e(function () {\n    o && (v.current.id = o);\n  }, [o]), e(function () {\n    a && (v.current.className = a);\n  }, [a]), e(function () {\n    if (l) for (var n = 0, e = Object.entries(l); n < e.length; n++) {\n      var o = e[n];\n      v.current.style[o[0]] = o[1];\n    }\n  }, [l]), r.createPortal(u, v.current);\n},\n    w = function (n) {\n  var o = n.position,\n      t = void 0 === o ? kakao.maps.ControlPosition.TOPRIGHT : o,\n      a = c(\"MapTypeControl\"),\n      r = i(function () {\n    return new kakao.maps.MapTypeControl();\n  }, []);\n  return e(function () {\n    return a.addControl(r, t), function () {\n      a.removeControl(r);\n    };\n  }, [a, t]), null;\n},\n    C = function (n) {\n  var o = n.position,\n      t = void 0 === o ? kakao.maps.ControlPosition.RIGHT : o,\n      a = c(\"ZoomControl\"),\n      r = i(function () {\n    return new kakao.maps.ZoomControl();\n  }, []);\n  return e(function () {\n    return a.addControl(r, t), function () {\n      a.removeControl(r);\n    };\n  }, [a, t]), null;\n},\n    y = function (n) {\n  var o = n.type,\n      t = c(\"MapTypeId\");\n  return e(function () {\n    return t.addOverlayMapTypeId(o), function () {\n      t.removeOverlayMapTypeId(o);\n    };\n  }, [t, o]), null;\n},\n    h = function (n) {\n  var o = n.center,\n      t = n.radius,\n      a = n.fillColor,\n      r = n.fillOpacity,\n      s = n.strokeColor,\n      u = n.strokeOpacity,\n      d = n.strokeStyle,\n      p = n.strokeWeight,\n      k = n.zIndex,\n      f = n.onMouseover,\n      m = n.onMouseout,\n      g = n.onMousemove,\n      v = n.onMousedown,\n      w = n.onClick,\n      C = n.onCreate,\n      y = c(\"Circle\"),\n      h = i(function () {\n    return new kakao.maps.LatLng(o.lat, o.lng);\n  }, [o.lat, o.lng]),\n      M = i(function () {\n    return new kakao.maps.Circle({\n      center: h,\n      radius: t,\n      fillColor: a,\n      fillOpacity: r,\n      strokeColor: s,\n      strokeOpacity: u,\n      strokeStyle: d,\n      strokeWeight: p,\n      zIndex: k\n    });\n  }, []);\n  return e(function () {\n    return M.setMap(y), function () {\n      M.setMap(null);\n    };\n  }, [y, M]), e(function () {\n    C && C(M);\n  }, [M, C]), e(function () {\n    M && M.setPosition(h);\n  }, [M, h]), e(function () {\n    M.setRadius(t);\n  }, [M, t]), e(function () {\n    k && M.setZIndex(k);\n  }, [M, k]), e(function () {\n    M.setOptions({\n      fillColor: a,\n      fillOpacity: r,\n      strokeColor: s,\n      strokeOpacity: u,\n      strokeStyle: d,\n      strokeWeight: p\n    });\n  }, [M, a, r, s, u, d, p]), l(M, \"mouseover\", f), l(M, \"mouseout\", m), l(M, \"mousemove\", g), l(M, \"mousedown\", v), l(M, \"click\", w), null;\n},\n    M = function (n) {\n  var o = n.path,\n      t = n.endArrow,\n      a = n.onClick,\n      r = n.onMousedown,\n      s = n.onMousemove,\n      u = n.onMouseout,\n      d = n.onMouseover,\n      p = n.onCreate,\n      k = n.strokeColor,\n      f = n.strokeOpacity,\n      m = n.strokeStyle,\n      g = n.strokeWeight,\n      v = n.zIndex,\n      w = c(\"Polyline\"),\n      C = i(function () {\n    return o.every(function (n) {\n      return n instanceof Array;\n    }) ? o.map(function (n) {\n      return n.map(function (n) {\n        return new kakao.maps.LatLng(n.lat, n.lng);\n      });\n    }) : o.map(function (n) {\n      return new kakao.maps.LatLng(n.lat, n.lng);\n    });\n  }, [o]),\n      y = i(function () {\n    return new kakao.maps.Polyline({\n      path: C,\n      endArrow: t,\n      strokeColor: k,\n      strokeOpacity: f,\n      strokeStyle: m,\n      strokeWeight: g,\n      zIndex: v\n    });\n  }, []);\n  return e(function () {\n    return y.setMap(w), function () {\n      return y.setMap(null);\n    };\n  }, [w, y]), e(function () {\n    p && p(y);\n  }, [y, p]), e(function () {\n    y.setOptions({\n      endArrow: t,\n      strokeColor: k,\n      strokeOpacity: f,\n      strokeStyle: m,\n      strokeWeight: g\n    });\n  }, [y, t, k, f, m, g]), e(function () {\n    y.setPath(C);\n  }, [y, C]), e(function () {\n    v && y.setZIndex(v);\n  }, [y, v]), l(y, \"mouseover\", d), l(y, \"mouseout\", u), l(y, \"mousemove\", s), l(y, \"mousedown\", r), l(y, \"click\", a), null;\n},\n    b = function (n) {\n  var o = n.path,\n      t = n.onClick,\n      a = n.onMousedown,\n      r = n.onMousemove,\n      s = n.onMouseout,\n      u = n.onMouseover,\n      d = n.onCreate,\n      p = n.strokeColor,\n      k = n.strokeOpacity,\n      f = n.strokeStyle,\n      m = n.strokeWeight,\n      g = n.fillColor,\n      v = n.fillOpacity,\n      w = n.zIndex,\n      C = c(\"Polygon\"),\n      y = i(function () {\n    return o.every(function (n) {\n      return n instanceof Array;\n    }) ? o.map(function (n) {\n      return n.map(function (n) {\n        return new kakao.maps.LatLng(n.lat, n.lng);\n      });\n    }) : o.map(function (n) {\n      return new kakao.maps.LatLng(n.lat, n.lng);\n    });\n  }, [o]),\n      h = i(function () {\n    return new kakao.maps.Polygon({\n      path: y,\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m,\n      zIndex: w\n    });\n  }, []);\n  return e(function () {\n    return h.setMap(C), function () {\n      return h.setMap(null);\n    };\n  }, [C, h]), e(function () {\n    d && d(h);\n  }, [h, d]), e(function () {\n    h.setOptions({\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m\n    });\n  }, [h, g, v, p, k, f, m]), e(function () {\n    h.setPath(y);\n  }, [h, y]), e(function () {\n    w && h.setZIndex(w);\n  }, [h, w]), l(h, \"mouseover\", u), l(h, \"mouseout\", s), l(h, \"mousemove\", r), l(h, \"mousedown\", a), l(h, \"click\", t), null;\n},\n    O = function (n) {\n  var o = n.bounds,\n      t = n.onClick,\n      a = n.onMousedown,\n      r = n.onMousemove,\n      s = n.onMouseout,\n      u = n.onMouseover,\n      d = n.onCreate,\n      p = n.strokeColor,\n      k = n.strokeOpacity,\n      f = n.strokeStyle,\n      m = n.strokeWeight,\n      g = n.fillColor,\n      v = n.fillOpacity,\n      w = n.zIndex,\n      C = c(\"Rectangle\"),\n      y = i(function () {\n    return new kakao.maps.LatLngBounds(new kakao.maps.LatLng(o.sw.lat, o.sw.lng), new kakao.maps.LatLng(o.ne.lat, o.ne.lng));\n  }, [o]),\n      h = i(function () {\n    return new kakao.maps.Rectangle({\n      bounds: y,\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m,\n      zIndex: w\n    });\n  }, []);\n  return e(function () {\n    return h.setMap(C), function () {\n      return h.setMap(null);\n    };\n  }, [C, h]), e(function () {\n    d && d(h);\n  }, [h, d]), e(function () {\n    h.setOptions({\n      fillColor: g,\n      fillOpacity: v,\n      strokeColor: p,\n      strokeOpacity: k,\n      strokeStyle: f,\n      strokeWeight: m\n    });\n  }, [h, g, v, p, k, f, m]), e(function () {\n    h.setBounds(y);\n  }, [h, y]), e(function () {\n    w && h.setZIndex(w);\n  }, [h, w]), l(h, \"mouseover\", u), l(h, \"mouseout\", s), l(h, \"mousemove\", r), l(h, \"mousedown\", a), l(h, \"click\", t), null;\n},\n    I = function (n) {\n  var o = n.center,\n      t = n.rx,\n      a = n.ry,\n      r = n.fillColor,\n      s = n.fillOpacity,\n      u = n.strokeColor,\n      d = n.strokeOpacity,\n      p = n.strokeStyle,\n      k = n.strokeWeight,\n      f = n.zIndex,\n      m = n.onMouseover,\n      g = n.onMouseout,\n      v = n.onMousemove,\n      w = n.onMousedown,\n      C = n.onClick,\n      y = n.onCreate,\n      h = c(\"Ellipse\"),\n      M = i(function () {\n    return new kakao.maps.LatLng(o.lat, o.lng);\n  }, [o.lat, o.lng]),\n      b = i(function () {\n    return new kakao.maps.Ellipse({\n      center: M,\n      rx: t,\n      ry: a,\n      fillColor: r,\n      fillOpacity: s,\n      strokeColor: u,\n      strokeOpacity: d,\n      strokeStyle: p,\n      strokeWeight: k,\n      zIndex: f\n    });\n  }, []);\n  return e(function () {\n    return b.setMap(h), function () {\n      b.setMap(null);\n    };\n  }, [h, b]), e(function () {\n    y && y(b);\n  }, [b, y]), e(function () {\n    b && b.setPosition(M);\n  }, [b, M]), e(function () {\n    b.setRadius(t, a);\n  }, [b, t, a]), e(function () {\n    f && b.setZIndex(f);\n  }, [b, f]), e(function () {\n    b.setOptions({\n      fillColor: r,\n      fillOpacity: s,\n      strokeColor: u,\n      strokeOpacity: d,\n      strokeStyle: p,\n      strokeWeight: k\n    });\n  }, [b, r, s, u, d, p, k]), l(b, \"mouseover\", m), l(b, \"mouseout\", g), l(b, \"mousemove\", v), l(b, \"mousedown\", w), l(b, \"click\", C), null;\n};\n\nfunction x(n, e) {\n  return (x = Object.setPrototypeOf || function (n, e) {\n    return n.__proto__ = e, n;\n  })(n, e);\n}\n\nvar L = function (n) {\n  var o = n.draw,\n      t = n.onAdd,\n      a = n.onRemove,\n      r = n.onCreate,\n      l = c(),\n      s = i(function () {\n    return new ( /*#__PURE__*/function (n) {\n      var e, o;\n\n      function t(e, o, t) {\n        var a;\n        return (a = n.call(this) || this).draw = e, a.onAdd = o, a.onRemove = t, a;\n      }\n\n      return o = n, (e = t).prototype = Object.create(o.prototype), e.prototype.constructor = e, x(e, o), t;\n    }(kakao.maps.AbstractOverlay))(o, t, a);\n  }, [o, t, a]);\n  return e(function () {\n    return s.setMap(l), function () {\n      s.setMap(null);\n    };\n  }, [l, s]), e(function () {\n    r && r(s);\n  }, [s, r]), null;\n},\n    z = n.createContext(void 0),\n    P = function (a) {\n  var i = a.id,\n      r = void 0 === i ? \"kakao-roadview-container\" : i,\n      s = a.style,\n      u = a.children,\n      c = a.position,\n      d = a.className,\n      p = a.pan,\n      k = a.panoId,\n      f = a.panoX,\n      m = a.panoY,\n      g = a.tilt,\n      v = a.zoom,\n      w = a.onCreate,\n      C = a.onInit,\n      y = a.onPanoidChange,\n      h = a.onPositionChanged,\n      M = a.onViewpointChange,\n      b = a.onErrorGetNearestPanoId,\n      O = o(!0),\n      I = O[0],\n      x = O[1],\n      L = o(),\n      P = L[0],\n      S = L[1],\n      A = t(null);\n  return e(function () {\n    if (window.kakao) {\n      if (A.current) {\n        var n = new kakao.maps.Roadview(A.current, {\n          pan: p,\n          panoId: k,\n          panoX: f,\n          panoY: m,\n          tilt: g,\n          zoom: v\n        });\n        S(n);\n      }\n    } else console.warn(\"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\");\n  }, [f, m, v]), e(function () {\n    P && w && w(P);\n  }, [P, w]), e(function () {\n    if (P && !k && (P.getPosition().getLat() !== c.lat || P.getPosition().getLng() !== c.lng)) {\n      var n = new kakao.maps.LatLng(c.lat, c.lng);\n      new kakao.maps.RoadviewClient().getNearestPanoId(n, c.radius, function (e) {\n        null === e && b ? b(P) : P.setPanoId(e, n);\n      });\n    }\n  }, [P, k, c.lat, c.lng, c.radius, b]), e(function () {\n    if (P && k && k !== P.getPanoId() && (P.getPosition().getLat() !== c.lat || P.getPosition().getLng() !== c.lng)) {\n      var n = new kakao.maps.LatLng(c.lat, c.lng);\n      P.setPanoId(k, n);\n    }\n  }, [P, k, c.lat, c.lng]), e(function () {\n    if (P) {\n      var n = P.getViewpoint();\n      n.pan === p && n.tilt === g || (p && (n.pan = p), g && (n.tilt = g), P.setViewpoint(n));\n    }\n  }, [P, p, g]), l(P, \"init\", function (n) {\n    x(!1), C && C(n);\n  }), l(P, \"panoid_changed\", y), l(P, \"viewpoint_changed\", M), l(P, \"position_changed\", h), n.createElement(n.Fragment, null, n.createElement(\"div\", {\n    id: r,\n    className: d,\n    style: s,\n    ref: A\n  }), P && !I && n.createElement(z.Provider, {\n    value: P\n  }, u));\n},\n    S = function (n) {\n  var e = a(z);\n  if (!e) throw new Error((n ? n + \" Component\" : \"useRoadview\") + \" must exist inside Roadview Component!\");\n  return e;\n},\n    A = function (n) {\n  var o = n.id,\n      a = n.className,\n      l = n.style,\n      s = n.position,\n      u = n.children,\n      c = n.clickable,\n      d = n.xAnchor,\n      p = n.yAnchor,\n      k = n.zIndex,\n      f = n.altitude,\n      m = n.range,\n      g = n.isFocus,\n      v = n.onCreate,\n      w = S(\"CustomOverlayRoadview\"),\n      C = t(document.createElement(\"div\")),\n      y = i(function () {\n    return \"lat\" in s ? new kakao.maps.LatLng(s.lat, s.lng) : new kakao.maps.Viewpoint(s.pan, s.tilt, s.zoom, s.panoId);\n  }, [s.lat, s.lng, s.pan, s.tilt, s.zoom, s.panoId]),\n      h = i(function () {\n    return new kakao.maps.CustomOverlay({\n      clickable: c,\n      xAnchor: d,\n      yAnchor: p,\n      zIndex: k,\n      position: y,\n      content: C.current\n    });\n  }, [c, d, p]);\n  return e(function () {\n    if (w) {\n      if (h.setMap(w), g) {\n        var n = w.getProjection().viewpointFromCoords(h.getPosition(), h.getAltitude());\n        w.setViewpoint(n);\n      }\n\n      return function () {\n        h.setMap(null);\n      };\n    }\n  }, [h, w]), e(function () {\n    v && v(h);\n  }, [h, v]), e(function () {\n    h.setPosition(y);\n  }, [h, y]), e(function () {\n    k && h.setZIndex(k);\n  }, [h, k]), e(function () {\n    f && h.setAltitude(f);\n  }, [h, f]), e(function () {\n    m && h.setRange(m);\n  }, [h, m]), e(function () {\n    o && (C.current.id = o);\n  }, [o]), e(function () {\n    a && (C.current.className = a);\n  }, [a]), e(function () {\n    if (l) for (var n = 0, e = Object.entries(l); n < e.length; n++) {\n      var o = e[n];\n      C.current.style[o[0]] = o[1];\n    }\n  }, [l]), r.createPortal(u, C.current);\n},\n    E = function (e) {\n  var o = e.image,\n      t = e.position,\n      a = e.children,\n      r = e.altitude,\n      l = e.clickable,\n      s = e.infoWindowOptions,\n      u = e.onClick,\n      c = e.onDragEnd,\n      d = e.onDragStart,\n      p = e.onMouseOut,\n      k = e.onMouseOver,\n      m = e.onCreate,\n      g = e.opacity,\n      v = e.range,\n      w = e.title,\n      C = e.zIndex,\n      y = S(\"RoadviewMarker\"),\n      h = i(function () {\n    var n, e, t, a, i, r, l, s, u, c, d, p;\n    return o && new kakao.maps.MarkerImage(o.src, new kakao.maps.Size(o.size.width, o.size.height), {\n      alt: null == (n = o.options) ? void 0 : n.alt,\n      coords: null == (e = o.options) ? void 0 : e.coords,\n      offset: (null == (t = o.options) ? void 0 : t.offset) && new kakao.maps.Point(null == (a = o.options) ? void 0 : a.offset.x, null == (i = o.options) ? void 0 : i.offset.y),\n      shape: null == (r = o.options) ? void 0 : r.shape,\n      spriteOrigin: (null == (l = o.options) ? void 0 : l.spriteOrigin) && new kakao.maps.Point(null == (s = o.options) ? void 0 : s.spriteOrigin.x, null == (u = o.options) ? void 0 : u.spriteOrigin.y),\n      spriteSize: (null == (c = o.options) ? void 0 : c.spriteSize) && new kakao.maps.Size(null == (d = o.options) ? void 0 : d.spriteSize.width, null == (p = o.options) ? void 0 : p.spriteSize.height)\n    });\n  }, [o]),\n      M = i(function () {\n    return \"lat\" in t ? new kakao.maps.LatLng(t.lat, t.lng) : \"x\" in t ? new kakao.maps.Coords(t.x, t.y).toLatLng() : new kakao.maps.Viewpoint(t.pan, t.tilt, t.zoom, t.panoId);\n  }, [t.lat, t.lng, t.x, t.y, t.pan, t.tilt, t.zoom, null == t ? void 0 : t.panoId]);\n  return n.createElement(f, {\n    map: y,\n    position: M,\n    image: h,\n    altitude: r,\n    clickable: l,\n    infoWindowOptions: s,\n    onClick: u,\n    onDragEnd: c,\n    onDragStart: d,\n    onMouseOut: p,\n    onMouseOver: k,\n    onCreate: m,\n    opacity: g,\n    range: v,\n    title: w,\n    zIndex: C\n  }, a);\n},\n    W = function (e) {\n  var o = e.id,\n      t = e.className,\n      a = e.style,\n      r = e.position,\n      l = e.children,\n      s = e.altitude,\n      u = e.disableAutoPan,\n      c = e.range,\n      p = e.removable,\n      k = e.zIndex,\n      f = e.onCreate,\n      m = S(\"RoadviewInfoWindow\"),\n      g = i(function () {\n    return \"lat\" in r ? new kakao.maps.LatLng(r.lat, r.lng) : new kakao.maps.Viewpoint(r.pan, r.tilt, r.zoom, r.panoId);\n  }, [r.lat, r.lng, r.pan, r.tilt, r.zoom, r.panoId]);\n  return n.createElement(d, {\n    id: o,\n    className: t,\n    style: a,\n    altitude: s,\n    disableAutoPan: u,\n    range: c,\n    removable: p,\n    zIndex: k,\n    map: m,\n    position: g,\n    onCreate: f\n  }, l);\n};\n\nexport { L as AbstractOverlay, h as Circle, v as CustomOverlayMap, A as CustomOverlayRoadview, I as Ellipse, u as Map, g as MapInfoWindow, m as MapMarker, w as MapTypeControl, y as MapTypeId, k as MarkerClusterer, b as Polygon, M as Polyline, O as Rectangle, P as Roadview, W as RoadviewInfoWindow, E as RoadviewMarker, C as ZoomControl, c as useMap, S as useRoadview };","map":{"version":3,"sources":["../src/hooks/useKakaoEvent.tsx","../src/components/Map.tsx","../src/hooks/useMap.tsx","../src/components/InfoWindow.tsx","../src/components/MarkerClusterer.tsx","../src/components/Marker.tsx","../src/components/MapMarker.tsx","../src/components/MapInfoWindow.tsx","../src/components/CustomOverlayMap.tsx","../src/components/MapTypeControl.tsx","../src/components/ZoomControl.tsx","../src/components/MapTypeId.tsx","../src/components/Circle.tsx","../src/components/Polyline.tsx","../src/components/Polygon.tsx","../src/components/Rectangle.tsx","../src/components/Ellipse.tsx","../src/components/AbstractOverlay.tsx","../src/components/Roadview.tsx","../src/hooks/useRoadview.tsx","../src/components/CustomOverlayRoadview.tsx","../src/components/RoadviewMarker.tsx","../src/components/RoadviewInfoWindow.tsx"],"names":["useKakaoEvent","target","type","callback","useEffect","wrapCallback","arg","undefined","kakao","maps","event","addListener","removeListener","KakaoMapContext","React","createContext","Map","id","style","children","center","isPanto","padding","className","disableDoubleClick","disableDoubleClickZoom","draggable","zoomable","keyboardShortcuts","level","maxLevel","minLevel","mapTypeId","projectionId","scrollwheel","tileAnimation","onCreate","onBoundsChanged","onCenterChanged","onClick","onDoubleClick","onDrag","onDragEnd","onDragStart","onIdle","onMaptypeidChanged","onMouseMove","onRightClick","onTileLoaded","onZoomChanged","onZoomStart","map","setMap","useState","container","useRef","window","console","warn","current","load","initalMapCenter","LatLng","lat","lng","Coords","x","y","kakaoMap","prevCenter","getCenter","toLatLng","centerPosition","equals","panTo","setCenter","setDraggable","setZoomable","setKeyboardShortcuts","setLevel","setMapTypeId","setProjectionId","setMaxLevel","setMinLevel","ref","Provider","value","useMap","componentName","useContext","Error","InfoWindow","position","marker","altitude","disableAutoPan","range","removable","zIndex","document","createElement","infoWindow","useMemo","kakaoInfoWindow","content","whiteSpace","open","close","setPosition","setAltitude","setRange","setZIndex","Object","entries","ReactDom","createPortal","KakaoMapMarkerClustererContext","MarkerClusterer","averageCenter","calculator","clickable","disableClickZoom","gridSize","hoverable","minClusterSize","styles","texts","onClusterclick","onClusterdblclick","onClustered","onClusterout","onClusterover","onClusterrightclick","markerCluster","setMarkerCluster","cluster","setGridSize","redraw","setMinClusterSize","setAverageCenter","setTexts","setCalculator","setStyles","Marker","image","infoWindowOptions","onMouseOut","onMouseOver","opacity","title","addMarker","removeMarker","setImage","setClickable","setOpacity","setTitle","MapMarker","markerImage","MarkerImage","src","Size","size","width","height","alt","options","coords","offset","Point","shape","spriteOrigin","spriteSize","markerPosition","MapInfoWindow","infoPosition","CustomOverlayMap","xAnchor","yAnchor","overlayPosition","overlay","CustomOverlay","ReactDOM","MapTypeControl","ControlPosition","TOPRIGHT","mapTypeControl","addControl","removeControl","ZoomControl","RIGHT","MapTypeId","addOverlayMapTypeId","removeOverlayMapTypeId","Circle","radius","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeStyle","strokeWeight","onMouseover","onMouseout","onMousemove","onMousedown","circleCenter","circle","setRadius","setOptions","Polyline","path","endArrow","polyLinePath","every","v","Array","p","polyline","setPath","Polygon","polygonPath","polygon","Rectangle","bounds","rectangleBounds","LatLngBounds","sw","ne","rectangle","setBounds","Ellipse","rx","ry","ellipseCenter","ellipse","AbstractOverlay","draw","onAdd","onRemove","reactAbstractOverlay","_this","KakaoRoadviewContext","Roadview","pan","panoId","panoX","panoY","tilt","zoom","onInit","onPanoidChange","onPositionChanged","onViewpointChange","onErrorGetNearestPanoId","isLoading","setIsLoading","roadview","setRoadview","kakaoRoadview","getPosition","getLat","getLng","newPostion","RoadviewClient","getNearestPanoId","setPanoId","getPanoId","prevViewpoint","getViewpoint","setViewpoint","useRoadview","CustomOverlayRoadview","isFocus","Viewpoint","getProjection","viewpoint","viewpointFromCoords","getAltitude","RoadviewMarker","RoadviewInfoWindow"],"mappings":";;;AAEA,IAAMA,CAAAA,GAAgB,UAIpBC,CAJoB,EAQpBC,CARoB,EAYpBC,CAZoB,EAYpBA;AAEAC,EAAAA,CAAAA,CAAU,YAAA;AACR,QAAKH,CAAAA,IAAWE,CAAhB,EAAA;AAEA,UAAME,CAAAA,GAAe,YAAA;AAAA,YAAIC,CAAAA,GAAAA,GAAAA,KAAAA,CAAAA,IAAAA,CAAAA,SAAAA,CAAJ;AACnB,eAAA,KAAYC,CAAZ,KAAID,CAAJ,GAA8BH,CAAAA,CAASF,CAATE,CAA9B,GACYA,CAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAASF,CAATE,EAASF,MAATE,CAAoBG,CAApBH,CAAAA,CADZ;AACgCG,OAFlC;;AAOA,aAFAE,KAAAA,CAAMC,IAAND,CAAWE,KAAXF,CAAiBG,WAAjBH,CAA6BP,CAA7BO,EAAqCN,CAArCM,EAA2CH,CAA3CG,GAA2CH,YAAAA;AAGzCG,QAAAA,KAAAA,CAAMC,IAAND,CAAWE,KAAXF,CAAiBI,cAAjBJ,CAAgCP,CAAhCO,EAAwCN,CAAxCM,EAA8CH,CAA9CG;AAA8CH,OADhD;AACgDA;AAAAA,GAXlDD,EAaG,CAACH,CAAD,EAASC,CAAT,EAAeC,CAAf,CAbHC,CAAAA;AAakBD,CA3BpB;AAAA,ICCaU,CAAAA,GAAkBC,CAAAA,CAAMC,aAAND,CAAMC,KACnCR,CAD6BO,CDD/B;AAAA,IC2NME,CAAAA,GAA0B,UAAA,CAAA,EAAA;AAAA,MAAA,CAAA,GAAA,CAAA,CAC9BC,EAD8B;AAAA,MAC9BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAK,qBAALA,GAAK,CADyB;AAAA,MAE9BC,CAAAA,GAAAA,CAAAA,CAAAA,KAF8B;AAAA,MAG9BC,CAAAA,GAAAA,CAAAA,CAAAA,QAH8B;AAAA,MAI9BC,CAAAA,GAAAA,CAAAA,CAAAA,MAJ8B;AAAA,MAI9BA,CAAAA,GAAAA,CAAAA,CACAC,OAL8B;AAAA,MAK9BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,IAAAA,CAL8B;AAAA,MAK9BA,CAAAA,GAAAA,CAAAA,CACAC,OAN8B;AAAA,MAM9BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAU,EAAVA,GAAU,CANoB;AAAA,MAO9BC,CAAAA,GAAAA,CAAAA,CAAAA,SAP8B;AAAA,MAQ9BC,CAAAA,GAAAA,CAAAA,CAAAA,kBAR8B;AAAA,MAS9BC,CAAAA,GAAAA,CAAAA,CAAAA,sBAT8B;AAAA,MAU9BC,CAAAA,GAAAA,CAAAA,CAAAA,SAV8B;AAAA,MAW9BC,CAAAA,GAAAA,CAAAA,CAAAA,QAX8B;AAAA,MAY9BC,CAAAA,GAAAA,CAAAA,CAAAA,iBAZ8B;AAAA,MAa9BC,CAAAA,GAAAA,CAAAA,CAAAA,KAb8B;AAAA,MAc9BC,CAAAA,GAAAA,CAAAA,CAAAA,QAd8B;AAAA,MAe9BC,CAAAA,GAAAA,CAAAA,CAAAA,QAf8B;AAAA,MAgB9BC,CAAAA,GAAAA,CAAAA,CAAAA,SAhB8B;AAAA,MAiB9BC,CAAAA,GAAAA,CAAAA,CAAAA,YAjB8B;AAAA,MAkB9BC,CAAAA,GAAAA,CAAAA,CAAAA,WAlB8B;AAAA,MAmB9BC,CAAAA,GAAAA,CAAAA,CAAAA,aAnB8B;AAAA,MAoB9BC,CAAAA,GAAAA,CAAAA,CAAAA,QApB8B;AAAA,MAqB9BC,CAAAA,GAAAA,CAAAA,CAAAA,eArB8B;AAAA,MAsB9BC,CAAAA,GAAAA,CAAAA,CAAAA,eAtB8B;AAAA,MAuB9BC,CAAAA,GAAAA,CAAAA,CAAAA,OAvB8B;AAAA,MAwB9BC,CAAAA,GAAAA,CAAAA,CAAAA,aAxB8B;AAAA,MAyB9BC,CAAAA,GAAAA,CAAAA,CAAAA,MAzB8B;AAAA,MA0B9BC,CAAAA,GAAAA,CAAAA,CAAAA,SA1B8B;AAAA,MA2B9BC,CAAAA,GAAAA,CAAAA,CAAAA,WA3B8B;AAAA,MA4B9BC,CAAAA,GAAAA,CAAAA,CAAAA,MA5B8B;AAAA,MA6B9BC,CAAAA,GAAAA,CAAAA,CAAAA,kBA7B8B;AAAA,MA8B9BC,CAAAA,GAAAA,CAAAA,CAAAA,WA9B8B;AAAA,MA+B9BC,CAAAA,GAAAA,CAAAA,CAAAA,YA/B8B;AAAA,MAgC9BC,CAAAA,GAAAA,CAAAA,CAAAA,YAhC8B;AAAA,MAiC9BC,CAAAA,GAAAA,CAAAA,CAAAA,aAjC8B;AAAA,MAkC9BC,CAAAA,GAAAA,CAAAA,CAAAA,WAlC8B;AAAA,MAkC9BA,CAAAA,GAEsBG,CAAAA,EApCQ;AAAA,MAoCvBF,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CApCuB;AAAA,MAoClBC,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CApCkB;AAAA,MAsCxBE,CAAAA,GAAYC,CAAAA,CAAuB,IAAvBA,CAtCY;AAuK9B,SA/HAnD,CAAAA,CAAU,YAAA;AACHoD,IAAAA,MAAAA,CAAOhD,KAAPgD,GAMAF,CAAAA,CAAUK,OAAVL,IAIL9C,KAAAA,CAAMC,IAAND,CAAWoD,IAAXpD,CAAgB,YAAA;AACd,UAAMqD,CAAAA,GACJ,SAASzC,CAAT,GACI,IAAIZ,KAAAA,CAAMC,IAAND,CAAWsD,MAAf,CAAsB1C,CAAAA,CAAO2C,GAA7B,EAAkC3C,CAAAA,CAAO4C,GAAzC,CADJ,GAEI,IAAIxD,KAAAA,CAAMC,IAAND,CAAWyD,MAAf,CAAsB7C,CAAAA,CAAO8C,CAA7B,EAAgC9C,CAAAA,CAAO+C,CAAvC,CAHN;AAAA,UAIMC,CAAAA,GAAW,IAAI5D,KAAAA,CAAMC,IAAND,CAAWQ,GAAf,CAAmBsC,CAAAA,CAAUK,OAA7B,EAAwD;AACvEvC,QAAAA,MAAAA,EAAQyC,CAD+D;AAEvErC,QAAAA,kBAAAA,EAAoBA,CAFmD;AAGvEC,QAAAA,sBAAAA,EAAwBA,CAH+C;AAIvEC,QAAAA,SAAAA,EAAWA,CAJ4D;AAKvEE,QAAAA,iBAAAA,EAAmBA,CALoD;AAMvEC,QAAAA,KAAAA,EAAOA,CANgE;AAOvEG,QAAAA,SAAAA,EAAWA,CAP4D;AAQvEC,QAAAA,YAAAA,EAAcA,CARyD;AASvEC,QAAAA,WAAAA,EAAaA,CAT0D;AAUvEC,QAAAA,aAAAA,EAAeA;AAVwD,OAAxD,CAJjB;AAiBAiB,MAAAA,CAAAA,CAAOgB,CAAPhB,CAAAA;AAAOgB,KAlBT5D,CAVKgD,GACHC,OAAAA,CAAQC,IAARD,CACE,+EADFA,CADGD;AAED,GAHNpD,EAgCG,CAACoB,CAAD,EAAqBC,CAArB,EAA6CO,CAA7C,EAAwDG,CAAxD,CAhCH/B,CAAAA,EAkCAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQf,CAARe,IACLf,CAAAA,CAASe,CAATf,CADKe;AACIA,GAFX/C,EAGG,CAAC+C,CAAD,EAAMf,CAAN,CAHHhC,CAlCAA,EAwCAA,CAAAA,CAAU,YAAA;AACR,QAAK+C,CAAL,EAAA;AAEA,UAAIkB,CAAAA,GAAalB,CAAAA,CAAImB,SAAJnB,EAAjB;AACIkB,MAAAA,CAAAA,YAAsB7D,KAAAA,CAAMC,IAAND,CAAWyD,MAAjCI,KACFA,CAAAA,GAAaA,CAAAA,CAAWE,QAAXF,EADXA;AAIJ,UAAMG,CAAAA,GACJ,SAASpD,CAAT,GACI,IAAIZ,KAAAA,CAAMC,IAAND,CAAWsD,MAAf,CAAsB1C,CAAAA,CAAO2C,GAA7B,EAAkC3C,CAAAA,CAAO4C,GAAzC,CADJ,GAEI,IAAIxD,KAAAA,CAAMC,IAAND,CAAWyD,MAAf,CAAsB7C,CAAAA,CAAO8C,CAA7B,EAAgC9C,CAAAA,CAAO+C,CAAvC,CAHN;AAMGK,MAAAA,CAAAA,YAA0BhE,KAAAA,CAAMC,IAAND,CAAWsD,MAArCU,IACCA,CAAAA,CAAeC,MAAfD,CAAsBH,CAAtBG,CADDA,IAEAA,CAAAA,YAA0BhE,KAAAA,CAAMC,IAAND,CAAWyD,MAArCO,IACCA,CAAAA,CAAeD,QAAfC,GAA0BC,MAA1BD,CAAiCH,CAAjCG,CAHDA,KAQCnD,CAAAA,GACF8B,CAAAA,CAAIuB,KAAJvB,CAAUqB,CAAVrB,EAA0B7B,CAA1B6B,CADE9B,GAGF8B,CAAAA,CAAIwB,SAAJxB,CAAcqB,CAAdrB,CAXCqB;AAWaA;AAAAA,GAzBlBpE,EA6BG,CAAC+C,CAAD,EAAM/B,CAAAA,CAAO2C,GAAb,EAAkB3C,CAAAA,CAAO4C,GAAzB,EAA8B5C,CAAAA,CAAO8C,CAArC,EAAwC9C,CAAAA,CAAO+C,CAA/C,CA7BH/D,CAxCAA,EAuEAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAAA,KAA4B,CAA5BA,KAAczB,CAAdyB,IACLA,CAAAA,CAAIyB,YAAJzB,CAAiBzB,CAAjByB,CADKA;AACYzB,GAFnBtB,EAGG,CAAC+C,CAAD,EAAMzB,CAAN,CAHHtB,CAvEAA,EA4EAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAAA,KAA2B,CAA3BA,KAAcxB,CAAdwB,IACLA,CAAAA,CAAI0B,WAAJ1B,CAAgBxB,CAAhBwB,CADKA;AACWxB,GAFlBvB,EAGG,CAAC+C,CAAD,EAAMxB,CAAN,CAHHvB,CA5EAA,EAiFAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQvB,CAARuB,IAA0D,aAAA,OAAtBvB,CAApCuB,IAELA,CAAAA,CAAI2B,oBAAJ3B,CAAyBvB,CAAzBuB,CAFKA;AAEoBvB,GAH3BxB,EAIG,CAAC+C,CAAD,EAAMvB,CAAN,CAJHxB,CAjFAA,EAuFAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQtB,CAARsB,IACLA,CAAAA,CAAI4B,QAAJ5B,CAAatB,CAAbsB,CADKA;AACQtB,GAFfzB,EAGG,CAAC+C,CAAD,EAAMtB,CAAN,CAHHzB,CAvFAA,EA4FAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQnB,CAARmB,IACLA,CAAAA,CAAI6B,YAAJ7B,CAAiBnB,CAAjBmB,CADKA;AACYnB,GAFnB5B,EAGG,CAAC+C,CAAD,EAAMnB,CAAN,CAHH5B,CA5FAA,EAiGAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQlB,CAARkB,IACLA,CAAAA,CAAI8B,eAAJ9B,CAAoBlB,CAApBkB,CADKA;AACelB,GAFtB7B,EAGG,CAAC+C,CAAD,EAAMlB,CAAN,CAHH7B,CAjGAA,EAsGAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQrB,CAARqB,IACLA,CAAAA,CAAI+B,WAAJ/B,CAAgBrB,CAAhBqB,CADKA;AACWrB,GAFlB1B,EAGG,CAAC+C,CAAD,EAAMrB,CAAN,CAHH1B,CAtGAA,EA2GAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQpB,CAARoB,IACLA,CAAAA,CAAIgC,WAAJhC,CAAgBpB,CAAhBoB,CADKA;AACWpB,GAFlB3B,EAGG,CAAC+C,CAAD,EAAMpB,CAAN,CAHH3B,CA3GAA,EAgHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,gBAAnBA,EAAqCqC,CAArCrC,CAhHAI,EAiHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,gBAAnBA,EAAqCsC,CAArCtC,CAjHAI,EAkHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,OAAnBA,EAA4BuC,CAA5BvC,CAlHAI,EAmHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,UAAnBA,EAA+BwC,CAA/BxC,CAnHAI,EAoHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,MAAnBA,EAA2ByC,CAA3BzC,CApHAI,EAqHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,WAAnBA,EAAgC2C,CAAhC3C,CArHAI,EAsHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,SAAnBA,EAA8B0C,CAA9B1C,CAtHAI,EAuHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,MAAnBA,EAA2B4C,CAA3B5C,CAvHAI,EAwHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,mBAAnBA,EAAwC6C,CAAxC7C,CAxHAI,EAyHAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,WAAnBA,EAAgC8C,CAAhC9C,CAzHAI,EA0HAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,YAAnBA,EAAiC+C,CAAjC/C,CA1HAI,EA2HAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,aAAnBA,EAAkCgD,CAAlChD,CA3HAI,EA4HAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,cAAnBA,EAAmCiD,CAAnCjD,CA5HAI,EA6HAJ,CAAAA,CAAcmD,CAAdnD,EAAmB,YAAnBA,EAAiCkD,CAAjClD,CA7HAI,EAgIEU,CAAAA,CAAAA,aAAAA,CAAAA,CAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EACEA,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AAAKG,IAAAA,EAAAA,EAAIA,CAATH;AAAaI,IAAAA,KAAAA,EAAOA,CAApBJ;AAA2BS,IAAAA,SAAAA,EAAWA,CAAtCT;AAAiDsE,IAAAA,GAAAA,EAAK9B;AAAtDxC,GAAAA,CADFA,EAEGqC,CAAAA,IACCrC,CAAAA,CAAAA,aAAAA,CAACD,CAAAA,CAAgBwE,QAAjBvE,EAAiBuE;AAASC,IAAAA,KAAAA,EAAOnC;AAAhBkC,GAAjBvE,EACGK,CADHL,CAHJA,CADF;AAKSK,CDvYX;AAAA,IEKMoE,CAAAA,GAAS,UAACC,CAAD,EAACA;AACd,MAAMpB,CAAAA,GAAWqB,CAAAA,CAAW5E,CAAX4E,CAAjB;AACA,MAAA,CAAKrB,CAAL,EACE,MAAA,IAAUsB,KAAV,CAAUA,CAENF,CAAAA,GAAgBA,CAAAA,GAAgB,YAAhCA,GAA+C,QAFzCE,IAEyC,mCAFnD,CAAA;AAOF,SAAOtB,CAAP;AAAOA,CFfT;AAAA,IGoDMuB,CAAAA,GAAwC,UAAA,CAAA,EAAA;AAAA,MAC5C1E,CAAAA,GAAAA,CAAAA,CAAAA,EAD4C;AAAA,MAE5CM,CAAAA,GAAAA,CAAAA,CAAAA,SAF4C;AAAA,MAG5CL,CAAAA,GAAAA,CAAAA,CAAAA,KAH4C;AAAA,MAI5CiC,CAAAA,GAAAA,CAAAA,CAAAA,GAJ4C;AAAA,MAK5CyC,CAAAA,GAAAA,CAAAA,CAAAA,QAL4C;AAAA,MAM5CC,CAAAA,GAAAA,CAAAA,CAAAA,MAN4C;AAAA,MAO5C1E,CAAAA,GAAAA,CAAAA,CAAAA,QAP4C;AAAA,MAQ5C2E,CAAAA,GAAAA,CAAAA,CAAAA,QAR4C;AAAA,MAS5CC,CAAAA,GAAAA,CAAAA,CAAAA,cAT4C;AAAA,MAU5CC,CAAAA,GAAAA,CAAAA,CAAAA,KAV4C;AAAA,MAW5CC,CAAAA,GAAAA,CAAAA,CAAAA,SAX4C;AAAA,MAY5CC,CAAAA,GAAAA,CAAAA,CAAAA,MAZ4C;AAAA,MAa5C9D,CAAAA,GAAAA,CAAAA,CAAAA,QAb4C;AAAA,MAetCkB,CAAAA,GAAYC,CAAAA,CAAO4C,QAAAA,CAASC,aAATD,CAAuB,KAAvBA,CAAP5C,CAf0B;AAAA,MAiBtC8C,CAAAA,GAAaC,CAAAA,CAAQ,YAAA;AACzB,QAAMC,CAAAA,GAAkB,IAAI/F,KAAAA,CAAMC,IAAND,CAAWmF,UAAf,CAA0B;AAChDG,MAAAA,QAAAA,EAAUA,CADsC;AAEhDC,MAAAA,cAAAA,EAAgBA,CAFgC;AAGhDC,MAAAA,KAAAA,EAAOA,CAHyC;AAIhDC,MAAAA,SAAAA,EAAWA,CAJqC;AAKhDC,MAAAA,MAAAA,EAAQA,CALwC;AAMhDM,MAAAA,OAAAA,EAASlD,CAAAA,CAAUK,OAN6B;AAOhDiC,MAAAA,QAAAA,EAAUA;AAPsC,KAA1B,CAAxB;AAUA,WADAtC,CAAAA,CAAUK,OAAVL,CAAkBpC,KAAlBoC,CAAwBmD,UAAxBnD,GAAqC,QAArCA,EACOiD,CAAP;AAAOA,GAXUD,EAahB,CAACP,CAAD,EAAiBE,CAAjB,CAbgBK,CAjByB;AAgF5C,SAhDAlG,CAAAA,CAAU,YAAA;AAER,WADAiG,CAAAA,CAAWK,IAAXL,CAAgBlD,CAAhBkD,EAAqBR,CAArBQ,GAAqBR,YAAAA;AAEnBQ,MAAAA,CAAAA,CAAWM,KAAXN;AAAWM,KADb;AACaA,GAHfvG,EAMG,CAAC+C,CAAD,EAAM0C,CAAN,CANHzF,CAAAA,EAQAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAASiE,CAATjE,CAAVA;AAAmBiE,GADzBjG,EAEG,CAACiG,CAAD,EAAajE,CAAb,CAFHhC,CARAA,EAYAA,CAAAA,CAAU,YAAA;AACHiG,IAAAA,CAAAA,IACLA,CAAAA,CAAWO,WAAXP,CAAuBT,CAAvBS,CADKA;AACkBT,GAFzBxF,EAGG,CAACiG,CAAD,EAAaT,CAAb,CAHHxF,CAZAA,EAiBAA,CAAAA,CAAU,YAAA;AACHiG,IAAAA,CAAAA,IAAeP,CAAfO,IACLA,CAAAA,CAAWQ,WAAXR,CAAuBP,CAAvBO,CADKA;AACkBP,GAFzB1F,EAGG,CAACiG,CAAD,EAAaP,CAAb,CAHH1F,CAjBAA,EAsBAA,CAAAA,CAAU,YAAA;AACHiG,IAAAA,CAAAA,IAAeL,CAAfK,IACLA,CAAAA,CAAWS,QAAXT,CAAoBL,CAApBK,CADKA;AACeL,GAFtB5F,EAGG,CAACiG,CAAD,EAAaL,CAAb,CAHH5F,CAtBAA,EA2BAA,CAAAA,CAAU,YAAA;AACHiG,IAAAA,CAAAA,IAAeH,CAAfG,IACLA,CAAAA,CAAWU,SAAXV,CAAqBH,CAArBG,CADKA;AACgBH,GAFvB9F,EAGG,CAACiG,CAAD,EAAaH,CAAb,CAHH9F,CA3BAA,EAgCAA,CAAAA,CAAU,YAAA;AACJa,IAAAA,CAAAA,KAAIqC,CAAAA,CAAUK,OAAVL,CAAkBrC,EAAlBqC,GAAuBrC,CAA3BA,CAAAA;AAA2BA,GADjCb,EAEG,CAACa,CAAD,CAFHb,CAhCAA,EAoCAA,CAAAA,CAAU,YAAA;AACJmB,IAAAA,CAAAA,KAAW+B,CAAAA,CAAUK,OAAVL,CAAkB/B,SAAlB+B,GAA8B/B,CAAzCA,CAAAA;AAAyCA,GAD/CnB,EAEG,CAACmB,CAAD,CAFHnB,CApCAA,EAwCAA,CAAAA,CAAU,YAAA;AACR,QAAIc,CAAJ,EACE,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAA2B8F,MAAAA,CAAOC,OAAPD,CAAe9F,CAAf8F,CAA3B,EAA0C9F,CAAAA,GAAAA,CAAAA,CAAAA,MAA1C,EAA0CA,CAAAA,EAA1C,EAAkD;AAA7C,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACHoC,MAAAA,CAAAA,CAAUK,OAAVL,CAAkBpC,KAAlBoC,CAAkBpC,CAAAA,CAAAA,CAAAA,CAAlBoC,IAAkBpC,CAAAA,CAAAA,CAAAA,CAAlBoC;AAAkBpC;AAAAA,GAHxBd,EAMG,CAACc,CAAD,CANHd,CAxCAA,EAgDO8G,CAAAA,CAASC,YAATD,CAAsB/F,CAAtB+F,EAAgC5D,CAAAA,CAAUK,OAA1CuD,CAAP;AAAiDvD,CHpInD;AAAA,IIEayD,CAAAA,GACXtG,CAAAA,CAAMC,aAAND,CAAMC,KACJR,CADFO,CJHF;AAAA,IIoHMuG,CAAAA,GAAkD,UAAA,CAAA,EAAA;AAAA,MACtDlG,CAAAA,GAAAA,CAAAA,CAAAA,QADsD;AAAA,MAEtDmG,CAAAA,GAAAA,CAAAA,CAAAA,aAFsD;AAAA,MAGtDC,CAAAA,GAAAA,CAAAA,CAAAA,UAHsD;AAAA,MAItDC,CAAAA,GAAAA,CAAAA,CAAAA,SAJsD;AAAA,MAKtDC,CAAAA,GAAAA,CAAAA,CAAAA,gBALsD;AAAA,MAMtDC,CAAAA,GAAAA,CAAAA,CAAAA,QANsD;AAAA,MAOtDC,CAAAA,GAAAA,CAAAA,CAAAA,SAPsD;AAAA,MAQtDC,CAAAA,GAAAA,CAAAA,CAAAA,cARsD;AAAA,MAStD7F,CAAAA,GAAAA,CAAAA,CAAAA,QATsD;AAAA,MAUtD8F,CAAAA,GAAAA,CAAAA,CAAAA,MAVsD;AAAA,MAWtDC,CAAAA,GAAAA,CAAAA,CAAAA,KAXsD;AAAA,MAYtDC,CAAAA,GAAAA,CAAAA,CAAAA,cAZsD;AAAA,MAatDC,CAAAA,GAAAA,CAAAA,CAAAA,iBAbsD;AAAA,MActDC,CAAAA,GAAAA,CAAAA,CAAAA,WAdsD;AAAA,MAetDC,CAAAA,GAAAA,CAAAA,CAAAA,YAfsD;AAAA,MAgBtDC,CAAAA,GAAAA,CAAAA,CAAAA,aAhBsD;AAAA,MAiBtDC,CAAAA,GAAAA,CAAAA,CAAAA,mBAjBsD;AAAA,MAkBtDhG,CAAAA,GAAAA,CAAAA,CAAAA,QAlBsD;AAAA,MAoBhDe,CAAAA,GAAMoC,CAAAA,CAAAA,iBAAAA,CApB0C;AAAA,MAoB1CA,CAAAA,GAEVlC,CAAAA,EAtBoD;AAAA,MAqB/CgF,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CArB+C;AAAA,MAqBhCC,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CArBgC;AAgHtD,SAxFAlI,CAAAA,CAAU,YAAA;AACR,QAAKoD,MAAAA,CAAOhD,KAAPgD,CAAa/C,IAAb+C,CAAkB6D,eAAvB,EAAA;AAMA,UAAMkB,CAAAA,GAAU,IAAI/H,KAAAA,CAAMC,IAAND,CAAW6G,eAAf,CAA+B;AAC7CC,QAAAA,aAAAA,EAAAA,CAD6C;AAE7CC,QAAAA,UAAAA,EAAAA,CAF6C;AAG7CC,QAAAA,SAAAA,EAAAA,CAH6C;AAI7CC,QAAAA,gBAAAA,EAAAA,CAJ6C;AAK7CC,QAAAA,QAAAA,EAAAA,CAL6C;AAM7CC,QAAAA,SAAAA,EAAAA,CAN6C;AAO7CC,QAAAA,cAAAA,EAAAA,CAP6C;AAQ7C7F,QAAAA,QAAAA,EAAAA,CAR6C;AAS7C8F,QAAAA,MAAAA,EAAAA,CAT6C;AAU7CC,QAAAA,KAAAA,EAAAA;AAV6C,OAA/B,CAAhB;AAaAQ,MAAAA,CAAAA,CAAiBC,CAAjBD,CAAAA;AAAiBC,KAnBjB,MACE9E,OAAAA,CAAQC,IAARD,CACE,yFADFA;AACE,GAHNrD,EAsBG,EAtBHA,CAAAA,EAwBAA,CAAAA,CAAU,YAAA;AAAA,YACRiI,CADQ,IACRA,CAAAA,CAAejF,MAAfiF,CAAsBlF,CAAtBkF,CADQ;AACclF,GADxB/C,EAEG,CAAC+C,CAAD,EAAMkF,CAAN,CAFHjI,CAxBAA,EA4BAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAiBjG,CAAjBiG,IAA2BjG,CAAAA,CAASiG,CAATjG,CAA3BiG;AAAoCA,GAD1CjI,EAEG,CAACiI,CAAD,EAAgBjG,CAAhB,CAFHhC,CA5BAA,EAgCAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAiBX,CAAjBW,KACFA,CAAAA,CAAcG,WAAdH,CAA0BX,CAA1BW,GACAA,CAAAA,CAAcI,MAAdJ,EAFEA;AAEYI,GAHlBrI,EAKG,CAACiI,CAAD,EAAgBX,CAAhB,CALHtH,CAhCAA,EAuCAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAiBT,CAAjBS,KACFA,CAAAA,CAAcK,iBAAdL,CAAgCT,CAAhCS,GACAA,CAAAA,CAAcI,MAAdJ,EAFEA;AAEYI,GAHlBrI,EAKG,CAACiI,CAAD,EAAgBT,CAAhB,CALHxH,CAvCAA,EA8CAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAAA,KAA0C,CAA1CA,KAAwBf,CAAxBe,KACFA,CAAAA,CAAcM,gBAAdN,CAA+Bf,CAA/Be,GACAA,CAAAA,CAAcI,MAAdJ,EAFEA;AAEYI,GAHlBrI,EAKG,CAACiI,CAAD,EAAgBf,CAAhB,CALHlH,CA9CAA,EAqDAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAiBtG,CAAjBsG,KACFA,CAAAA,CAAclD,WAAdkD,CAA0BtG,CAA1BsG,GACAA,CAAAA,CAAcI,MAAdJ,EAFEA;AAEYI,GAHlBrI,EAKG,CAACiI,CAAD,EAAgBtG,CAAhB,CALH3B,CArDAA,EA4DAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAiBP,CAAjBO,KACFA,CAAAA,CAAcO,QAAdP,CAAuBP,CAAvBO,GACAA,CAAAA,CAAcI,MAAdJ,EAFEA;AAEYI,GAHlBrI,EAKG,CAACiI,CAAD,EAAgBP,CAAhB,CALH1H,CA5DAA,EAmEAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAiBd,CAAjBc,KACFA,CAAAA,CAAcQ,aAAdR,CAA4Bd,CAA5Bc,GACAA,CAAAA,CAAcI,MAAdJ,EAFEA;AAEYI,GAHlBrI,EAKG,CAACiI,CAAD,EAAgBd,CAAhB,CALHnH,CAnEAA,EA0EAA,CAAAA,CAAU,YAAA;AACJiI,IAAAA,CAAAA,IAAiBR,CAAjBQ,KACFA,CAAAA,CAAcS,SAAdT,CAAwBR,CAAxBQ,GACAA,CAAAA,CAAcI,MAAdJ,EAFEA;AAEYI,GAHlBrI,EAKG,CAACiI,CAAD,EAAgBR,CAAhB,CALHzH,CA1EAA,EAiFAJ,CAAAA,CAAcqI,CAAdrI,EAA6B,cAA7BA,EAA6C+H,CAA7C/H,CAjFAI,EAkFAJ,CAAAA,CAAcqI,CAAdrI,EAA6B,aAA7BA,EAA4CmI,CAA5CnI,CAlFAI,EAmFAJ,CAAAA,CAAcqI,CAAdrI,EAA6B,YAA7BA,EAA2CkI,CAA3ClI,CAnFAI,EAoFAJ,CAAAA,CAAcqI,CAAdrI,EAA6B,iBAA7BA,EAAgDgI,CAAhDhI,CApFAI,EAqFAJ,CAAAA,CAAcqI,CAAdrI,EAA6B,mBAA7BA,EAAkDoI,CAAlDpI,CArFAI,EAsFAJ,CAAAA,CAAcqI,CAAdrI,EAA6B,WAA7BA,EAA0CiI,CAA1CjI,CAtFAI,EAwFKiI,CAAAA,GAKHvH,CAAAA,CAAAA,aAAAA,CAACsG,CAAAA,CAA+B/B,QAAhCvE,EAAgCuE;AAASC,IAAAA,KAAAA,EAAO+C;AAAhBhD,GAAhCvE,EACGK,CADHL,CALGuH,GAMAlH,IANL;AAMKA,CJ1OP;AAAA,IK2HM4H,CAAAA,GAAgC,UAAA,CAAA,EAAA;AAAA,MACpC5F,CAAAA,GAAAA,CAAAA,CAAAA,GADoC;AAAA,MAEpCyC,CAAAA,GAAAA,CAAAA,CAAAA,QAFoC;AAAA,MAGpCzE,CAAAA,GAAAA,CAAAA,CAAAA,QAHoC;AAAA,MAIpC2E,CAAAA,GAAAA,CAAAA,CAAAA,QAJoC;AAAA,MAKpC0B,CAAAA,GAAAA,CAAAA,CAAAA,SALoC;AAAA,MAMpC9F,CAAAA,GAAAA,CAAAA,CAAAA,SANoC;AAAA,MAOpCsH,CAAAA,GAAAA,CAAAA,CAAAA,KAPoC;AAAA,MAQpCC,CAAAA,GAAAA,CAAAA,CAAAA,iBARoC;AAAA,MASpC7G,CAAAA,GAAAA,CAAAA,CAAAA,QAToC;AAAA,MAUpCG,CAAAA,GAAAA,CAAAA,CAAAA,OAVoC;AAAA,MAWpCG,CAAAA,GAAAA,CAAAA,CAAAA,SAXoC;AAAA,MAYpCC,CAAAA,GAAAA,CAAAA,CAAAA,WAZoC;AAAA,MAapCuG,CAAAA,GAAAA,CAAAA,CAAAA,UAboC;AAAA,MAcpCC,CAAAA,GAAAA,CAAAA,CAAAA,WAdoC;AAAA,MAepCC,CAAAA,GAAAA,CAAAA,CAAAA,OAfoC;AAAA,MAgBpCpD,CAAAA,GAAAA,CAAAA,CAAAA,KAhBoC;AAAA,MAiBpCqD,CAAAA,GAAAA,CAAAA,CAAAA,KAjBoC;AAAA,MAkBpCnD,CAAAA,GAAAA,CAAAA,CAAAA,MAlBoC;AAAA,MAoB9BmC,CAAAA,GAAgB5C,CAAAA,CAAW2B,CAAX3B,CApBc;AAAA,MAuB9BI,CAAAA,GAASS,CAAAA,CAAQ,YAAA;AAarB,WAZoB,IAAI9F,KAAAA,CAAMC,IAAND,CAAWuI,MAAf,CAAsB;AACxCjD,MAAAA,QAAAA,EAAAA,CADwC;AAExC0B,MAAAA,SAAAA,EAAAA,CAFwC;AAGxC9F,MAAAA,SAAAA,EAAAA,CAHwC;AAIxCsH,MAAAA,KAAAA,EAAAA,CAJwC;AAKxCI,MAAAA,OAAAA,EAAAA,CALwC;AAMxCpD,MAAAA,KAAAA,EAAAA,CANwC;AAOxCqD,MAAAA,KAAAA,EAAAA,CAPwC;AAQxCnD,MAAAA,MAAAA,EAAAA,CARwC;AASxCN,MAAAA,QAAAA,EAAAA;AATwC,KAAtB,CAYpB;AAHEA,GAVWU,EAeZ,EAfYA,CAvBqB;AAiIpC,SAzFAlG,CAAAA,CAAU,YAAA;AAOR,WANIiI,CAAAA,GACFA,CAAAA,CAAciB,SAAdjB,CAAwBxC,CAAxBwC,CADEA,GAGFxC,CAAAA,CAAOzC,MAAPyC,CAAc1C,CAAd0C,CAHEwC,EAGYlF,YAAAA;AAIVkF,MAAAA,CAAAA,GACFA,CAAAA,CAAckB,YAAdlB,CAA2BxC,CAA3BwC,CADEA,GAGFxC,CAAAA,CAAOzC,MAAPyC,CAAc,IAAdA,CAHEwC;AAGY,KAJlB;AAIkB,GAXpBjI,EAcG,CAAC+C,CAAD,EAAMkF,CAAN,EAAqBxC,CAArB,CAdHzF,CAAAA,EAgBAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAASyD,CAATzD,CAAVA;AAAmByD,GADzBzF,EAEG,CAACyF,CAAD,EAASzD,CAAT,CAFHhC,CAhBAA,EAoBAJ,CAAAA,CAAc6F,CAAd7F,EAAsB,OAAtBA,EAA+BuC,CAA/BvC,CApBAI,EAqBAJ,CAAAA,CAAc6F,CAAd7F,EAAsB,WAAtBA,EAAmC2C,CAAnC3C,CArBAI,EAsBAJ,CAAAA,CAAc6F,CAAd7F,EAAsB,SAAtBA,EAAiC0C,CAAjC1C,CAtBAI,EAuBAJ,CAAAA,CAAc6F,CAAd7F,EAAsB,UAAtBA,EAAkCkJ,CAAlClJ,CAvBAI,EAwBAJ,CAAAA,CAAc6F,CAAd7F,EAAsB,WAAtBA,EAAmCmJ,CAAnCnJ,CAxBAI,EA2BAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAmByC,CAAnBzC,IAEL0C,CAAAA,CAAOe,WAAPf,CAAmBD,CAAnBC,CAFK1C;AAEcyC,GAHrBxF,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcD,CAAd,CAJHxF,CA3BAA,EAkCAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAmB6F,CAAnB7F,IAEL0C,CAAAA,CAAO2D,QAAP3D,CAAgBmD,CAAhBnD,CAFK1C;AAEW6F,GAHlB5I,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcmD,CAAd,CAJH5I,CAlCAA,EAyCAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAmB2C,CAAnB3C,IAEL0C,CAAAA,CAAOgB,WAAPhB,CAAmBC,CAAnBD,CAFK1C;AAEc2C,GAHrB1F,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcC,CAAd,CAJH1F,CAzCAA,EAgDAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAQ0C,KAA+B,CAA/BA,KAAiB2B,CAAzBrE,IAEL0C,CAAAA,CAAO4D,YAAP5D,CAAoB2B,CAApB3B,CAFK1C;AAEeqE,GAHtBpH,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAc2B,CAAd,CAJHpH,CAhDAA,EAuDAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAQ0C,KAA+B,CAA/BA,KAAiBnE,CAAzByB,IAEL0C,CAAAA,CAAOjB,YAAPiB,CAAoBnE,CAApBmE,CAFK1C;AAEezB,GAHtBtB,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcnE,CAAd,CAJHtB,CAvDAA,EA8DAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAmBiG,CAAnBjG,IAEL0C,CAAAA,CAAO6D,UAAP7D,CAAkBuD,CAAlBvD,CAFK1C;AAEaiG,GAHpBhJ,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcuD,CAAd,CAJHhJ,CA9DAA,EAqEAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAmB6C,CAAnB7C,IAEL0C,CAAAA,CAAOiB,QAAPjB,CAAgBG,CAAhBH,CAFK1C;AAEW6C,GAHlB5F,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcG,CAAd,CAJH5F,CArEAA,EA4EAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAmBkG,CAAnBlG,IAEL0C,CAAAA,CAAO8D,QAAP9D,CAAgBwD,CAAhBxD,CAFK1C;AAEWkG,GAHlBjJ,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcwD,CAAd,CAJHjJ,CA5EAA,EAmFAA,CAAAA,CAAU,YAAA;AACH+C,IAAAA,CAAAA,IAAQ0C,CAAR1C,IAAmB+C,CAAnB/C,IAEL0C,CAAAA,CAAOkB,SAAPlB,CAAiBK,CAAjBL,CAFK1C;AAEY+C,GAHnB9F,EAIG,CAAC+C,CAAD,EAAM0C,CAAN,EAAcK,CAAd,CAJH9F,CAnFAA,EAyFIe,CAAAA,GAEAL,CAAAA,CAAAA,aAAAA,CAAC6E,CAAD7E,EAAC6E;AACCC,IAAAA,QAAAA,EAAUA,CADXD;AAECxC,IAAAA,GAAAA,EAAKA,CAFNwC;AAGCE,IAAAA,MAAAA,EAAQA,CAHTF;AAIC1E,IAAAA,EAAAA,EAAAA,QAAIgI,CAAJhI,GAAIgI,KAAAA,CAAJhI,GAAIgI,CAAAA,CAAmBhI,EAJxB0E;AAKCpE,IAAAA,SAAAA,EAAAA,QAAW0H,CAAX1H,GAAW0H,KAAAA,CAAX1H,GAAW0H,CAAAA,CAAmB1H,SAL/BoE;AAMCzE,IAAAA,KAAAA,EAAAA,QAAO+H,CAAP/H,GAAO+H,KAAAA,CAAP/H,GAAO+H,CAAAA,CAAmB/H,KAN3ByE;AAOCG,IAAAA,QAAAA,EAAAA,QAAUmD,CAAVnD,GAAUmD,KAAAA,CAAVnD,GAAUmD,CAAAA,CAAmBnD,QAP9BH;AAQCI,IAAAA,cAAAA,EAAAA,QAAgBkD,CAAhBlD,GAAgBkD,KAAAA,CAAhBlD,GAAgBkD,CAAAA,CAAmBlD,cARpCJ;AASCK,IAAAA,KAAAA,EAAAA,QAAOiD,CAAPjD,GAAOiD,KAAAA,CAAPjD,GAAOiD,CAAAA,CAAmBjD,KAT3BL;AAUCM,IAAAA,SAAAA,EAAAA,QAAWgD,CAAXhD,GAAWgD,KAAAA,CAAXhD,GAAWgD,CAAAA,CAAmBhD,SAV/BN;AAWCO,IAAAA,MAAAA,EAAAA,QAAQ+C,CAAR/C,GAAQ+C,KAAAA,CAAR/C,GAAQ+C,CAAAA,CAAmB/C;AAX5BP,GAAD7E,EAaGK,CAbHL,CAFAK,GAeGA,IAfP;AAeOA,CL3QT;AAAA,IM6KMyI,CAAAA,GAAsC,UAAA,CAAA,EAAA;AAAA,MAC1CZ,CAAAA,GAAAA,CAAAA,CAAAA,KAD0C;AAAA,MAE1CpD,CAAAA,GAAAA,CAAAA,CAAAA,QAF0C;AAAA,MAG1CzE,CAAAA,GAAAA,CAAAA,CAAAA,QAH0C;AAAA,MAI1CqG,CAAAA,GAAAA,CAAAA,CAAAA,SAJ0C;AAAA,MAK1C9F,CAAAA,GAAAA,CAAAA,CAAAA,SAL0C;AAAA,MAM1CuH,CAAAA,GAAAA,CAAAA,CAAAA,iBAN0C;AAAA,MAO1C1G,CAAAA,GAAAA,CAAAA,CAAAA,OAP0C;AAAA,MAQ1CG,CAAAA,GAAAA,CAAAA,CAAAA,SAR0C;AAAA,MAS1CC,CAAAA,GAAAA,CAAAA,CAAAA,WAT0C;AAAA,MAU1CuG,CAAAA,GAAAA,CAAAA,CAAAA,UAV0C;AAAA,MAW1CC,CAAAA,GAAAA,CAAAA,CAAAA,WAX0C;AAAA,MAY1C/G,CAAAA,GAAAA,CAAAA,CAAAA,QAZ0C;AAAA,MAa1CgH,CAAAA,GAAAA,CAAAA,CAAAA,OAb0C;AAAA,MAc1CC,CAAAA,GAAAA,CAAAA,CAAAA,KAd0C;AAAA,MAe1CnD,CAAAA,GAAAA,CAAAA,CAAAA,MAf0C;AAAA,MAiBpC/C,CAAAA,GAAMoC,CAAAA,CAAAA,WAAAA,CAjB8B;AAAA,MAmBpCsE,CAAAA,GAAcvD,CAAAA,CAAQ,YAAA;AAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AAC1B,WACE0C,CAAAA,IACA,IAAIxI,KAAAA,CAAMC,IAAND,CAAWsJ,WAAf,CACEd,CAAAA,CAAMe,GADR,EAEE,IAAIvJ,KAAAA,CAAMC,IAAND,CAAWwJ,IAAf,CAAoBhB,CAAAA,CAAMiB,IAANjB,CAAWkB,KAA/B,EAAsClB,CAAAA,CAAMiB,IAANjB,CAAWmB,MAAjD,CAFF,EAGE;AACEC,MAAAA,GAAAA,EAAAA,SAAAA,CAAAA,GAAKpB,CAAAA,CAAMqB,OAAXD,IAAWC,KAAAA,CAAXD,GAAKpB,CAAAA,CAAeoB,GADtB;AAEEE,MAAAA,MAAAA,EAAAA,SAAAA,CAAAA,GAAQtB,CAAAA,CAAMqB,OAAdC,IAAcD,KAAAA,CAAdC,GAAQtB,CAAAA,CAAesB,MAFzB;AAGEC,MAAAA,MAAAA,EAAAA,CAAAA,SAAAA,CAAAA,GACEvB,CAAAA,CAAMqB,OADRE,IACQF,KAAAA,CADRE,GACQF,CAAAA,CAASE,MADjBA,KAEE,IAAI/J,KAAAA,CAAMC,IAAND,CAAWgK,KAAf,CAAeA,SAAAA,CAAAA,GACbxB,CAAAA,CAAMqB,OADOG,IACPH,KAAAA,CADOG,GACbxB,CAAAA,CAAeuB,MAAfvB,CAAsB9E,CADxB,EACwBA,SAAAA,CAAAA,GACtB8E,CAAAA,CAAMqB,OADgBnG,IAChBmG,KAAAA,CADgBnG,GACtB8E,CAAAA,CAAeuB,MAAfvB,CAAsB7E,CAFxB,CALJ;AASEsG,MAAAA,KAAAA,EAAAA,SAAAA,CAAAA,GAAOzB,CAAAA,CAAMqB,OAAbI,IAAaJ,KAAAA,CAAbI,GAAOzB,CAAAA,CAAeyB,KATxB;AAUEC,MAAAA,YAAAA,EAAAA,CAAAA,SAAAA,CAAAA,GACE1B,CAAAA,CAAMqB,OADRK,IACQL,KAAAA,CADRK,GACQL,CAAAA,CAASK,YADjBA,KAEE,IAAIlK,KAAAA,CAAMC,IAAND,CAAWgK,KAAf,CAAeA,SAAAA,CAAAA,GACbxB,CAAAA,CAAMqB,OADOG,IACPH,KAAAA,CADOG,GACbxB,CAAAA,CAAe0B,YAAf1B,CAA4B9E,CAD9B,EAC8BA,SAAAA,CAAAA,GAC5B8E,CAAAA,CAAMqB,OADsBnG,IACtBmG,KAAAA,CADsBnG,GAC5B8E,CAAAA,CAAe0B,YAAf1B,CAA4B7E,CAF9B,CAZJ;AAgBEwG,MAAAA,UAAAA,EAAAA,CAAAA,SAAAA,CAAAA,GACE3B,CAAAA,CAAMqB,OADRM,IACQN,KAAAA,CADRM,GACQN,CAAAA,CAASM,UADjBA,KAEE,IAAInK,KAAAA,CAAMC,IAAND,CAAWwJ,IAAf,CAAeA,SAAAA,CAAAA,GACbhB,CAAAA,CAAMqB,OADOL,IACPK,KAAAA,CADOL,GACbhB,CAAAA,CAAe2B,UAAf3B,CAA0BkB,KAD5B,EAC4BA,SAAAA,CAAAA,GAC1BlB,CAAAA,CAAMqB,OADoBH,IACpBG,KAAAA,CADoBH,GAC1BlB,CAAAA,CAAe2B,UAAf3B,CAA0BmB,MAF5B;AAlBJ,KAHF,CAFF;AAyBoCA,GA1BlB7D,EA+BjB,CAAC0C,CAAD,CA/BiB1C,CAnBsB;AAAA,MAoDpCsE,CAAAA,GAAiBtE,CAAAA,CAAQ,YAAA;AAC7B,WAAI,SAASV,CAAT,GAASA,IACApF,KAAAA,CAAMC,IAAND,CAAWsD,MADX8B,CACkBA,CAAAA,CAAS7B,GAD3B6B,EACgCA,CAAAA,CAAS5B,GADzC4B,CAAT,GACkD5B,IAE3CxD,KAAAA,CAAMC,IAAND,CAAWyD,MAFgCD,CAEzB4B,CAAAA,CAAS1B,CAFgBF,EAEb4B,CAAAA,CAASzB,CAFIH,EAEDO,QAFCP,EADtD;AAGqDO,GAJhC+B,EAQpB,CAACV,CAAAA,CAAS7B,GAAV,EAAe6B,CAAAA,CAAS5B,GAAxB,EAA6B4B,CAAAA,CAAS1B,CAAtC,EAAyC0B,CAAAA,CAASzB,CAAlD,CARoBmC,CApDmB;AA8D1C,SACExF,CAAAA,CAAAA,aAAAA,CAACiI,CAADjI,EAACiI;AACC5F,IAAAA,GAAAA,EAAKA,CADN4F;AAECnD,IAAAA,QAAAA,EAAUgF,CAFX7B;AAGCC,IAAAA,KAAAA,EAAOa,CAHRd;AAICvB,IAAAA,SAAAA,EAAWA,CAJZuB;AAKCrH,IAAAA,SAAAA,EAAWA,CALZqH;AAMCE,IAAAA,iBAAAA,EAAmBA,CANpBF;AAOCxG,IAAAA,OAAAA,EAASA,CAPVwG;AAQCrG,IAAAA,SAAAA,EAAWA,CARZqG;AASCpG,IAAAA,WAAAA,EAAaA,CATdoG;AAUCG,IAAAA,UAAAA,EAAYA,CAVbH;AAWCI,IAAAA,WAAAA,EAAaA,CAXdJ;AAYC3G,IAAAA,QAAAA,EAAUA,CAZX2G;AAaCK,IAAAA,OAAAA,EAASA,CAbVL;AAcCM,IAAAA,KAAAA,EAAOA,CAdRN;AAeC7C,IAAAA,MAAAA,EAAQA;AAfT6C,GAADjI,EAiBGK,CAjBHL,CADF;AAkBKK,CN7PP;AAAA,IOkDM0J,CAAAA,GAA8C,UAAA,CAAA,EAAA;AAAA,MAClD5J,CAAAA,GAAAA,CAAAA,CAAAA,EADkD;AAAA,MAElDM,CAAAA,GAAAA,CAAAA,CAAAA,SAFkD;AAAA,MAGlDL,CAAAA,GAAAA,CAAAA,CAAAA,KAHkD;AAAA,MAIlD0E,CAAAA,GAAAA,CAAAA,CAAAA,QAJkD;AAAA,MAKlDzE,CAAAA,GAAAA,CAAAA,CAAAA,QALkD;AAAA,MAMlD4E,CAAAA,GAAAA,CAAAA,CAAAA,cANkD;AAAA,MAOlDE,CAAAA,GAAAA,CAAAA,CAAAA,SAPkD;AAAA,MAQlDC,CAAAA,GAAAA,CAAAA,CAAAA,MARkD;AAAA,MASlD9D,CAAAA,GAAAA,CAAAA,CAAAA,QATkD;AAAA,MAW5Ce,CAAAA,GAAMoC,CAAAA,CAAAA,eAAAA,CAXsC;AAAA,MAY5CuF,CAAAA,GAAexE,CAAAA,CAAQ,YAAA;AAC3B,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWsD,MAAtB,CAA6B8B,CAAAA,CAAS7B,GAAtC,EAA2C6B,CAAAA,CAAS5B,GAApD,CAAA;AAAoDA,GADjCsC,EAElB,CAACV,CAAAA,CAAS7B,GAAV,EAAe6B,CAAAA,CAAS5B,GAAxB,CAFkBsC,CAZ6B;AAgBlD,SACExF,CAAAA,CAAAA,aAAAA,CAAC6E,CAAD7E,EAAC6E;AACC1E,IAAAA,EAAAA,EAAIA,CADL0E;AAECpE,IAAAA,SAAAA,EAAWA,CAFZoE;AAGCzE,IAAAA,KAAAA,EAAOA,CAHRyE;AAICI,IAAAA,cAAAA,EAAgBA,CAJjBJ;AAKCM,IAAAA,SAAAA,EAAWA,CALZN;AAMCO,IAAAA,MAAAA,EAAQA,CANTP;AAOCxC,IAAAA,GAAAA,EAAKA,CAPNwC;AAQCC,IAAAA,QAAAA,EAAUkF,CARXnF;AASCvD,IAAAA,QAAAA,EAAUA;AATXuD,GAAD7E,EAWGK,CAXHL,CADF;AAYKK,CP9EP;AAAA,IQuDM4J,CAAAA,GAAoD,UAAA,CAAA,EAAA;AAAA,MACxD9J,CAAAA,GAAAA,CAAAA,CAAAA,EADwD;AAAA,MAExDM,CAAAA,GAAAA,CAAAA,CAAAA,SAFwD;AAAA,MAGxDL,CAAAA,GAAAA,CAAAA,CAAAA,KAHwD;AAAA,MAIxD0E,CAAAA,GAAAA,CAAAA,CAAAA,QAJwD;AAAA,MAKxDzE,CAAAA,GAAAA,CAAAA,CAAAA,QALwD;AAAA,MAMxDqG,CAAAA,GAAAA,CAAAA,CAAAA,SANwD;AAAA,MAOxDwD,CAAAA,GAAAA,CAAAA,CAAAA,OAPwD;AAAA,MAQxDC,CAAAA,GAAAA,CAAAA,CAAAA,OARwD;AAAA,MASxD/E,CAAAA,GAAAA,CAAAA,CAAAA,MATwD;AAAA,MAUxD9D,CAAAA,GAAAA,CAAAA,CAAAA,QAVwD;AAAA,MAYlDe,CAAAA,GAAMoC,CAAAA,CAAAA,kBAAAA,CAZ4C;AAAA,MAalDjC,CAAAA,GAAYC,CAAAA,CAAO4C,QAAAA,CAASC,aAATD,CAAuB,KAAvBA,CAAP5C,CAbsC;AAAA,MAelD2H,CAAAA,GAAkB5E,CAAAA,CAAQ,YAAA;AAC9B,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWsD,MAAtB,CAA6B8B,CAAAA,CAAS7B,GAAtC,EAA2C6B,CAAAA,CAAS5B,GAApD,CAAA;AAAoDA,GAD9BsC,EAErB,CAACV,CAAAA,CAAS7B,GAAV,EAAe6B,CAAAA,CAAS5B,GAAxB,CAFqBsC,CAfgC;AAAA,MAmBlD6E,CAAAA,GAAU7E,CAAAA,CAAQ,YAAA;AAUtB,WAT2B,IAAI9F,KAAAA,CAAMC,IAAND,CAAW4K,aAAf,CAA6B;AACtD5D,MAAAA,SAAAA,EAAWA,CAD2C;AAEtDwD,MAAAA,OAAAA,EAASA,CAF6C;AAGtDC,MAAAA,OAAAA,EAASA,CAH6C;AAItD/E,MAAAA,MAAAA,EAAQA,CAJ8C;AAKtDN,MAAAA,QAAAA,EAAUsF,CAL4C;AAMtD1E,MAAAA,OAAAA,EAASlD,CAAAA,CAAUK;AANmC,KAA7B,CAS3B;AAHqBA,GAPP2C,EAab,CAACkB,CAAD,EAAYwD,CAAZ,EAAqBC,CAArB,CAba3E,CAnBwC;AAwExD,SAtCAlG,CAAAA,CAAU,YAAA;AACR,QAAK+C,CAAL,EAGA,OADAgI,CAAAA,CAAQ/H,MAAR+H,CAAehI,CAAfgI,GAAehI,YAAAA;AAEbgI,MAAAA,CAAAA,CAAQ/H,MAAR+H,CAAe,IAAfA;AAAe,KADjB;AACiB,GALnB/K,EAOG,CAAC+C,CAAD,EAAMgI,CAAN,CAPH/K,CAAAA,EASAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAAS+I,CAAT/I,CAAVA;AAAmB+I,GADzB/K,EAEG,CAAC+K,CAAD,EAAU/I,CAAV,CAFHhC,CATAA,EAaAA,CAAAA,CAAU,YAAA;AACR+K,IAAAA,CAAAA,CAAQvE,WAARuE,CAAoBD,CAApBC;AAAoBD,GADtB9K,EAEG,CAAC+K,CAAD,EAAUD,CAAV,CAFH9K,CAbAA,EAiBAA,CAAAA,CAAU,YAAA;AACH8F,IAAAA,CAAAA,IACLiF,CAAAA,CAAQpE,SAARoE,CAAkBjF,CAAlBiF,CADKjF;AACaA,GAFpB9F,EAGG,CAAC+K,CAAD,EAAUjF,CAAV,CAHH9F,CAjBAA,EAsBAA,CAAAA,CAAU,YAAA;AACJa,IAAAA,CAAAA,KAAIqC,CAAAA,CAAUK,OAAVL,CAAkBrC,EAAlBqC,GAAuBrC,CAA3BA,CAAAA;AAA2BA,GADjCb,EAEG,CAACa,CAAD,CAFHb,CAtBAA,EA0BAA,CAAAA,CAAU,YAAA;AACJmB,IAAAA,CAAAA,KAAW+B,CAAAA,CAAUK,OAAVL,CAAkB/B,SAAlB+B,GAA8B/B,CAAzCA,CAAAA;AAAyCA,GAD/CnB,EAEG,CAACmB,CAAD,CAFHnB,CA1BAA,EA8BAA,CAAAA,CAAU,YAAA;AACR,QAAIc,CAAJ,EACE,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAA2B8F,MAAAA,CAAOC,OAAPD,CAAe9F,CAAf8F,CAA3B,EAA0C9F,CAAAA,GAAAA,CAAAA,CAAAA,MAA1C,EAA0CA,CAAAA,EAA1C,EAAkD;AAA7C,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACHoC,MAAAA,CAAAA,CAAUK,OAAVL,CAAkBpC,KAAlBoC,CAAkBpC,CAAAA,CAAAA,CAAAA,CAAlBoC,IAAkBpC,CAAAA,CAAAA,CAAAA,CAAlBoC;AAAkBpC;AAAAA,GAHxBd,EAMG,CAACc,CAAD,CANHd,CA9BAA,EAsCOiL,CAAAA,CAASlE,YAATkE,CAAsBlK,CAAtBkK,EAAgC/H,CAAAA,CAAUK,OAA1C0H,CAAP;AAAiD1H,CR/HnD;AAAA,ISYM2H,CAAAA,GAAgD,UAAA,CAAA,EAAA;AAAA,MAAA,CAAA,GAAA,CAAA,CACpD1F,QADoD;AAAA,MACpDA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAWpF,KAAAA,CAAMC,IAAND,CAAW+K,eAAX/K,CAA2BgL,QAAtC5F,GAAsC4F,CADc;AAAA,MAG9CrI,CAAAA,GAAMoC,CAAAA,CAAAA,gBAAAA,CAHwC;AAAA,MAK9CkG,CAAAA,GAAiBnF,CAAAA,CAAQ,YAAA;AAC7B,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAW8K,cAAtB,EAAA;AAAsBA,GADDhF,EAEpB,EAFoBA,CAL6B;AAmBpD,SAVAlG,CAAAA,CAAU,YAAA;AAGR,WAFA+C,CAAAA,CAAIuI,UAAJvI,CAAesI,CAAftI,EAA+ByC,CAA/BzC,GAA+ByC,YAAAA;AAG7BzC,MAAAA,CAAAA,CAAIwI,aAAJxI,CAAkBsI,CAAlBtI;AAAkBsI,KADpB;AACoBA,GAJtBrL,EAQG,CAAC+C,CAAD,EAAMyC,CAAN,CARHxF,CAAAA,EAQSwF,IAET;AAFSA,CT7BX;AAAA,IUWMgG,CAAAA,GAA0C,UAAA,CAAA,EAAA;AAAA,MAAA,CAAA,GAAA,CAAA,CAC9ChG,QAD8C;AAAA,MAC9CA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAWpF,KAAAA,CAAMC,IAAND,CAAW+K,eAAX/K,CAA2BqL,KAAtCjG,GAAsCiG,CADQ;AAAA,MAGxC1I,CAAAA,GAAMoC,CAAAA,CAAAA,aAAAA,CAHkC;AAAA,MAKxCqG,CAAAA,GAActF,CAAAA,CAAQ,YAAA;AAC1B,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWoL,WAAtB,EAAA;AAAsBA,GADJtF,EAEjB,EAFiBA,CAL0B;AAmB9C,SAVAlG,CAAAA,CAAU,YAAA;AAGR,WAFA+C,CAAAA,CAAIuI,UAAJvI,CAAeyI,CAAfzI,EAA4ByC,CAA5BzC,GAA4ByC,YAAAA;AAG1BzC,MAAAA,CAAAA,CAAIwI,aAAJxI,CAAkByI,CAAlBzI;AAAkByI,KADpB;AACoBA,GAJtBxL,EAQG,CAAC+C,CAAD,EAAMyC,CAAN,CARHxF,CAAAA,EAQSwF,IAET;AAFSA,CV5BX;AAAA,IWWMkG,CAAAA,GAAsC,UAAA,CAAA,EAAA;AAAA,MAAG5L,CAAAA,GAAAA,CAAAA,CAAAA,IAAH;AAAA,MACpCiD,CAAAA,GAAMoC,CAAAA,CAAAA,WAAAA,CAD8B;AAa1C,SAVAnF,CAAAA,CAAU,YAAA;AAGR,WAFA+C,CAAAA,CAAI4I,mBAAJ5I,CAAwBjD,CAAxBiD,GAAwBjD,YAAAA;AAGtBiD,MAAAA,CAAAA,CAAI6I,sBAAJ7I,CAA2BjD,CAA3BiD;AAA2BjD,KAD7B;AAC6BA,GAJ/BE,EAQG,CAAC+C,CAAD,EAAMjD,CAAN,CARHE,CAAAA,EAQSF,IAET;AAFSA,CXtBX;AAAA,IYyFM+L,CAAAA,GAAgC,UAAA,CAAA,EAAA;AAAA,MACpC7K,CAAAA,GAAAA,CAAAA,CAAAA,MADoC;AAAA,MAEpC8K,CAAAA,GAAAA,CAAAA,CAAAA,MAFoC;AAAA,MAGpCC,CAAAA,GAAAA,CAAAA,CAAAA,SAHoC;AAAA,MAIpCC,CAAAA,GAAAA,CAAAA,CAAAA,WAJoC;AAAA,MAKpCC,CAAAA,GAAAA,CAAAA,CAAAA,WALoC;AAAA,MAMpCC,CAAAA,GAAAA,CAAAA,CAAAA,aANoC;AAAA,MAOpCC,CAAAA,GAAAA,CAAAA,CAAAA,WAPoC;AAAA,MAQpCC,CAAAA,GAAAA,CAAAA,CAAAA,YARoC;AAAA,MASpCtG,CAAAA,GAAAA,CAAAA,CAAAA,MAToC;AAAA,MAUpCuG,CAAAA,GAAAA,CAAAA,CAAAA,WAVoC;AAAA,MAWpCC,CAAAA,GAAAA,CAAAA,CAAAA,UAXoC;AAAA,MAYpCC,CAAAA,GAAAA,CAAAA,CAAAA,WAZoC;AAAA,MAapCC,CAAAA,GAAAA,CAAAA,CAAAA,WAboC;AAAA,MAcpCrK,CAAAA,GAAAA,CAAAA,CAAAA,OAdoC;AAAA,MAepCH,CAAAA,GAAAA,CAAAA,CAAAA,QAfoC;AAAA,MAiB9Be,CAAAA,GAAMoC,CAAAA,CAAAA,QAAAA,CAjBwB;AAAA,MAmB9BsH,CAAAA,GAAevG,CAAAA,CAAQ,YAAA;AAC3B,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWsD,MAAtB,CAA6B1C,CAAAA,CAAO2C,GAApC,EAAyC3C,CAAAA,CAAO4C,GAAhD,CAAA;AAAgDA,GAD7BsC,EAElB,CAAClF,CAAAA,CAAO2C,GAAR,EAAa3C,CAAAA,CAAO4C,GAApB,CAFkBsC,CAnBe;AAAA,MAuB9BwG,CAAAA,GAASxG,CAAAA,CAAQ,YAAA;AACrB,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWyL,MAAtB,CAA6B;AAC3B7K,MAAAA,MAAAA,EAAQyL,CADmB;AAE3BX,MAAAA,MAAAA,EAAAA,CAF2B;AAG3BC,MAAAA,SAAAA,EAAAA,CAH2B;AAI3BC,MAAAA,WAAAA,EAAAA,CAJ2B;AAK3BC,MAAAA,WAAAA,EAAAA,CAL2B;AAM3BC,MAAAA,aAAAA,EAAAA,CAN2B;AAO3BC,MAAAA,WAAAA,EAAAA,CAP2B;AAQ3BC,MAAAA,YAAAA,EAAAA,CAR2B;AAS3BtG,MAAAA,MAAAA,EAAAA;AAT2B,KAA7B,CAAA;AASEA,GAVWI,EAaZ,EAbYA,CAvBqB;AAuFpC,SAjDAlG,CAAAA,CAAU,YAAA;AAER,WADA0M,CAAAA,CAAO1J,MAAP0J,CAAc3J,CAAd2J,GAAc3J,YAAAA;AAEZ2J,MAAAA,CAAAA,CAAO1J,MAAP0J,CAAc,IAAdA;AAAc,KADhB;AACgB,GAHlB1M,EAKG,CAAC+C,CAAD,EAAM2J,CAAN,CALH1M,CAAAA,EAOAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAAS0K,CAAT1K,CAAVA;AAAmB0K,GADzB1M,EAEG,CAAC0M,CAAD,EAAS1K,CAAT,CAFHhC,CAPAA,EAWAA,CAAAA,CAAU,YAAA;AACJ0M,IAAAA,CAAAA,IAAQA,CAAAA,CAAOlG,WAAPkG,CAAmBD,CAAnBC,CAARA;AAA2BD,GADjCzM,EAEG,CAAC0M,CAAD,EAASD,CAAT,CAFHzM,CAXAA,EAeAA,CAAAA,CAAU,YAAA;AACR0M,IAAAA,CAAAA,CAAOC,SAAPD,CAAiBZ,CAAjBY;AAAiBZ,GADnB9L,EAEG,CAAC0M,CAAD,EAASZ,CAAT,CAFH9L,CAfAA,EAmBAA,CAAAA,CAAU,YAAA;AACH8F,IAAAA,CAAAA,IACL4G,CAAAA,CAAO/F,SAAP+F,CAAiB5G,CAAjB4G,CADK5G;AACYA,GAFnB9F,EAGG,CAAC0M,CAAD,EAAS5G,CAAT,CAHH9F,CAnBAA,EAwBAA,CAAAA,CAAU,YAAA;AACR0M,IAAAA,CAAAA,CAAOE,UAAPF,CAAkB;AAChBX,MAAAA,SAAAA,EAAAA,CADgB;AAEhBC,MAAAA,WAAAA,EAAAA,CAFgB;AAGhBC,MAAAA,WAAAA,EAAAA,CAHgB;AAIhBC,MAAAA,aAAAA,EAAAA,CAJgB;AAKhBC,MAAAA,WAAAA,EAAAA,CALgB;AAMhBC,MAAAA,YAAAA,EAAAA;AANgB,KAAlBM;AAMEN,GAPJpM,EASG,CACD0M,CADC,EAEDX,CAFC,EAGDC,CAHC,EAIDC,CAJC,EAKDC,CALC,EAMDC,CANC,EAODC,CAPC,CATHpM,CAxBAA,EA2CAJ,CAAAA,CAAc8M,CAAd9M,EAAsB,WAAtBA,EAAmCyM,CAAnCzM,CA3CAI,EA4CAJ,CAAAA,CAAc8M,CAAd9M,EAAsB,UAAtBA,EAAkC0M,CAAlC1M,CA5CAI,EA6CAJ,CAAAA,CAAc8M,CAAd9M,EAAsB,WAAtBA,EAAmC2M,CAAnC3M,CA7CAI,EA8CAJ,CAAAA,CAAc8M,CAAd9M,EAAsB,WAAtBA,EAAmC4M,CAAnC5M,CA9CAI,EA+CAJ,CAAAA,CAAc8M,CAAd9M,EAAsB,OAAtBA,EAA+BuC,CAA/BvC,CA/CAI,EA+C+BmC,IAE/B;AAF+BA,CZ9KjC;AAAA,Ia8EM0K,CAAAA,GAAoC,UAAA,CAAA,EAAA;AAAA,MACxCC,CAAAA,GAAAA,CAAAA,CAAAA,IADwC;AAAA,MAExCC,CAAAA,GAAAA,CAAAA,CAAAA,QAFwC;AAAA,MAGxC5K,CAAAA,GAAAA,CAAAA,CAAAA,OAHwC;AAAA,MAIxCqK,CAAAA,GAAAA,CAAAA,CAAAA,WAJwC;AAAA,MAKxCD,CAAAA,GAAAA,CAAAA,CAAAA,WALwC;AAAA,MAMxCD,CAAAA,GAAAA,CAAAA,CAAAA,UANwC;AAAA,MAOxCD,CAAAA,GAAAA,CAAAA,CAAAA,WAPwC;AAAA,MAQxCrK,CAAAA,GAAAA,CAAAA,CAAAA,QARwC;AAAA,MASxCiK,CAAAA,GAAAA,CAAAA,CAAAA,WATwC;AAAA,MAUxCC,CAAAA,GAAAA,CAAAA,CAAAA,aAVwC;AAAA,MAWxCC,CAAAA,GAAAA,CAAAA,CAAAA,WAXwC;AAAA,MAYxCC,CAAAA,GAAAA,CAAAA,CAAAA,YAZwC;AAAA,MAaxCtG,CAAAA,GAAAA,CAAAA,CAAAA,MAbwC;AAAA,MAelC/C,CAAAA,GAAMoC,CAAAA,CAAAA,UAAAA,CAf4B;AAAA,MAiBlC6H,CAAAA,GAAe9G,CAAAA,CAAQ,YAAA;AAC3B,WAAK4G,CAAAA,CAAkBG,KAAlBH,CAAwB,UAACI,CAAD,EAACA;AAAAA,aAAMA,CAAAA,YAAaC,KAAnBD;AAAmBC,KAA5CL,IACKA,CAAAA,CAAoB/J,GAApB+J,CAAwB,UAACI,CAAD,EAACA;AAC/B,aAAOA,CAAAA,CAAEnK,GAAFmK,CAAM,UAACE,CAAD,EAACA;AAAAA,eAAAA,IAAUhN,KAAAA,CAAMC,IAAND,CAAWsD,MAArB0J,CAA4BA,CAAAA,CAAEzJ,GAA9ByJ,EAAmCA,CAAAA,CAAExJ,GAArCwJ,CAAAA;AAAqCxJ,OAA5CsJ,CAAP;AAAmDtJ,KAD7CkJ,CADLA,GAKGA,CAAAA,CAAkB/J,GAAlB+J,CAAsB,UAACI,CAAD,EAACA;AAC7B,aAAA,IAAW9M,KAAAA,CAAMC,IAAND,CAAWsD,MAAtB,CAA6BwJ,CAAAA,CAAEvJ,GAA/B,EAAoCuJ,CAAAA,CAAEtJ,GAAtC,CAAA;AAAsCA,KADhCkJ,CALR;AAMwClJ,GAPrBsC,EASlB,CAAC4G,CAAD,CATkB5G,CAjBmB;AAAA,MA4BlCmH,CAAAA,GAAWnH,CAAAA,CAAQ,YAAA;AACvB,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWyM,QAAtB,CAA+B;AAC7BC,MAAAA,IAAAA,EAAME,CADuB;AAE7BD,MAAAA,QAAAA,EAAAA,CAF6B;AAG7Bd,MAAAA,WAAAA,EAAAA,CAH6B;AAI7BC,MAAAA,aAAAA,EAAAA,CAJ6B;AAK7BC,MAAAA,WAAAA,EAAAA,CAL6B;AAM7BC,MAAAA,YAAAA,EAAAA,CAN6B;AAO7BtG,MAAAA,MAAAA,EAAAA;AAP6B,KAA/B,CAAA;AAOEA,GARaI,EAWd,EAXcA,CA5BuB;AAiFxC,SAxCAlG,CAAAA,CAAU,YAAA;AAER,WADAqN,CAAAA,CAASrK,MAATqK,CAAgBtK,CAAhBsK,GAAgBtK,YAAAA;AAAAA,aACHsK,CAAAA,CAASrK,MAATqK,CAAgB,IAAhBA,CADGtK;AACa,KAA7B;AAA6B,GAF/B/C,EAGG,CAAC+C,CAAD,EAAMsK,CAAN,CAHHrN,CAAAA,EAKAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAASqL,CAATrL,CAAVA;AAAmBqL,GADzBrN,EAEG,CAACqN,CAAD,EAAWrL,CAAX,CAFHhC,CALAA,EASAA,CAAAA,CAAU,YAAA;AACRqN,IAAAA,CAAAA,CAAST,UAATS,CAAoB;AAClBN,MAAAA,QAAAA,EAAAA,CADkB;AAElBd,MAAAA,WAAAA,EAAAA,CAFkB;AAGlBC,MAAAA,aAAAA,EAAAA,CAHkB;AAIlBC,MAAAA,WAAAA,EAAAA,CAJkB;AAKlBC,MAAAA,YAAAA,EAAAA;AALkB,KAApBiB;AAKEjB,GANJpM,EAQG,CACDqN,CADC,EAEDN,CAFC,EAGDd,CAHC,EAIDC,CAJC,EAKDC,CALC,EAMDC,CANC,CARHpM,CATAA,EA0BAA,CAAAA,CAAU,YAAA;AACRqN,IAAAA,CAAAA,CAASC,OAATD,CAAiBL,CAAjBK;AAAiBL,GADnBhN,EAEG,CAACqN,CAAD,EAAWL,CAAX,CAFHhN,CA1BAA,EA8BAA,CAAAA,CAAU,YAAA;AACJ8F,IAAAA,CAAAA,IAAQuH,CAAAA,CAAS1G,SAAT0G,CAAmBvH,CAAnBuH,CAARvH;AAA2BA,GADjC9F,EAEG,CAACqN,CAAD,EAAWvH,CAAX,CAFH9F,CA9BAA,EAkCAJ,CAAAA,CAAcyN,CAAdzN,EAAwB,WAAxBA,EAAqCyM,CAArCzM,CAlCAI,EAmCAJ,CAAAA,CAAcyN,CAAdzN,EAAwB,UAAxBA,EAAoC0M,CAApC1M,CAnCAI,EAoCAJ,CAAAA,CAAcyN,CAAdzN,EAAwB,WAAxBA,EAAqC2M,CAArC3M,CApCAI,EAqCAJ,CAAAA,CAAcyN,CAAdzN,EAAwB,WAAxBA,EAAqC4M,CAArC5M,CArCAI,EAsCAJ,CAAAA,CAAcyN,CAAdzN,EAAwB,OAAxBA,EAAiCuC,CAAjCvC,CAtCAI,EAsCiCmC,IAEjC;AAFiCA,Cb7JnC;AAAA,IckFMoL,CAAAA,GAAkC,UAAA,CAAA,EAAA;AAAA,MACtCT,CAAAA,GAAAA,CAAAA,CAAAA,IADsC;AAAA,MAEtC3K,CAAAA,GAAAA,CAAAA,CAAAA,OAFsC;AAAA,MAGtCqK,CAAAA,GAAAA,CAAAA,CAAAA,WAHsC;AAAA,MAItCD,CAAAA,GAAAA,CAAAA,CAAAA,WAJsC;AAAA,MAKtCD,CAAAA,GAAAA,CAAAA,CAAAA,UALsC;AAAA,MAMtCD,CAAAA,GAAAA,CAAAA,CAAAA,WANsC;AAAA,MAOtCrK,CAAAA,GAAAA,CAAAA,CAAAA,QAPsC;AAAA,MAQtCiK,CAAAA,GAAAA,CAAAA,CAAAA,WARsC;AAAA,MAStCC,CAAAA,GAAAA,CAAAA,CAAAA,aATsC;AAAA,MAUtCC,CAAAA,GAAAA,CAAAA,CAAAA,WAVsC;AAAA,MAWtCC,CAAAA,GAAAA,CAAAA,CAAAA,YAXsC;AAAA,MAYtCL,CAAAA,GAAAA,CAAAA,CAAAA,SAZsC;AAAA,MAatCC,CAAAA,GAAAA,CAAAA,CAAAA,WAbsC;AAAA,MActClG,CAAAA,GAAAA,CAAAA,CAAAA,MAdsC;AAAA,MAgBhC/C,CAAAA,GAAMoC,CAAAA,CAAAA,SAAAA,CAhB0B;AAAA,MAkBhCqI,CAAAA,GAActH,CAAAA,CAAQ,YAAA;AAC1B,WAAK4G,CAAAA,CAAkBG,KAAlBH,CAAwB,UAACI,CAAD,EAACA;AAAAA,aAAMA,CAAAA,YAAaC,KAAnBD;AAAmBC,KAA5CL,IACKA,CAAAA,CAAoB/J,GAApB+J,CAAwB,UAACI,CAAD,EAACA;AAC/B,aAAOA,CAAAA,CAAEnK,GAAFmK,CAAM,UAACE,CAAD,EAACA;AAAAA,eAAAA,IAAUhN,KAAAA,CAAMC,IAAND,CAAWsD,MAArB0J,CAA4BA,CAAAA,CAAEzJ,GAA9ByJ,EAAmCA,CAAAA,CAAExJ,GAArCwJ,CAAAA;AAAqCxJ,OAA5CsJ,CAAP;AAAmDtJ,KAD7CkJ,CADLA,GAKGA,CAAAA,CAAkB/J,GAAlB+J,CAAsB,UAACI,CAAD,EAACA;AAC7B,aAAA,IAAW9M,KAAAA,CAAMC,IAAND,CAAWsD,MAAtB,CAA6BwJ,CAAAA,CAAEvJ,GAA/B,EAAoCuJ,CAAAA,CAAEtJ,GAAtC,CAAA;AAAsCA,KADhCkJ,CALR;AAMwClJ,GAPtBsC,EASjB,CAAC4G,CAAD,CATiB5G,CAlBkB;AAAA,MA6BhCuH,CAAAA,GAAUvH,CAAAA,CAAQ,YAAA;AACtB,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWmN,OAAtB,CAA8B;AAC5BT,MAAAA,IAAAA,EAAMU,CADsB;AAE5BzB,MAAAA,SAAAA,EAAAA,CAF4B;AAG5BC,MAAAA,WAAAA,EAAAA,CAH4B;AAI5BC,MAAAA,WAAAA,EAAAA,CAJ4B;AAK5BC,MAAAA,aAAAA,EAAAA,CAL4B;AAM5BC,MAAAA,WAAAA,EAAAA,CAN4B;AAO5BC,MAAAA,YAAAA,EAAAA,CAP4B;AAQ5BtG,MAAAA,MAAAA,EAAAA;AAR4B,KAA9B,CAAA;AAQEA,GATYI,EAYb,EAZaA,CA7BsB;AAqFtC,SA1CAlG,CAAAA,CAAU,YAAA;AAER,WADAyN,CAAAA,CAAQzK,MAARyK,CAAe1K,CAAf0K,GAAe1K,YAAAA;AAAAA,aACF0K,CAAAA,CAAQzK,MAARyK,CAAe,IAAfA,CADE1K;AACa,KAA5B;AAA4B,GAF9B/C,EAGG,CAAC+C,CAAD,EAAM0K,CAAN,CAHHzN,CAAAA,EAKAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAASyL,CAATzL,CAAVA;AAAmByL,GADzBzN,EAEG,CAACyN,CAAD,EAAUzL,CAAV,CAFHhC,CALAA,EASAA,CAAAA,CAAU,YAAA;AACRyN,IAAAA,CAAAA,CAAQb,UAARa,CAAmB;AACjB1B,MAAAA,SAAAA,EAAAA,CADiB;AAEjBC,MAAAA,WAAAA,EAAAA,CAFiB;AAGjBC,MAAAA,WAAAA,EAAAA,CAHiB;AAIjBC,MAAAA,aAAAA,EAAAA,CAJiB;AAKjBC,MAAAA,WAAAA,EAAAA,CALiB;AAMjBC,MAAAA,YAAAA,EAAAA;AANiB,KAAnBqB;AAMErB,GAPJpM,EASG,CACDyN,CADC,EAED1B,CAFC,EAGDC,CAHC,EAIDC,CAJC,EAKDC,CALC,EAMDC,CANC,EAODC,CAPC,CATHpM,CATAA,EA4BAA,CAAAA,CAAU,YAAA;AACRyN,IAAAA,CAAAA,CAAQH,OAARG,CAAgBD,CAAhBC;AAAgBD,GADlBxN,EAEG,CAACyN,CAAD,EAAUD,CAAV,CAFHxN,CA5BAA,EAgCAA,CAAAA,CAAU,YAAA;AACJ8F,IAAAA,CAAAA,IAAQ2H,CAAAA,CAAQ9G,SAAR8G,CAAkB3H,CAAlB2H,CAAR3H;AAA0BA,GADhC9F,EAEG,CAACyN,CAAD,EAAU3H,CAAV,CAFH9F,CAhCAA,EAoCAJ,CAAAA,CAAc6N,CAAd7N,EAAuB,WAAvBA,EAAoCyM,CAApCzM,CApCAI,EAqCAJ,CAAAA,CAAc6N,CAAd7N,EAAuB,UAAvBA,EAAmC0M,CAAnC1M,CArCAI,EAsCAJ,CAAAA,CAAc6N,CAAd7N,EAAuB,WAAvBA,EAAoC2M,CAApC3M,CAtCAI,EAuCAJ,CAAAA,CAAc6N,CAAd7N,EAAuB,WAAvBA,EAAoC4M,CAApC5M,CAvCAI,EAwCAJ,CAAAA,CAAc6N,CAAd7N,EAAuB,OAAvBA,EAAgCuC,CAAhCvC,CAxCAI,EAwCgCmC,IAEhC;AAFgCA,CdrKlC;AAAA,IeqFMuL,CAAAA,GAAsC,UAAA,CAAA,EAAA;AAAA,MAC1CC,CAAAA,GAAAA,CAAAA,CAAAA,MAD0C;AAAA,MAE1CxL,CAAAA,GAAAA,CAAAA,CAAAA,OAF0C;AAAA,MAG1CqK,CAAAA,GAAAA,CAAAA,CAAAA,WAH0C;AAAA,MAI1CD,CAAAA,GAAAA,CAAAA,CAAAA,WAJ0C;AAAA,MAK1CD,CAAAA,GAAAA,CAAAA,CAAAA,UAL0C;AAAA,MAM1CD,CAAAA,GAAAA,CAAAA,CAAAA,WAN0C;AAAA,MAO1CrK,CAAAA,GAAAA,CAAAA,CAAAA,QAP0C;AAAA,MAQ1CiK,CAAAA,GAAAA,CAAAA,CAAAA,WAR0C;AAAA,MAS1CC,CAAAA,GAAAA,CAAAA,CAAAA,aAT0C;AAAA,MAU1CC,CAAAA,GAAAA,CAAAA,CAAAA,WAV0C;AAAA,MAW1CC,CAAAA,GAAAA,CAAAA,CAAAA,YAX0C;AAAA,MAY1CL,CAAAA,GAAAA,CAAAA,CAAAA,SAZ0C;AAAA,MAa1CC,CAAAA,GAAAA,CAAAA,CAAAA,WAb0C;AAAA,MAc1ClG,CAAAA,GAAAA,CAAAA,CAAAA,MAd0C;AAAA,MAgBpC/C,CAAAA,GAAMoC,CAAAA,CAAAA,WAAAA,CAhB8B;AAAA,MAkBpCyI,CAAAA,GAAkB1H,CAAAA,CAAQ,YAAA;AAC9B,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWyN,YAAtB,CACE,IAAIzN,KAAAA,CAAMC,IAAND,CAAWsD,MAAf,CAAsBiK,CAAAA,CAAOG,EAAPH,CAAUhK,GAAhC,EAAqCgK,CAAAA,CAAOG,EAAPH,CAAU/J,GAA/C,CADF,EAEE,IAAIxD,KAAAA,CAAMC,IAAND,CAAWsD,MAAf,CAAsBiK,CAAAA,CAAOI,EAAPJ,CAAUhK,GAAhC,EAAqCgK,CAAAA,CAAOI,EAAPJ,CAAU/J,GAA/C,CAFF,CAAA;AAEiDA,GAH3BsC,EAKrB,CAACyH,CAAD,CALqBzH,CAlBkB;AAAA,MAyBpC8H,CAAAA,GAAY9H,CAAAA,CAAQ,YAAA;AACxB,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWsN,SAAtB,CAAgC;AAC9BC,MAAAA,MAAAA,EAAQC,CADsB;AAE9B7B,MAAAA,SAAAA,EAAAA,CAF8B;AAG9BC,MAAAA,WAAAA,EAAAA,CAH8B;AAI9BC,MAAAA,WAAAA,EAAAA,CAJ8B;AAK9BC,MAAAA,aAAAA,EAAAA,CAL8B;AAM9BC,MAAAA,WAAAA,EAAAA,CAN8B;AAO9BC,MAAAA,YAAAA,EAAAA,CAP8B;AAQ9BtG,MAAAA,MAAAA,EAAAA;AAR8B,KAAhC,CAAA;AAQEA,GATcI,EAYf,EAZeA,CAzBwB;AAiF1C,SA1CAlG,CAAAA,CAAU,YAAA;AAER,WADAgO,CAAAA,CAAUhL,MAAVgL,CAAiBjL,CAAjBiL,GAAiBjL,YAAAA;AAAAA,aACJiL,CAAAA,CAAUhL,MAAVgL,CAAiB,IAAjBA,CADIjL;AACa,KAA9B;AAA8B,GAFhC/C,EAGG,CAAC+C,CAAD,EAAMiL,CAAN,CAHHhO,CAAAA,EAKAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAASgM,CAAThM,CAAVA;AAAmBgM,GADzBhO,EAEG,CAACgO,CAAD,EAAYhM,CAAZ,CAFHhC,CALAA,EASAA,CAAAA,CAAU,YAAA;AACRgO,IAAAA,CAAAA,CAAUpB,UAAVoB,CAAqB;AACnBjC,MAAAA,SAAAA,EAAAA,CADmB;AAEnBC,MAAAA,WAAAA,EAAAA,CAFmB;AAGnBC,MAAAA,WAAAA,EAAAA,CAHmB;AAInBC,MAAAA,aAAAA,EAAAA,CAJmB;AAKnBC,MAAAA,WAAAA,EAAAA,CALmB;AAMnBC,MAAAA,YAAAA,EAAAA;AANmB,KAArB4B;AAME5B,GAPJpM,EASG,CACDgO,CADC,EAEDjC,CAFC,EAGDC,CAHC,EAIDC,CAJC,EAKDC,CALC,EAMDC,CANC,EAODC,CAPC,CATHpM,CATAA,EA4BAA,CAAAA,CAAU,YAAA;AACRgO,IAAAA,CAAAA,CAAUC,SAAVD,CAAoBJ,CAApBI;AAAoBJ,GADtB5N,EAEG,CAACgO,CAAD,EAAYJ,CAAZ,CAFH5N,CA5BAA,EAgCAA,CAAAA,CAAU,YAAA;AACJ8F,IAAAA,CAAAA,IAAQkI,CAAAA,CAAUrH,SAAVqH,CAAoBlI,CAApBkI,CAARlI;AAA4BA,GADlC9F,EAEG,CAACgO,CAAD,EAAYlI,CAAZ,CAFH9F,CAhCAA,EAoCAJ,CAAAA,CAAcoO,CAAdpO,EAAyB,WAAzBA,EAAsCyM,CAAtCzM,CApCAI,EAqCAJ,CAAAA,CAAcoO,CAAdpO,EAAyB,UAAzBA,EAAqC0M,CAArC1M,CArCAI,EAsCAJ,CAAAA,CAAcoO,CAAdpO,EAAyB,WAAzBA,EAAsC2M,CAAtC3M,CAtCAI,EAuCAJ,CAAAA,CAAcoO,CAAdpO,EAAyB,WAAzBA,EAAsC4M,CAAtC5M,CAvCAI,EAwCAJ,CAAAA,CAAcoO,CAAdpO,EAAyB,OAAzBA,EAAkCuC,CAAlCvC,CAxCAI,EAwCkCmC,IAElC;AAFkCA,CfpKpC;AAAA,IgBoGM+L,CAAAA,GAAkC,UAAA,CAAA,EAAA;AAAA,MACtClN,CAAAA,GAAAA,CAAAA,CAAAA,MADsC;AAAA,MAEtCmN,CAAAA,GAAAA,CAAAA,CAAAA,EAFsC;AAAA,MAGtCC,CAAAA,GAAAA,CAAAA,CAAAA,EAHsC;AAAA,MAItCrC,CAAAA,GAAAA,CAAAA,CAAAA,SAJsC;AAAA,MAKtCC,CAAAA,GAAAA,CAAAA,CAAAA,WALsC;AAAA,MAMtCC,CAAAA,GAAAA,CAAAA,CAAAA,WANsC;AAAA,MAOtCC,CAAAA,GAAAA,CAAAA,CAAAA,aAPsC;AAAA,MAQtCC,CAAAA,GAAAA,CAAAA,CAAAA,WARsC;AAAA,MAStCC,CAAAA,GAAAA,CAAAA,CAAAA,YATsC;AAAA,MAUtCtG,CAAAA,GAAAA,CAAAA,CAAAA,MAVsC;AAAA,MAWtCuG,CAAAA,GAAAA,CAAAA,CAAAA,WAXsC;AAAA,MAYtCC,CAAAA,GAAAA,CAAAA,CAAAA,UAZsC;AAAA,MAatCC,CAAAA,GAAAA,CAAAA,CAAAA,WAbsC;AAAA,MActCC,CAAAA,GAAAA,CAAAA,CAAAA,WAdsC;AAAA,MAetCrK,CAAAA,GAAAA,CAAAA,CAAAA,OAfsC;AAAA,MAgBtCH,CAAAA,GAAAA,CAAAA,CAAAA,QAhBsC;AAAA,MAkBhCe,CAAAA,GAAMoC,CAAAA,CAAAA,SAAAA,CAlB0B;AAAA,MAoBhCkJ,CAAAA,GAAgBnI,CAAAA,CAAQ,YAAA;AAC5B,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAWsD,MAAtB,CAA6B1C,CAAAA,CAAO2C,GAApC,EAAyC3C,CAAAA,CAAO4C,GAAhD,CAAA;AAAgDA,GAD5BsC,EAEnB,CAAClF,CAAAA,CAAO2C,GAAR,EAAa3C,CAAAA,CAAO4C,GAApB,CAFmBsC,CApBgB;AAAA,MAwBhCoI,CAAAA,GAAUpI,CAAAA,CAAQ,YAAA;AACtB,WAAA,IAAW9F,KAAAA,CAAMC,IAAND,CAAW8N,OAAtB,CAA8B;AAC5BlN,MAAAA,MAAAA,EAAQqN,CADoB;AAE5BF,MAAAA,EAAAA,EAAAA,CAF4B;AAG5BC,MAAAA,EAAAA,EAAAA,CAH4B;AAI5BrC,MAAAA,SAAAA,EAAAA,CAJ4B;AAK5BC,MAAAA,WAAAA,EAAAA,CAL4B;AAM5BC,MAAAA,WAAAA,EAAAA,CAN4B;AAO5BC,MAAAA,aAAAA,EAAAA,CAP4B;AAQ5BC,MAAAA,WAAAA,EAAAA,CAR4B;AAS5BC,MAAAA,YAAAA,EAAAA,CAT4B;AAU5BtG,MAAAA,MAAAA,EAAAA;AAV4B,KAA9B,CAAA;AAUEA,GAXYI,EAcb,EAdaA,CAxBsB;AA0FtC,SAlDAlG,CAAAA,CAAU,YAAA;AAGR,WAFAsO,CAAAA,CAAQtL,MAARsL,CAAevL,CAAfuL,GAAevL,YAAAA;AAGbuL,MAAAA,CAAAA,CAAQtL,MAARsL,CAAe,IAAfA;AAAe,KADjB;AACiB,GAJnBtO,EAMG,CAAC+C,CAAD,EAAMuL,CAAN,CANHtO,CAAAA,EAQAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAASsM,CAATtM,CAAVA;AAAmBsM,GADzBtO,EAEG,CAACsO,CAAD,EAAUtM,CAAV,CAFHhC,CARAA,EAYAA,CAAAA,CAAU,YAAA;AACJsO,IAAAA,CAAAA,IAASA,CAAAA,CAAQ9H,WAAR8H,CAAoBD,CAApBC,CAATA;AAA6BD,GADnCrO,EAEG,CAACsO,CAAD,EAAUD,CAAV,CAFHrO,CAZAA,EAgBAA,CAAAA,CAAU,YAAA;AACRsO,IAAAA,CAAAA,CAAQ3B,SAAR2B,CAAkBH,CAAlBG,EAAsBF,CAAtBE;AAAsBF,GADxBpO,EAEG,CAACsO,CAAD,EAAUH,CAAV,EAAcC,CAAd,CAFHpO,CAhBAA,EAoBAA,CAAAA,CAAU,YAAA;AACH8F,IAAAA,CAAAA,IACLwI,CAAAA,CAAQ3H,SAAR2H,CAAkBxI,CAAlBwI,CADKxI;AACaA,GAFpB9F,EAGG,CAACsO,CAAD,EAAUxI,CAAV,CAHH9F,CApBAA,EAyBAA,CAAAA,CAAU,YAAA;AACRsO,IAAAA,CAAAA,CAAQ1B,UAAR0B,CAAmB;AACjBvC,MAAAA,SAAAA,EAAAA,CADiB;AAEjBC,MAAAA,WAAAA,EAAAA,CAFiB;AAGjBC,MAAAA,WAAAA,EAAAA,CAHiB;AAIjBC,MAAAA,aAAAA,EAAAA,CAJiB;AAKjBC,MAAAA,WAAAA,EAAAA,CALiB;AAMjBC,MAAAA,YAAAA,EAAAA;AANiB,KAAnBkC;AAMElC,GAPJpM,EASG,CACDsO,CADC,EAEDvC,CAFC,EAGDC,CAHC,EAIDC,CAJC,EAKDC,CALC,EAMDC,CANC,EAODC,CAPC,CATHpM,CAzBAA,EA4CAJ,CAAAA,CAAc0O,CAAd1O,EAAuB,WAAvBA,EAAoCyM,CAApCzM,CA5CAI,EA6CAJ,CAAAA,CAAc0O,CAAd1O,EAAuB,UAAvBA,EAAmC0M,CAAnC1M,CA7CAI,EA8CAJ,CAAAA,CAAc0O,CAAd1O,EAAuB,WAAvBA,EAAoC2M,CAApC3M,CA9CAI,EA+CAJ,CAAAA,CAAc0O,CAAd1O,EAAuB,WAAvBA,EAAoC4M,CAApC5M,CA/CAI,EAgDAJ,CAAAA,CAAc0O,CAAd1O,EAAuB,OAAvBA,EAAgCuC,CAAhCvC,CAhDAI,EAgDgCmC,IAEhC;AAFgCA,ChB5LlC;;AgB4LkCA,SAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,SAAAA,CAAAA,CAAAA,GAAAA,MAAAA,CAAAA,cAAAA,IAAAA,UAAAA,CAAAA,EAAAA,CAAAA,EAAAA;AAAAA,WAAAA,CAAAA,CAAAA,SAAAA,GAAAA,CAAAA,EAAAA,CAAAA;AAAAA,GAAAA,EAAAA,CAAAA,EAAAA,CAAAA,CAAAA;ACzC5BoM;;AAAAA,IAAAA,CAAAA,GAAkD,UAAA,CAAA,EAAA;AAAA,MACtDC,CAAAA,GAAAA,CAAAA,CAAAA,IADsD;AAAA,MAEtDC,CAAAA,GAAAA,CAAAA,CAAAA,KAFsD;AAAA,MAGtDC,CAAAA,GAAAA,CAAAA,CAAAA,QAHsD;AAAA,MAItD1M,CAAAA,GAAAA,CAAAA,CAAAA,QAJsD;AAAA,MAMhDe,CAAAA,GAAMoC,CAAAA,EAN0C;AAAA,MAQhDwJ,CAAAA,GAAuBzI,CAAAA,CAAQ,YAAA;AAUnC,WADgB,MAAA,aAAA,UAAA,CAAA,EAAA;AAAA,UAAA,CAAA,EAAA,CAAA;;AAPd,eAAA,CAAA,CAAYsI,CAAZ,EAA8BC,CAA9B,EAAiDC,CAAjD,EAAiDA;AAAAA,YAAAA,CAAAA;AAAAA,eAAAA,CAC/CE,CAAAA,GAAAA,CAAAA,CAAAA,IAAAA,CAAAA,IAAAA,KAAAA,IAD+CF,EAE1CF,IAF0CE,GAEnCF,CAFmCE,EAG/CE,CAAAA,CAAKH,KAALG,GAAaH,CAHkCC,EAI/CE,CAAAA,CAAKF,QAALE,GAAgBF,CAJ+BA,EAI/BA,CAJ+BA;AAI/BA;;AAAAA,aAAAA,CAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,GAAAA,CAAAA,EAAAA,SAAAA,GAAAA,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAAA,CAAAA,SAAAA,CAAAA,WAAAA,GAAAA,CAAAA,EAAAA,CAAAA,CAAAA,CAAAA,EAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AAAAA,KAGJ,CARmBtO,KAAAA,CAAMC,IAAND,CAAWmO,eAQ9B,CAAA,EAAyBC,CAAzB,EAA+BC,CAA/B,EAAsCC,CAAtC,CAChB;AADsDA,GAT3BxI,EAW1B,CAACsI,CAAD,EAAOC,CAAP,EAAcC,CAAd,CAX0BxI,CARyB;AAgCtD,SAXAlG,CAAAA,CAAU,YAAA;AAGR,WAFA2O,CAAAA,CAAqB3L,MAArB2L,CAA4B5L,CAA5B4L,GAA4B5L,YAAAA;AAG1B4L,MAAAA,CAAAA,CAAqB3L,MAArB2L,CAA4B,IAA5BA;AAA4B,KAD9B;AAC8B,GAJhC3O,EAMG,CAAC+C,CAAD,EAAM4L,CAAN,CANH3O,CAAAA,EAQAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAAS2M,CAAT3M,CAAVA;AAAmB2M,GADzB3O,EAEG,CAAC2O,CAAD,EAAuB3M,CAAvB,CAFHhC,CARAA,EAU0BgC,IAC1B;AAD0BA,CA/BtBuM;AAAAA,IClJOM,CAAAA,GAAuBnO,CAAAA,CAAMC,aAAND,CAAMC,KACxCR,CADkCO,CDkJ9B6N;AAAAA,IC/CAO,CAAAA,GAAoC,UAAA,CAAA,EAAA;AAAA,MAAA,CAAA,GAAA,CAAA,CACxCjO,EADwC;AAAA,MACxCA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAK,0BAALA,GAAK,CADmC;AAAA,MAExCC,CAAAA,GAAAA,CAAAA,CAAAA,KAFwC;AAAA,MAGxCC,CAAAA,GAAAA,CAAAA,CAAAA,QAHwC;AAAA,MAIxCyE,CAAAA,GAAAA,CAAAA,CAAAA,QAJwC;AAAA,MAKxCrE,CAAAA,GAAAA,CAAAA,CAAAA,SALwC;AAAA,MAMxC4N,CAAAA,GAAAA,CAAAA,CAAAA,GANwC;AAAA,MAOxCC,CAAAA,GAAAA,CAAAA,CAAAA,MAPwC;AAAA,MAQxCC,CAAAA,GAAAA,CAAAA,CAAAA,KARwC;AAAA,MASxCC,CAAAA,GAAAA,CAAAA,CAAAA,KATwC;AAAA,MAUxCC,CAAAA,GAAAA,CAAAA,CAAAA,IAVwC;AAAA,MAWxCC,CAAAA,GAAAA,CAAAA,CAAAA,IAXwC;AAAA,MAYxCpN,CAAAA,GAAAA,CAAAA,CAAAA,QAZwC;AAAA,MAaxCqN,CAAAA,GAAAA,CAAAA,CAAAA,MAbwC;AAAA,MAcxCC,CAAAA,GAAAA,CAAAA,CAAAA,cAdwC;AAAA,MAexCC,CAAAA,GAAAA,CAAAA,CAAAA,iBAfwC;AAAA,MAgBxCC,CAAAA,GAAAA,CAAAA,CAAAA,iBAhBwC;AAAA,MAiBxCC,CAAAA,GAAAA,CAAAA,CAAAA,uBAjBwC;AAAA,MAiBxCA,CAAAA,GAEkCxM,CAAAA,CAAAA,CAAS,CAATA,CAnBM;AAAA,MAmBjCyM,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAnBiC;AAAA,MAmBtBC,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAnBsB;AAAA,MAmBtBA,CAAAA,GACc1M,CAAAA,EApBQ;AAAA,MAoBjC2M,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CApBiC;AAAA,MAoBvBC,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CApBuB;AAAA,MAqBlC3M,CAAAA,GAAYC,CAAAA,CAAuB,IAAvBA,CArBsB;AAmHxC,SA5FAnD,CAAAA,CAAU,YAAA;AACR,QAAKoD,MAAAA,CAAOhD,KAAZ,EAAYA;AAMZ,UAAK8C,CAAAA,CAAUK,OAAf,EAAA;AAEA,YAAMuM,CAAAA,GAAgB,IAAI1P,KAAAA,CAAMC,IAAND,CAAW0O,QAAf,CAAwB5L,CAAAA,CAAUK,OAAlC,EAA2C;AAC/DwL,UAAAA,GAAAA,EAAKA,CAD0D;AAE/DC,UAAAA,MAAAA,EAAQA,CAFuD;AAG/DC,UAAAA,KAAAA,EAAOA,CAHwD;AAI/DC,UAAAA,KAAAA,EAAOA,CAJwD;AAK/DC,UAAAA,IAAAA,EAAMA,CALyD;AAM/DC,UAAAA,IAAAA,EAAMA;AANyD,SAA3C,CAAtB;AASAS,QAAAA,CAAAA,CAAYC,CAAZD,CAAAA;AAAYC;AAAAA,KAjBZ,MACEzM,OAAAA,CAAQC,IAARD,CACE,+EADFA;AACE,GAHNrD,EAoBG,CAACiP,CAAD,EAAQC,CAAR,EAAeE,CAAf,CApBHpP,CAAAA,EAsBAA,CAAAA,CAAU,YAAA;AACH4P,IAAAA,CAAAA,IAAa5N,CAAb4N,IACL5N,CAAAA,CAAS4N,CAAT5N,CADK4N;AACIA,GAFX5P,EAGG,CAAC4P,CAAD,EAAW5N,CAAX,CAHHhC,CAtBAA,EA2BAA,CAAAA,CAAU,YAAA;AACR,QACG4P,CAAAA,IAAAA,CACDZ,CADCY,KAEAA,CAAAA,CAASG,WAATH,GAAuBI,MAAvBJ,OAAoCpK,CAAAA,CAAS7B,GAA7CiM,IACCA,CAAAA,CAASG,WAATH,GAAuBK,MAAvBL,OAAoCpK,CAAAA,CAAS5B,GAH9CgM,CADH,EAAA;AAQA,UAAMM,CAAAA,GAAa,IAAI9P,KAAAA,CAAMC,IAAND,CAAWsD,MAAf,CAAsB8B,CAAAA,CAAS7B,GAA/B,EAAoC6B,CAAAA,CAAS5B,GAA7C,CAAnB;AAEA,UAAIxD,KAAAA,CAAMC,IAAND,CAAW+P,cAAf,EAFgEvM,CAEhCwM,gBAFgCxM,CAG9DsM,CAH8DtM,EAI9D4B,CAAAA,CAASsG,MAJqDlI,EAK9D,UAACoL,CAAD,EAACA;AACgB,iBAAXA,CAAW,IAAQS,CAAR,GACbA,CAAAA,CAAwBG,CAAxBH,CADa,GAGbG,CAAAA,CAASS,SAATT,CAAmBZ,CAAnBY,EAA2BM,CAA3BN,CAHa;AAGcM,OAT+BtM;AAS/BsM;AAAAA,GAlBnClQ,EAsBG,CACD4P,CADC,EAEDZ,CAFC,EAGDxJ,CAAAA,CAAS7B,GAHR,EAID6B,CAAAA,CAAS5B,GAJR,EAKD4B,CAAAA,CAASsG,MALR,EAMD2D,CANC,CAtBHzP,CA3BAA,EA0DAA,CAAAA,CAAU,YAAA;AACR,QACG4P,CAAAA,IACAZ,CADAY,IAEDZ,CAAAA,KAAWY,CAAAA,CAASU,SAATV,EAFVA,KAGAA,CAAAA,CAASG,WAATH,GAAuBI,MAAvBJ,OAAoCpK,CAAAA,CAAS7B,GAA7CiM,IACCA,CAAAA,CAASG,WAATH,GAAuBK,MAAvBL,OAAoCpK,CAAAA,CAAS5B,GAJ9CgM,CADH,EAAA;AASA,UAAMM,CAAAA,GAAa,IAAI9P,KAAAA,CAAMC,IAAND,CAAWsD,MAAf,CAAsB8B,CAAAA,CAAS7B,GAA/B,EAAoC6B,CAAAA,CAAS5B,GAA7C,CAAnB;AACAgM,MAAAA,CAAAA,CAASS,SAATT,CAAmBZ,CAAnBY,EAA2BM,CAA3BN;AAA2BM;AAAAA,GAX7BlQ,EAYG,CAAC4P,CAAD,EAAWZ,CAAX,EAAmBxJ,CAAAA,CAAS7B,GAA5B,EAAiC6B,CAAAA,CAAS5B,GAA1C,CAZH5D,CA1DAA,EAwEAA,CAAAA,CAAU,YAAA;AACR,QAAK4P,CAAL,EAAA;AAEA,UAAMW,CAAAA,GAAgBX,CAAAA,CAASY,YAATZ,EAAtB;AAEIW,MAAAA,CAAAA,CAAcxB,GAAdwB,KAAsBxB,CAAtBwB,IAA6BA,CAAAA,CAAcpB,IAAdoB,KAAuBpB,CAApDoB,KAEAxB,CAAAA,KAAKwB,CAAAA,CAAcxB,GAAdwB,GAAoBxB,CAAzBA,CAAAA,EACAI,CAAAA,KAAMoB,CAAAA,CAAcpB,IAAdoB,GAAqBpB,CAA3BA,CADAJ,EAEJa,CAAAA,CAASa,YAATb,CAAsBW,CAAtBX,CAJIW;AAIkBA;AAAAA,GATxBvQ,EAUG,CAAC4P,CAAD,EAAWb,CAAX,EAAgBI,CAAhB,CAVHnP,CAxEAA,EAoFAJ,CAAAA,CAAcgQ,CAAdhQ,EAAwB,MAAxBA,EAAgC,UAACC,CAAD,EAACA;AAC/B8P,IAAAA,CAAAA,CAAAA,CAAa,CAAbA,CAAAA,EACIN,CAAAA,IAAQA,CAAAA,CAAOxP,CAAPwP,CADZM;AACmB9P,GAFrBD,CApFAI,EAwFAJ,CAAAA,CAAcgQ,CAAdhQ,EAAwB,gBAAxBA,EAA0C0P,CAA1C1P,CAxFAI,EAyFAJ,CAAAA,CAAcgQ,CAAdhQ,EAAwB,mBAAxBA,EAA6C4P,CAA7C5P,CAzFAI,EA0FAJ,CAAAA,CAAcgQ,CAAdhQ,EAAwB,kBAAxBA,EAA4C2P,CAA5C3P,CA1FAI,EA6FEU,CAAAA,CAAAA,aAAAA,CAAAA,CAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EACEA,CAAAA,CAAAA,aAAAA,CAAAA,KAAAA,EAAAA;AAAKG,IAAAA,EAAAA,EAAIA,CAATH;AAAaS,IAAAA,SAAAA,EAAWA,CAAxBT;AAAmCI,IAAAA,KAAAA,EAAOA,CAA1CJ;AAAiDsE,IAAAA,GAAAA,EAAK9B;AAAtDxC,GAAAA,CADFA,EAEGkP,CAAAA,IAAAA,CAAaF,CAAbE,IACClP,CAAAA,CAAAA,aAAAA,CAACmO,CAAAA,CAAqB5J,QAAtBvE,EAAsBuE;AAASC,IAAAA,KAAAA,EAAO0K;AAAhB3K,GAAtBvE,EACGK,CADHL,CAHJA,CADF;AAKSK,CDzELwN;AAAAA,IE9IAmC,CAAAA,GAAc,UAACtL,CAAD,EAACA;AACnB,MAAM0K,CAAAA,GAAgBzK,CAAAA,CAAWwJ,CAAXxJ,CAAtB;AACA,MAAA,CAAKyK,CAAL,EACE,MAAA,IAAUxK,KAAV,CAAUA,CAENF,CAAAA,GAAgBA,CAAAA,GAAgB,YAAhCA,GAA+C,aAFzCE,IAEyC,wCAFnD,CAAA;AAOF,SAAOwK,CAAP;AAAOA,CFoIHvB;AAAAA,IGvDAoC,CAAAA,GAA8D,UAAA,CAAA,EAAA;AAAA,MAClE9P,CAAAA,GAAAA,CAAAA,CAAAA,EADkE;AAAA,MAElEM,CAAAA,GAAAA,CAAAA,CAAAA,SAFkE;AAAA,MAGlEL,CAAAA,GAAAA,CAAAA,CAAAA,KAHkE;AAAA,MAIlE0E,CAAAA,GAAAA,CAAAA,CAAAA,QAJkE;AAAA,MAKlEzE,CAAAA,GAAAA,CAAAA,CAAAA,QALkE;AAAA,MAMlEqG,CAAAA,GAAAA,CAAAA,CAAAA,SANkE;AAAA,MAOlEwD,CAAAA,GAAAA,CAAAA,CAAAA,OAPkE;AAAA,MAQlEC,CAAAA,GAAAA,CAAAA,CAAAA,OARkE;AAAA,MASlE/E,CAAAA,GAAAA,CAAAA,CAAAA,MATkE;AAAA,MAUlEJ,CAAAA,GAAAA,CAAAA,CAAAA,QAVkE;AAAA,MAWlEE,CAAAA,GAAAA,CAAAA,CAAAA,KAXkE;AAAA,MAYlEgL,CAAAA,GAAAA,CAAAA,CAAAA,OAZkE;AAAA,MAalE5O,CAAAA,GAAAA,CAAAA,CAAAA,QAbkE;AAAA,MAe5D4N,CAAAA,GAAWc,CAAAA,CAAAA,uBAAAA,CAfiD;AAAA,MAgB5DxN,CAAAA,GAAYC,CAAAA,CAAO4C,QAAAA,CAASC,aAATD,CAAuB,KAAvBA,CAAP5C,CAhBgD;AAAA,MAkB5D2H,CAAAA,GAAkB5E,CAAAA,CAAQ,YAAA;AAC9B,WAAI,SAASV,CAAT,GAASA,IACApF,KAAAA,CAAMC,IAAND,CAAWsD,MADX8B,CACkBA,CAAAA,CAAS7B,GAD3B6B,EACgCA,CAAAA,CAAS5B,GADzC4B,CAAT,GACkD5B,IAE3CxD,KAAAA,CAAMC,IAAND,CAAWyQ,SAFgCjN,CAGpD4B,CAAAA,CAASuJ,GAH2CnL,EAIpD4B,CAAAA,CAAS2J,IAJ2CvL,EAKpD4B,CAAAA,CAAS4J,IAL2CxL,EAMpD4B,CAAAA,CAASwJ,MAN2CpL,CADtD;AAOWoL,GARW9I,EAWrB,CAEDV,CAAAA,CAAS7B,GAFR,EAID6B,CAAAA,CAAS5B,GAJR,EAMD4B,CAAAA,CAASuJ,GANR,EAQDvJ,CAAAA,CAAS2J,IARR,EAUD3J,CAAAA,CAAS4J,IAVR,EAYD5J,CAAAA,CAASwJ,MAZR,CAXqB9I,CAlB0C;AAAA,MA6C5D6E,CAAAA,GAAU7E,CAAAA,CAAQ,YAAA;AAUtB,WAT2B,IAAI9F,KAAAA,CAAMC,IAAND,CAAW4K,aAAf,CAA6B;AACtD5D,MAAAA,SAAAA,EAAWA,CAD2C;AAEtDwD,MAAAA,OAAAA,EAASA,CAF6C;AAGtDC,MAAAA,OAAAA,EAASA,CAH6C;AAItD/E,MAAAA,MAAAA,EAAQA,CAJ8C;AAKtDN,MAAAA,QAAAA,EAAUsF,CAL4C;AAMtD1E,MAAAA,OAAAA,EAASlD,CAAAA,CAAUK;AANmC,KAA7B,CAS3B;AAHqBA,GAPP2C,EAYb,CAACkB,CAAD,EAAYwD,CAAZ,EAAqBC,CAArB,CAZa3E,CA7CkD;AAwHlE,SA7DAlG,CAAAA,CAAU,YAAA;AACR,QAAK4P,CAAL,EAAA;AAIA,UAFA7E,CAAAA,CAAQ/H,MAAR+H,CAAe6E,CAAf7E,GAEI6F,CAAJ,EAAa;AACX,YAGMG,CAAAA,GAHanB,CAAAA,CAASkB,aAATlB,GAGUoB,mBAHVpB,CAIjB7E,CAAAA,CAAQgF,WAARhF,EAJiB6E,EAKjB7E,CAAAA,CAAQkG,WAARlG,EALiB6E,CAAnB;AAOAA,QAAAA,CAAAA,CAASa,YAATb,CAAsBmB,CAAtBnB;AAGF;;AAAA,aAAA,YAAA;AACE7E,QAAAA,CAAAA,CAAQ/H,MAAR+H,CAAe,IAAfA;AAAe,OADjB;AACiB;AAAA,GAjBnB/K,EAoBG,CAAC+K,CAAD,EAAU6E,CAAV,CApBH5P,CAAAA,EAsBAA,CAAAA,CAAU,YAAA;AACJgC,IAAAA,CAAAA,IAAUA,CAAAA,CAAS+I,CAAT/I,CAAVA;AAAmB+I,GADzB/K,EAEG,CAAC+K,CAAD,EAAU/I,CAAV,CAFHhC,CAtBAA,EA0BAA,CAAAA,CAAU,YAAA;AACR+K,IAAAA,CAAAA,CAAQvE,WAARuE,CAAoBD,CAApBC;AAAoBD,GADtB9K,EAEG,CAAC+K,CAAD,EAAUD,CAAV,CAFH9K,CA1BAA,EA8BAA,CAAAA,CAAU,YAAA;AACH8F,IAAAA,CAAAA,IACLiF,CAAAA,CAAQpE,SAARoE,CAAkBjF,CAAlBiF,CADKjF;AACaA,GAFpB9F,EAGG,CAAC+K,CAAD,EAAUjF,CAAV,CAHH9F,CA9BAA,EAmCAA,CAAAA,CAAU,YAAA;AACH0F,IAAAA,CAAAA,IACLqF,CAAAA,CAAQtE,WAARsE,CAAoBrF,CAApBqF,CADKrF;AACeA,GAFtB1F,EAGG,CAAC+K,CAAD,EAAUrF,CAAV,CAHH1F,CAnCAA,EAwCAA,CAAAA,CAAU,YAAA;AACH4F,IAAAA,CAAAA,IACLmF,CAAAA,CAAQrE,QAARqE,CAAiBnF,CAAjBmF,CADKnF;AACYA,GAFnB5F,EAGG,CAAC+K,CAAD,EAAUnF,CAAV,CAHH5F,CAxCAA,EA6CAA,CAAAA,CAAU,YAAA;AACJa,IAAAA,CAAAA,KAAIqC,CAAAA,CAAUK,OAAVL,CAAkBrC,EAAlBqC,GAAuBrC,CAA3BA,CAAAA;AAA2BA,GADjCb,EAEG,CAACa,CAAD,CAFHb,CA7CAA,EAiDAA,CAAAA,CAAU,YAAA;AACJmB,IAAAA,CAAAA,KAAW+B,CAAAA,CAAUK,OAAVL,CAAkB/B,SAAlB+B,GAA8B/B,CAAzCA,CAAAA;AAAyCA,GAD/CnB,EAEG,CAACmB,CAAD,CAFHnB,CAjDAA,EAqDAA,CAAAA,CAAU,YAAA;AACR,QAAIc,CAAJ,EACE,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAA2B8F,MAAAA,CAAOC,OAAPD,CAAe9F,CAAf8F,CAA3B,EAA0C9F,CAAAA,GAAAA,CAAAA,CAAAA,MAA1C,EAA0CA,CAAAA,EAA1C,EAAkD;AAA7C,UAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AACHoC,MAAAA,CAAAA,CAAUK,OAAVL,CAAkBpC,KAAlBoC,CAAkBpC,CAAAA,CAAAA,CAAAA,CAAlBoC,IAAkBpC,CAAAA,CAAAA,CAAAA,CAAlBoC;AAAkBpC;AAAAA,GAHxBd,EAMG,CAACc,CAAD,CANHd,CArDAA,EA6DOiL,CAAAA,CAASlE,YAATkE,CAAsBlK,CAAtBkK,EAAgC/H,CAAAA,CAAUK,OAA1C0H,CAAP;AAAiD1H,CHjE7CgL;AAAAA,IIkCA2C,CAAAA,GAAgD,UAAA,CAAA,EAAA;AAAA,MACpDtI,CAAAA,GAAAA,CAAAA,CAAAA,KADoD;AAAA,MAEpDpD,CAAAA,GAAAA,CAAAA,CAAAA,QAFoD;AAAA,MAGpDzE,CAAAA,GAAAA,CAAAA,CAAAA,QAHoD;AAAA,MAIpD2E,CAAAA,GAAAA,CAAAA,CAAAA,QAJoD;AAAA,MAKpD0B,CAAAA,GAAAA,CAAAA,CAAAA,SALoD;AAAA,MAMpDyB,CAAAA,GAAAA,CAAAA,CAAAA,iBANoD;AAAA,MAOpD1G,CAAAA,GAAAA,CAAAA,CAAAA,OAPoD;AAAA,MAQpDG,CAAAA,GAAAA,CAAAA,CAAAA,SARoD;AAAA,MASpDC,CAAAA,GAAAA,CAAAA,CAAAA,WAToD;AAAA,MAUpDuG,CAAAA,GAAAA,CAAAA,CAAAA,UAVoD;AAAA,MAWpDC,CAAAA,GAAAA,CAAAA,CAAAA,WAXoD;AAAA,MAYpD/G,CAAAA,GAAAA,CAAAA,CAAAA,QAZoD;AAAA,MAapDgH,CAAAA,GAAAA,CAAAA,CAAAA,OAboD;AAAA,MAcpDpD,CAAAA,GAAAA,CAAAA,CAAAA,KAdoD;AAAA,MAepDqD,CAAAA,GAAAA,CAAAA,CAAAA,KAfoD;AAAA,MAgBpDnD,CAAAA,GAAAA,CAAAA,CAAAA,MAhBoD;AAAA,MAkB9C8J,CAAAA,GAAWc,CAAAA,CAAAA,gBAAAA,CAlBmC;AAAA,MAoB9CjH,CAAAA,GAAcvD,CAAAA,CAAQ,YAAA;AAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AAC1B,WACE0C,CAAAA,IACA,IAAIxI,KAAAA,CAAMC,IAAND,CAAWsJ,WAAf,CACEd,CAAAA,CAAMe,GADR,EAEE,IAAIvJ,KAAAA,CAAMC,IAAND,CAAWwJ,IAAf,CAAoBhB,CAAAA,CAAMiB,IAANjB,CAAWkB,KAA/B,EAAsClB,CAAAA,CAAMiB,IAANjB,CAAWmB,MAAjD,CAFF,EAGE;AACEC,MAAAA,GAAAA,EAAAA,SAAAA,CAAAA,GAAKpB,CAAAA,CAAMqB,OAAXD,IAAWC,KAAAA,CAAXD,GAAKpB,CAAAA,CAAeoB,GADtB;AAEEE,MAAAA,MAAAA,EAAAA,SAAAA,CAAAA,GAAQtB,CAAAA,CAAMqB,OAAdC,IAAcD,KAAAA,CAAdC,GAAQtB,CAAAA,CAAesB,MAFzB;AAGEC,MAAAA,MAAAA,EAAAA,CAAAA,SAAAA,CAAAA,GACEvB,CAAAA,CAAMqB,OADRE,IACQF,KAAAA,CADRE,GACQF,CAAAA,CAASE,MADjBA,KAEE,IAAI/J,KAAAA,CAAMC,IAAND,CAAWgK,KAAf,CAAeA,SAAAA,CAAAA,GACbxB,CAAAA,CAAMqB,OADOG,IACPH,KAAAA,CADOG,GACbxB,CAAAA,CAAeuB,MAAfvB,CAAsB9E,CADxB,EACwBA,SAAAA,CAAAA,GACtB8E,CAAAA,CAAMqB,OADgBnG,IAChBmG,KAAAA,CADgBnG,GACtB8E,CAAAA,CAAeuB,MAAfvB,CAAsB7E,CAFxB,CALJ;AASEsG,MAAAA,KAAAA,EAAAA,SAAAA,CAAAA,GAAOzB,CAAAA,CAAMqB,OAAbI,IAAaJ,KAAAA,CAAbI,GAAOzB,CAAAA,CAAeyB,KATxB;AAUEC,MAAAA,YAAAA,EAAAA,CAAAA,SAAAA,CAAAA,GACE1B,CAAAA,CAAMqB,OADRK,IACQL,KAAAA,CADRK,GACQL,CAAAA,CAASK,YADjBA,KAEE,IAAIlK,KAAAA,CAAMC,IAAND,CAAWgK,KAAf,CAAeA,SAAAA,CAAAA,GACbxB,CAAAA,CAAMqB,OADOG,IACPH,KAAAA,CADOG,GACbxB,CAAAA,CAAe0B,YAAf1B,CAA4B9E,CAD9B,EAC8BA,SAAAA,CAAAA,GAC5B8E,CAAAA,CAAMqB,OADsBnG,IACtBmG,KAAAA,CADsBnG,GAC5B8E,CAAAA,CAAe0B,YAAf1B,CAA4B7E,CAF9B,CAZJ;AAgBEwG,MAAAA,UAAAA,EAAAA,CAAAA,SAAAA,CAAAA,GACE3B,CAAAA,CAAMqB,OADRM,IACQN,KAAAA,CADRM,GACQN,CAAAA,CAASM,UADjBA,KAEE,IAAInK,KAAAA,CAAMC,IAAND,CAAWwJ,IAAf,CAAeA,SAAAA,CAAAA,GACbhB,CAAAA,CAAMqB,OADOL,IACPK,KAAAA,CADOL,GACbhB,CAAAA,CAAe2B,UAAf3B,CAA0BkB,KAD5B,EAC4BA,SAAAA,CAAAA,GAC1BlB,CAAAA,CAAMqB,OADoBH,IACpBG,KAAAA,CADoBH,GAC1BlB,CAAAA,CAAe2B,UAAf3B,CAA0BmB,MAF5B;AAlBJ,KAHF,CAFF;AAyBoCA,GA1BlB7D,EA+BjB,CAAC0C,CAAD,CA/BiB1C,CApBgC;AAAA,MAqD9CsE,CAAAA,GAAiBtE,CAAAA,CAAQ,YAAA;AAC7B,WAAI,SAASV,CAAT,GAASA,IACApF,KAAAA,CAAMC,IAAND,CAAWsD,MADX8B,CACkBA,CAAAA,CAAS7B,GAD3B6B,EACgCA,CAAAA,CAAS5B,GADzC4B,CAAT,GAGA,OAAOA,CAAP,GAAOA,IACEpF,KAAAA,CAAMC,IAAND,CAAWyD,MADb2B,CACoBA,CAAAA,CAAS1B,CAD7B0B,EACgCA,CAAAA,CAASzB,CADzCyB,EAC4CrB,QAD5CqB,EAAP,GACmDrB,IAE5C/D,KAAAA,CAAMC,IAAND,CAAWyQ,SAFiC1M,CAGrDqB,CAAAA,CAASuJ,GAH4C5K,EAIrDqB,CAAAA,CAAS2J,IAJ4ChL,EAKrDqB,CAAAA,CAAS4J,IAL4CjL,EAMrDqB,CAAAA,CAASwJ,MAN4C7K,CAJvD;AAUW6K,GAXU9I,EAepB,CAEDV,CAAAA,CAAS7B,GAFR,EAID6B,CAAAA,CAAS5B,GAJR,EAMD4B,CAAAA,CAAS1B,CANR,EAQD0B,CAAAA,CAASzB,CARR,EAUDyB,CAAAA,CAASuJ,GAVR,EAYDvJ,CAAAA,CAAS2J,IAZR,EAcD3J,CAAAA,CAAS4J,IAdR,EAcQA,QAET5J,CAFS4J,GAET5J,KAAAA,CAFS4J,GAET5J,CAAAA,CAAUwJ,MAhBT,CAfoB9I,CArD6B;AAwFpD,SACExF,CAAAA,CAAAA,aAAAA,CAACiI,CAADjI,EAACiI;AACC5F,IAAAA,GAAAA,EAAK6M,CADNjH;AAECnD,IAAAA,QAAAA,EAAUgF,CAFX7B;AAGCC,IAAAA,KAAAA,EAAOa,CAHRd;AAICjD,IAAAA,QAAAA,EAAUA,CAJXiD;AAKCvB,IAAAA,SAAAA,EAAWA,CALZuB;AAMCE,IAAAA,iBAAAA,EAAmBA,CANpBF;AAOCxG,IAAAA,OAAAA,EAASA,CAPVwG;AAQCrG,IAAAA,SAAAA,EAAWA,CARZqG;AASCpG,IAAAA,WAAAA,EAAaA,CATdoG;AAUCG,IAAAA,UAAAA,EAAYA,CAVbH;AAWCI,IAAAA,WAAAA,EAAaA,CAXdJ;AAYC3G,IAAAA,QAAAA,EAAUA,CAZX2G;AAaCK,IAAAA,OAAAA,EAASA,CAbVL;AAcC/C,IAAAA,KAAAA,EAAOA,CAdR+C;AAeCM,IAAAA,KAAAA,EAAOA,CAfRN;AAgBC7C,IAAAA,MAAAA,EAAQA;AAhBT6C,GAADjI,EAkBGK,CAlBHL,CADF;AAmBKK,CJ7IDwN;AAAAA,IKnEA4C,CAAAA,GAAwD,UAAA,CAAA,EAAA;AAAA,MAC5DtQ,CAAAA,GAAAA,CAAAA,CAAAA,EAD4D;AAAA,MAE5DM,CAAAA,GAAAA,CAAAA,CAAAA,SAF4D;AAAA,MAG5DL,CAAAA,GAAAA,CAAAA,CAAAA,KAH4D;AAAA,MAI5D0E,CAAAA,GAAAA,CAAAA,CAAAA,QAJ4D;AAAA,MAK5DzE,CAAAA,GAAAA,CAAAA,CAAAA,QAL4D;AAAA,MAM5D2E,CAAAA,GAAAA,CAAAA,CAAAA,QAN4D;AAAA,MAO5DC,CAAAA,GAAAA,CAAAA,CAAAA,cAP4D;AAAA,MAQ5DC,CAAAA,GAAAA,CAAAA,CAAAA,KAR4D;AAAA,MAS5DC,CAAAA,GAAAA,CAAAA,CAAAA,SAT4D;AAAA,MAU5DC,CAAAA,GAAAA,CAAAA,CAAAA,MAV4D;AAAA,MAW5D9D,CAAAA,GAAAA,CAAAA,CAAAA,QAX4D;AAAA,MAatD4N,CAAAA,GAAWc,CAAAA,CAAAA,oBAAAA,CAb2C;AAAA,MActDhG,CAAAA,GAAexE,CAAAA,CAAQ,YAAA;AAC3B,WAAI,SAASV,CAAT,GAASA,IACApF,KAAAA,CAAMC,IAAND,CAAWsD,MADX8B,CACkBA,CAAAA,CAAS7B,GAD3B6B,EACgCA,CAAAA,CAAS5B,GADzC4B,CAAT,GACkD5B,IAE3CxD,KAAAA,CAAMC,IAAND,CAAWyQ,SAFgCjN,CAGpD4B,CAAAA,CAASuJ,GAH2CnL,EAIpD4B,CAAAA,CAAS2J,IAJ2CvL,EAKpD4B,CAAAA,CAAS4J,IAL2CxL,EAMpD4B,CAAAA,CAASwJ,MAN2CpL,CADtD;AAOWoL,GARQ9I,EAWlB,CAEDV,CAAAA,CAAS7B,GAFR,EAID6B,CAAAA,CAAS5B,GAJR,EAMD4B,CAAAA,CAASuJ,GANR,EAQDvJ,CAAAA,CAAS2J,IARR,EAUD3J,CAAAA,CAAS4J,IAVR,EAYD5J,CAAAA,CAASwJ,MAZR,CAXkB9I,CAduC;AAyC5D,SACExF,CAAAA,CAAAA,aAAAA,CAAC6E,CAAD7E,EAAC6E;AACC1E,IAAAA,EAAAA,EAAIA,CADL0E;AAECpE,IAAAA,SAAAA,EAAWA,CAFZoE;AAGCzE,IAAAA,KAAAA,EAAOA,CAHRyE;AAICG,IAAAA,QAAAA,EAAUA,CAJXH;AAKCI,IAAAA,cAAAA,EAAgBA,CALjBJ;AAMCK,IAAAA,KAAAA,EAAOA,CANRL;AAOCM,IAAAA,SAAAA,EAAWA,CAPZN;AAQCO,IAAAA,MAAAA,EAAQA,CARTP;AASCxC,IAAAA,GAAAA,EAAK6M,CATNrK;AAUCC,IAAAA,QAAAA,EAAUkF,CAVXnF;AAWCvD,IAAAA,QAAAA,EAAUA;AAXXuD,GAAD7E,EAaGK,CAbHL,CADF;AAcKK,CLYDwN;;AKZCxN,SAAAA,CAAAA,IAAAA,eAAAA,EAAAA,CAAAA,IAAAA,MAAAA,EAAAA,CAAAA,IAAAA,gBAAAA,EAAAA,CAAAA,IAAAA,qBAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,GAAAA,EAAAA,CAAAA,IAAAA,aAAAA,EAAAA,CAAAA,IAAAA,SAAAA,EAAAA,CAAAA,IAAAA,cAAAA,EAAAA,CAAAA,IAAAA,SAAAA,EAAAA,CAAAA,IAAAA,eAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,QAAAA,EAAAA,CAAAA,IAAAA,SAAAA,EAAAA,CAAAA,IAAAA,QAAAA,EAAAA,CAAAA,IAAAA,kBAAAA,EAAAA,CAAAA,IAAAA,cAAAA,EAAAA,CAAAA,IAAAA,WAAAA,EAAAA,CAAAA,IAAAA,MAAAA,EAAAA,CAAAA,IAAAA,WAAAA","sourcesContent":["import { useEffect } from \"react\"\n\nconst useKakaoEvent = <T extends kakao.maps.event.EventTarget>(\n  /**\n   * 이벤트 타겟\n   */\n  target: T | undefined,\n  /**\n   * event 타입\n   */\n  type: string,\n  /**\n   * 호출될 callback\n   */\n  callback: ((target: T, ...args: any[]) => void) | undefined\n) => {\n  useEffect(() => {\n    if (!target || !callback) return\n\n    const wrapCallback = (...arg: any[]) => {\n      if (arg === undefined) return callback(target)\n      else return callback(target, ...arg)\n    }\n\n    kakao.maps.event.addListener(target, type, wrapCallback)\n\n    return () => {\n      kakao.maps.event.removeListener(target, type, wrapCallback)\n    }\n  }, [target, type, callback])\n}\n\nexport default useKakaoEvent\n","import React, { useEffect, useRef, useState } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\n\nexport const KakaoMapContext = React.createContext<kakao.maps.Map>(\n  undefined as unknown as kakao.maps.Map\n)\nexport interface MapProps {\n  /**\n   * MapContinaer의 id에 대해서 지정합니다.\n   *\n   * @default  \"kakao-map-container\"\n   */\n  id?: string\n\n  /**\n   * MapContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * MapContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   */\n  center:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  /**\n   * 중심을 이동시킬때 Panto를 사용할지 정합니다.\n   * @default false\n   */\n  isPanto?: boolean\n\n  /**\n   * 중심 좌표를 지정한 좌표 또는 영역으로 부드럽게 이동한다. 필요하면 확대 또는 축소도 수행한다.\n   * 만약 이동할 거리가 지도 화면의 크기보다 클 경우 애니메이션 없이 이동한다.\n   * padding 만큼 제외하고 영역을 계산하며, padding 을 지정하지 않으면 기본값으로 32가 사용된다.\n   */\n  padding?: number\n\n  /**\n   * 확대 수준 (기본값: 3)\n   */\n  level?: number\n\n  /**\n   * 최대 확대 수준\n   */\n  maxLevel?: number\n\n  /**\n   * 최소 확대 수준\n   */\n  minLevel?: number\n\n  /**\n   * 지도 종류 (기본값: 일반 지도)\n   */\n  mapTypeId?: kakao.maps.MapTypeId\n\n  /**\n   * 마우스 드래그, 휠, 모바일 터치를 이용한 시점 변경(이동, 확대, 축소) 가능 여부\n   */\n  draggable?: boolean\n\n  /**\n   * 마우스 휠이나 멀티터치로 지도 확대, 축소 기능을 막습니다. 상황에 따라 지도 확대, 축소 기능을 제어할 수 있습니다.\n   */\n  zoomable?: boolean\n\n  /**\n   * 마우스 휠, 모바일 터치를 이용한 확대 및 축소 가능 여부\n   */\n  scrollwheel?: boolean\n\n  /**\n   * 더블클릭 이벤트 및 더블클릭 확대 가능 여부\n   */\n  disableDoubleClick?: boolean\n\n  /**\n   * 더블클릭 확대 가능 여부\n   */\n  disableDoubleClickZoom?: boolean\n\n  /**\n   * 투영법 지정 (기본값: kakao.maps.ProjectionId.WCONG)\n   */\n  projectionId?: string\n\n  /**\n   * 지도 타일 애니메이션 설정 여부 (기본값: true)\n   */\n  tileAnimation?: boolean\n\n  /**\n   * 키보드의 방향키와 +, – 키로 지도 이동,확대,축소 가능 여부 (기본값: false)\n   */\n  keyboardShortcuts?:\n    | boolean\n    | {\n        /**\n         * 지도 이동 속도\n         */\n        speed: number\n      }\n\n  /**\n   * map 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (map: kakao.maps.Map) => void\n\n  /**\n   * 중심 좌표가 변경되면 발생한다.\n   */\n  onCenterChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되기 직전 발생한다.\n   */\n  onZoomStart?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대 수준이 변경되면 발생한다.\n   */\n  onZoomChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 영역이 변경되면 발생한다.\n   */\n  onBoundsChanged?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도를 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 더블클릭하면 발생한다.\n   */\n  onDoubleClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도를 마우스 오른쪽 버튼으로 클릭하면 발생한다.\n   */\n  onRightClick?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 지도에서 마우스 커서를 이동하면 발생한다.\n   */\n  onMouseMove?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 시작할 때 발생한다.\n   */\n  onDragStart?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그를 하는 동안 발생한다.\n   */\n  onDrag?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 드래그가 끝날 때 발생한다.\n   */\n  onDragEnd?: (\n    target: kakao.maps.Map,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 중심 좌표나 확대 수준이 변경되면 발생한다.\n   * 단, 애니메이션 도중에는 발생하지 않는다.\n   */\n  onIdle?: (target: kakao.maps.Map) => void\n\n  /**\n   * 확대수준이 변경되거나 지도가 이동했을때 타일 이미지 로드가 모두 완료되면 발생한다.\n   * 지도이동이 미세하기 일어나 타일 이미지 로드가 일어나지 않은경우 발생하지 않는다.\n   */\n  onTileLoaded?: (target: kakao.maps.Map) => void\n\n  /**\n   * 지도 기본 타일(일반지도, 스카이뷰, 하이브리드)이 변경되면 발생한다.\n   */\n  onMaptypeidChanged?: (target: kakao.maps.Map) => void\n}\n\n/**\n * 기본적인 Map 객체를 생성하는 Comeponent 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `map` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Map: React.FC<MapProps> = ({\n  id = \"kakao-map-container\",\n  style,\n  children,\n  center,\n  isPanto = false,\n  padding = 32,\n  className,\n  disableDoubleClick,\n  disableDoubleClickZoom,\n  draggable,\n  zoomable,\n  keyboardShortcuts,\n  level,\n  maxLevel,\n  minLevel,\n  mapTypeId,\n  projectionId,\n  scrollwheel,\n  tileAnimation,\n  onCreate,\n  onBoundsChanged,\n  onCenterChanged,\n  onClick,\n  onDoubleClick,\n  onDrag,\n  onDragEnd,\n  onDragStart,\n  onIdle,\n  onMaptypeidChanged,\n  onMouseMove,\n  onRightClick,\n  onTileLoaded,\n  onZoomChanged,\n  onZoomStart,\n}) => {\n  const [map, setMap] = useState<kakao.maps.Map>()\n\n  const container = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!window.kakao) {\n      console.warn(\n        \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n      )\n      return\n    }\n    if (!container.current) {\n      return\n    }\n\n    kakao.maps.load(() => {\n      const initalMapCenter =\n        \"lat\" in center\n          ? new kakao.maps.LatLng(center.lat, center.lng)\n          : new kakao.maps.Coords(center.x, center.y)\n      const kakaoMap = new kakao.maps.Map(container.current as HTMLDivElement, {\n        center: initalMapCenter,\n        disableDoubleClick: disableDoubleClick,\n        disableDoubleClickZoom: disableDoubleClickZoom,\n        draggable: draggable,\n        keyboardShortcuts: keyboardShortcuts,\n        level: level,\n        mapTypeId: mapTypeId,\n        projectionId: projectionId,\n        scrollwheel: scrollwheel,\n        tileAnimation: tileAnimation,\n      })\n\n      setMap(kakaoMap)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disableDoubleClick, disableDoubleClickZoom, mapTypeId, tileAnimation])\n\n  useEffect(() => {\n    if (!map || !onCreate) return\n    onCreate(map)\n  }, [map, onCreate])\n\n  // center position 변경시 map center 변경\n  useEffect(() => {\n    if (!map) return\n\n    let prevCenter = map.getCenter()\n    if (prevCenter instanceof kakao.maps.Coords) {\n      prevCenter = prevCenter.toLatLng()\n    }\n\n    const centerPosition =\n      \"lat\" in center\n        ? new kakao.maps.LatLng(center.lat, center.lng)\n        : new kakao.maps.Coords(center.x, center.y)\n\n    if (\n      (centerPosition instanceof kakao.maps.LatLng &&\n        centerPosition.equals(prevCenter)) ||\n      (centerPosition instanceof kakao.maps.Coords &&\n        centerPosition.toLatLng().equals(prevCenter))\n    ) {\n      return\n    }\n\n    if (isPanto) {\n      map.panTo(centerPosition, padding)\n    } else {\n      map.setCenter(centerPosition)\n    }\n    // @ts-ignore\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, center.lat, center.lng, center.x, center.y])\n\n  useEffect(() => {\n    if (!map || typeof draggable === \"undefined\") return\n    map.setDraggable(draggable)\n  }, [map, draggable])\n\n  useEffect(() => {\n    if (!map || typeof zoomable === \"undefined\") return\n    map.setZoomable(zoomable)\n  }, [map, zoomable])\n\n  useEffect(() => {\n    if (!map || !keyboardShortcuts || typeof keyboardShortcuts !== \"boolean\")\n      return\n    map.setKeyboardShortcuts(keyboardShortcuts)\n  }, [map, keyboardShortcuts])\n\n  useEffect(() => {\n    if (!map || !level) return\n    map.setLevel(level)\n  }, [map, level])\n\n  useEffect(() => {\n    if (!map || !mapTypeId) return\n    map.setMapTypeId(mapTypeId)\n  }, [map, mapTypeId])\n\n  useEffect(() => {\n    if (!map || !projectionId) return\n    map.setProjectionId(projectionId)\n  }, [map, projectionId])\n\n  useEffect(() => {\n    if (!map || !maxLevel) return\n    map.setMaxLevel(maxLevel)\n  }, [map, maxLevel])\n\n  useEffect(() => {\n    if (!map || !minLevel) return\n    map.setMinLevel(minLevel)\n  }, [map, minLevel])\n\n  useKakaoEvent(map, \"bounds_changed\", onBoundsChanged)\n  useKakaoEvent(map, \"center_changed\", onCenterChanged)\n  useKakaoEvent(map, \"click\", onClick)\n  useKakaoEvent(map, \"dblclick\", onDoubleClick)\n  useKakaoEvent(map, \"drag\", onDrag)\n  useKakaoEvent(map, \"dragstart\", onDragStart)\n  useKakaoEvent(map, \"dragend\", onDragEnd)\n  useKakaoEvent(map, \"idle\", onIdle)\n  useKakaoEvent(map, \"maptypeid_changed\", onMaptypeidChanged)\n  useKakaoEvent(map, \"mousemove\", onMouseMove)\n  useKakaoEvent(map, \"rightclick\", onRightClick)\n  useKakaoEvent(map, \"tilesloaded\", onTileLoaded)\n  useKakaoEvent(map, \"zoom_changed\", onZoomChanged)\n  useKakaoEvent(map, \"zoom_start\", onZoomStart)\n\n  return (\n    <>\n      <div id={id} style={style} className={className} ref={container}></div>\n      {map && (\n        <KakaoMapContext.Provider value={map}>\n          {children}\n        </KakaoMapContext.Provider>\n      )}\n    </>\n  )\n}\n\nexport default Map\n","import { useContext } from \"react\"\nimport { KakaoMapContext } from \"../components/Map\"\n\n/**\n * kakao map 객체를 가져오는 hook 입니다.\n * Map 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useMap = (componentName?: string) => {\n  const kakaoMap = useContext(KakaoMapContext)\n  if (!kakaoMap) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useMap\"\n      } must exist inside Map Component!`\n    )\n  }\n\n  return kakaoMap\n}\n\nexport default useMap\n","import React, { useEffect, useMemo, useRef } from \"react\"\nimport ReactDom from \"react-dom\"\n\ninterface InfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n  marker?: kakao.maps.Marker\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부\n   * @default false\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\nconst InfoWindow: React.FC<InfoWindowProps> = ({\n  id,\n  className,\n  style,\n  map,\n  position,\n  marker,\n  children,\n  altitude,\n  disableAutoPan,\n  range,\n  removable,\n  zIndex,\n  onCreate,\n}) => {\n  const container = useRef(document.createElement(\"div\"))\n\n  const infoWindow = useMemo(() => {\n    const kakaoInfoWindow = new kakao.maps.InfoWindow({\n      altitude: altitude,\n      disableAutoPan: disableAutoPan,\n      range: range,\n      removable: removable,\n      zIndex: zIndex,\n      content: container.current,\n      position: position,\n    })\n    container.current.style.whiteSpace = \"nowrap\"\n    return kakaoInfoWindow\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [disableAutoPan, removable])\n\n  useEffect(() => {\n    infoWindow.open(map, marker)\n    return () => {\n      infoWindow.close()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, marker])\n\n  useEffect(() => {\n    if (onCreate) onCreate(infoWindow)\n  }, [infoWindow, onCreate])\n\n  useEffect(() => {\n    if (!infoWindow) return\n    infoWindow.setPosition(position)\n  }, [infoWindow, position])\n\n  useEffect(() => {\n    if (!infoWindow || !altitude) return\n    infoWindow.setAltitude(altitude)\n  }, [infoWindow, altitude])\n\n  useEffect(() => {\n    if (!infoWindow || !range) return\n    infoWindow.setRange(range)\n  }, [infoWindow, range])\n\n  useEffect(() => {\n    if (!infoWindow || !zIndex) return\n    infoWindow.setZIndex(zIndex)\n  }, [infoWindow, zIndex])\n\n  useEffect(() => {\n    if (id) container.current.id = id\n  }, [id])\n\n  useEffect(() => {\n    if (className) container.current.className = className\n  }, [className])\n\n  useEffect(() => {\n    if (style) {\n      for (const [key, value] of Object.entries(style)) {\n        container.current.style[key] = value\n      }\n    }\n  }, [style])\n\n  return ReactDom.createPortal(children, container.current)\n}\n\nexport default InfoWindow\n","import React, { useEffect, useState } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport const KakaoMapMarkerClustererContext =\n  React.createContext<kakao.maps.MarkerClusterer>(\n    undefined as unknown as kakao.maps.MarkerClusterer\n  )\n\nexport interface MarkerClustererProps {\n  /**\n   * 클러스터의 격자 크기. 화면 픽셀 단위이며 해당 격자 영역 안에 마커가 포함되면 클러스터에 포함시킨다\n   * @default 60\n   */\n  gridSize?: number\n  /**\n   * 마커들의 좌표 평균을 클러스터 좌표 설정 여부\n   * @default false\n   */\n  averageCenter?: boolean\n  /**\n   * 클러스터링 할 지도의 최소 레벨 값. 지정한 숫자에 해당하는 레벨 미만에서는 클러스터링 하지 않는다\n   * @default 0\n   */\n  minLevel?: number\n  /**\n   * 클러스터링 할 최소 마커 수\n   * @default 2\n   */\n  minClusterSize?: number\n  /**\n   * 클러스터의 스타일. 여러개를 선언하면 calculator 로 구분된 사이즈 구간마다 서로 다른 스타일을 적용시킬 수 있다\n   */\n  styles?: React.CSSProperties[] | object[]\n  /**\n   * 클러스터에 표시할 문자열 또는 문자열 생성 함수.\n   * @default \"클러스터에 포함된 숫자\"\n   */\n  texts?: string[] | ((size: number) => string)\n  /**\n   * 클러스터 크기를 구분하는 값을 가진 배열 또는 구분값 생성함수\n   * @default [10, 100, 1000, 10000]\n   */\n  calculator?: number[] | ((size: number) => number[])\n  /**\n   * 클러스터 클릭 시 지도 확대 여부. true로 설정하면 클러스터 클릭 시 확대 되지 않는다\n   * @default false\n   */\n  disableClickZoom?: boolean\n  /**\n   * 클러스터 클릭 가능 여부 지정 옵션. false일 경우 클러스터의 clusterclick, clusterdblclick, clusterrightclick 이벤트가 발생하지 않으며, 커서가 변경되지 않는다.\n   * @default true\n   */\n  clickable?: boolean\n  /**\n   * 클러스터에 마우스 over/out 가능 여부 지정 옵션. false일 경우 클러스터의 clusterover, clusterout 이벤트가 발생하지 않는다.\n   * @default true\n   */\n  hoverable?: boolean\n\n  /**\n   * 클러스터 마커를 클릭 했을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 Cluster 객체가 넘어온다.\n   * 클러스터 마커 클릭 시 지도가 줌인 되는 경우 원하는 Cluster 객체를 얻지 못할 수도 있다.\n   * 때문에 MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정하여\n   * 클러스터 마커를 클릭했을 때 지도가 줌인되지 않도록 설정 후 사용한다.\n   */\n  onClusterclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 오버 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 오버한 Cluster 객체가 넘어온다.\n   */\n  onClusterover?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 마우스 아웃 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 마우스 아웃된 Cluster 객체가 넘어온다.\n   */\n  onClusterout?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 더블클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 더블클릭한 Cluster 객체가 넘어온다.\n   * MarkerClusterer 를 생성할 때 disableClickZoom 옵션을 true로 설정해야만 이벤트가 발생한다.\n   */\n  onClusterdblclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터 마커를 오른쪽 클릭 했을 때 발생한다\n   * 이벤트 핸들러 함수 인자로는 오른쪽 클릭한 Cluster 객체가 넘어온다.\n   */\n  onClusterrightclick?: (\n    target: kakao.maps.MarkerClusterer,\n    cluster: kakao.maps.Cluster\n  ) => void\n  /**\n   * 클러스터링이 완료됐을 때 발생한다.\n   * 이벤트 핸들러 함수 인자로는 생성된 Cluster 객체 전체가 배열로 넘어온다.\n   */\n  onClustered?: (\n    target: kakao.maps.MarkerClusterer,\n    clusters: kakao.maps.Cluster[]\n  ) => void\n  /**\n   * MarkerClusterer 생성 후 해당 객체를 전달하는 함수\n   */\n  onCreate?: (target: kakao.maps.MarkerClusterer) => void\n}\n\nconst MarkerClusterer: React.FC<MarkerClustererProps> = ({\n  children,\n  averageCenter,\n  calculator,\n  clickable,\n  disableClickZoom,\n  gridSize,\n  hoverable,\n  minClusterSize,\n  minLevel,\n  styles,\n  texts,\n  onClusterclick,\n  onClusterdblclick,\n  onClustered,\n  onClusterout,\n  onClusterover,\n  onClusterrightclick,\n  onCreate,\n}) => {\n  const map = useMap(`MarkerClusterer`)\n  const [markerCluster, setMarkerCluster] =\n    useState<kakao.maps.MarkerClusterer>()\n\n  useEffect(() => {\n    if (!window.kakao.maps.MarkerClusterer) {\n      console.warn(\n        \"clusterer 라이브러리를 별도 로드 해야 사용 가능합니다. `https://apis.map.kakao.com/web/guide/#loadlibrary`\"\n      )\n      return\n    }\n    const cluster = new kakao.maps.MarkerClusterer({\n      averageCenter,\n      calculator,\n      clickable,\n      disableClickZoom,\n      gridSize,\n      hoverable,\n      minClusterSize,\n      minLevel,\n      styles,\n      texts,\n    })\n\n    setMarkerCluster(cluster)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    markerCluster?.setMap(map)\n  }, [map, markerCluster])\n\n  useEffect(() => {\n    if (markerCluster && onCreate) onCreate(markerCluster)\n  }, [markerCluster, onCreate])\n\n  useEffect(() => {\n    if (markerCluster && gridSize) {\n      markerCluster.setGridSize(gridSize)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, gridSize])\n\n  useEffect(() => {\n    if (markerCluster && minClusterSize) {\n      markerCluster.setMinClusterSize(minClusterSize)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, minClusterSize])\n\n  useEffect(() => {\n    if (markerCluster && typeof averageCenter !== \"undefined\") {\n      markerCluster.setAverageCenter(averageCenter)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, averageCenter])\n\n  useEffect(() => {\n    if (markerCluster && minLevel) {\n      markerCluster.setMinLevel(minLevel)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, minLevel])\n\n  useEffect(() => {\n    if (markerCluster && texts) {\n      markerCluster.setTexts(texts)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, texts])\n\n  useEffect(() => {\n    if (markerCluster && calculator) {\n      markerCluster.setCalculator(calculator)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, calculator])\n\n  useEffect(() => {\n    if (markerCluster && styles) {\n      markerCluster.setStyles(styles)\n      markerCluster.redraw()\n    }\n  }, [markerCluster, styles])\n\n  useKakaoEvent(markerCluster, \"clusterclick\", onClusterclick)\n  useKakaoEvent(markerCluster, \"clusterover\", onClusterover)\n  useKakaoEvent(markerCluster, \"clusterout\", onClusterout)\n  useKakaoEvent(markerCluster, \"clusterdblclick\", onClusterdblclick)\n  useKakaoEvent(markerCluster, \"clusterrightclick\", onClusterrightclick)\n  useKakaoEvent(markerCluster, \"clustered\", onClustered)\n\n  if (!markerCluster) {\n    return null\n  }\n\n  return (\n    <KakaoMapMarkerClustererContext.Provider value={markerCluster}>\n      {children}\n    </KakaoMapMarkerClustererContext.Provider>\n  )\n}\n\nexport default MarkerClusterer\n","import React, { useContext, useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport InfoWindow from \"./InfoWindow\"\nimport { KakaoMapMarkerClustererContext } from \"./MarkerClusterer\"\n\ninterface MarkerProps {\n  map: kakao.maps.Map | kakao.maps.Roadview\n  position: kakao.maps.LatLng | kakao.maps.Viewpoint\n\n  /**\n   * marker 생성 후 marker 객체를 전달하는 callback\n   */\n  onCreate?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * 마커의 이미지\n   */\n  image?: kakao.maps.MarkerImage\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * Contianer id에 대해서 지정합니다.\n     */\n    id?: string\n\n    /**\n     * Contianer className에 대해서 지정합니다.\n     */\n    className?: string\n\n    /**\n     * Contianer style에 대해서 지정합니다.\n     */\n    style?: React.CSSProperties\n\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n\n    /**\n     * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n     */\n    altitude?: number\n\n    /**\n     * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n     */\n    range?: number\n  }\n}\n\nconst Marker: React.FC<MarkerProps> = ({\n  map,\n  position,\n  children,\n  altitude,\n  clickable,\n  draggable,\n  image,\n  infoWindowOptions,\n  onCreate,\n  onClick,\n  onDragEnd,\n  onDragStart,\n  onMouseOut,\n  onMouseOver,\n  opacity,\n  range,\n  title,\n  zIndex,\n}) => {\n  const markerCluster = useContext(KakaoMapMarkerClustererContext)\n\n  // Marker 객체는 단 한번만 생성 되도록 함\n  const marker = useMemo(() => {\n    const kakaoMarker = new kakao.maps.Marker({\n      altitude,\n      clickable,\n      draggable,\n      image,\n      opacity,\n      range,\n      title,\n      zIndex,\n      position,\n    })\n\n    return kakaoMarker\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (markerCluster) {\n      markerCluster.addMarker(marker)\n    } else {\n      marker.setMap(map)\n    }\n\n    return () => {\n      if (markerCluster) {\n        markerCluster.removeMarker(marker)\n      } else {\n        marker.setMap(null)\n      }\n    }\n  }, [map, markerCluster, marker])\n\n  useEffect(() => {\n    if (onCreate) onCreate(marker)\n  }, [marker, onCreate])\n\n  useKakaoEvent(marker, \"click\", onClick)\n  useKakaoEvent(marker, \"dragstart\", onDragStart)\n  useKakaoEvent(marker, \"dragend\", onDragEnd)\n  useKakaoEvent(marker, \"mouseout\", onMouseOut)\n  useKakaoEvent(marker, \"mouseover\", onMouseOver)\n\n  // position이 변경되면 객체를 갱신한다.\n  useEffect(() => {\n    if (!map || !marker || !position) return\n\n    marker.setPosition(position)\n  }, [map, marker, position])\n\n  // image 객체가 존재하면 이미지를 로드한다\n  useEffect(() => {\n    if (!map || !marker || !image) return\n\n    marker.setImage(image)\n  }, [map, marker, image])\n\n  // altitude 값이 있으면 높이를 조정한다\n  useEffect(() => {\n    if (!map || !marker || !altitude) return\n\n    marker.setAltitude(altitude)\n  }, [map, marker, altitude])\n\n  // clickable 값이 있으면 클릭이 가능하도록 한다.\n  useEffect(() => {\n    if (!map || !marker || typeof clickable === \"undefined\") return\n\n    marker.setClickable(clickable)\n  }, [map, marker, clickable])\n\n  // draggable 값이 있으면 드래그가 가능하도록 한다.\n  useEffect(() => {\n    if (!map || !marker || typeof draggable === \"undefined\") return\n\n    marker.setDraggable(draggable)\n  }, [map, marker, draggable])\n\n  // opacity 값이 있으면 투명도를 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !opacity) return\n\n    marker.setOpacity(opacity)\n  }, [map, marker, opacity])\n\n  // range 값이 있으면 마커의 가시반경을 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !range) return\n\n    marker.setRange(range)\n  }, [map, marker, range])\n\n  // title 값이 있으면 마커의 제목을 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !title) return\n\n    marker.setTitle(title)\n  }, [map, marker, title])\n\n  // zIndex 값이 있으면 마커의 zindex를 조절한다.\n  useEffect(() => {\n    if (!map || !marker || !zIndex) return\n\n    marker.setZIndex(zIndex)\n  }, [map, marker, zIndex])\n\n  if (children)\n    return (\n      <InfoWindow\n        position={position}\n        map={map}\n        marker={marker}\n        id={infoWindowOptions?.id}\n        className={infoWindowOptions?.className}\n        style={infoWindowOptions?.style}\n        altitude={infoWindowOptions?.altitude}\n        disableAutoPan={infoWindowOptions?.disableAutoPan}\n        range={infoWindowOptions?.range}\n        removable={infoWindowOptions?.removable}\n        zIndex={infoWindowOptions?.zIndex}\n      >\n        {children}\n      </InfoWindow>\n    )\n\n  return null\n}\n\nexport default Marker\n","import React, { useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\nimport Marker from \"./Marker\"\n\nexport interface MapMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * Contianer id에 대해서 지정합니다.\n       */\n      id?: string\n\n      /**\n       * Contianer className에 대해서 지정합니다.\n       */\n      className?: string\n\n      /**\n       * Contianer style에 대해서 지정합니다.\n       */\n      style?: React.CSSProperties\n\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 드래그 가능한 마커, 로드뷰에 올릴 경우에는 유효하지 않다.\n   */\n  draggable?: boolean\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * Contianer id에 대해서 지정합니다.\n     */\n    id?: string\n\n    /**\n     * Contianer className에 대해서 지정합니다.\n     */\n    className?: string\n\n    /**\n     * Contianer style에 대해서 지정합니다.\n     */\n    style?: React.CSSProperties\n\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapMarker: React.FC<MapMarkerProps> = ({\n  image,\n  position,\n  children,\n  clickable,\n  draggable,\n  infoWindowOptions,\n  onClick,\n  onDragEnd,\n  onDragStart,\n  onMouseOut,\n  onMouseOver,\n  onCreate,\n  opacity,\n  title,\n  zIndex,\n}) => {\n  const map = useMap(`MapMarker`)\n\n  const markerImage = useMemo(() => {\n    return (\n      image &&\n      new kakao.maps.MarkerImage(\n        image.src,\n        new kakao.maps.Size(image.size.width, image.size.height),\n        {\n          alt: image.options?.alt,\n          coords: image.options?.coords,\n          offset:\n            image.options?.offset &&\n            new kakao.maps.Point(\n              image.options?.offset.x,\n              image.options?.offset.y\n            ),\n          shape: image.options?.shape,\n          spriteOrigin:\n            image.options?.spriteOrigin &&\n            new kakao.maps.Point(\n              image.options?.spriteOrigin.x,\n              image.options?.spriteOrigin.y\n            ),\n          spriteSize:\n            image.options?.spriteSize &&\n            new kakao.maps.Size(\n              image.options?.spriteSize.width,\n              image.options?.spriteSize.height\n            ),\n        }\n      )\n    )\n  }, [image])\n\n  const markerPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    return new kakao.maps.Coords(position.x, position.y).toLatLng()\n\n    // @ts-ignore\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [position.lat, position.lng, position.x, position.y])\n\n  return (\n    <Marker\n      map={map}\n      position={markerPosition}\n      image={markerImage}\n      clickable={clickable}\n      draggable={draggable}\n      infoWindowOptions={infoWindowOptions}\n      onClick={onClick}\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      onMouseOut={onMouseOut}\n      onMouseOver={onMouseOver}\n      onCreate={onCreate}\n      opacity={opacity}\n      title={title}\n      zIndex={zIndex}\n    >\n      {children}\n    </Marker>\n  )\n}\n\nexport default MapMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst MapInfoWindow: React.FC<MapInfoWindowProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  disableAutoPan,\n  removable,\n  zIndex,\n  onCreate,\n}) => {\n  const map = useMap(`MapInfoWindow`)\n  const infoPosition = useMemo(() => {\n    return new kakao.maps.LatLng(position.lat, position.lng)\n  }, [position.lat, position.lng])\n\n  return (\n    <InfoWindow\n      id={id}\n      className={className}\n      style={style}\n      disableAutoPan={disableAutoPan}\n      removable={removable}\n      zIndex={zIndex}\n      map={map}\n      position={infoPosition}\n      onCreate={onCreate}\n    >\n      {children}\n    </InfoWindow>\n  )\n}\n\nexport default MapInfoWindow\n","import React, { useEffect, useMemo, useRef } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CustomOverlayMapProps {\n  /**\n   * CustomOverlay의 Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * CustomOverlay의 Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * CustomOverlay의 Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position: {\n    lat: number\n    lng: number\n  }\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Map에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 함수를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayMap: React.FC<CustomOverlayMapProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  clickable,\n  xAnchor,\n  yAnchor,\n  zIndex,\n  onCreate,\n}) => {\n  const map = useMap(`CustomOverlayMap`)\n  const container = useRef(document.createElement(\"div\"))\n\n  const overlayPosition = useMemo(() => {\n    return new kakao.maps.LatLng(position.lat, position.lng)\n  }, [position.lat, position.lng])\n\n  const overlay = useMemo(() => {\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container.current,\n    })\n\n    return KakaoCustomOverlay\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor])\n\n  useEffect(() => {\n    if (!map) return\n\n    overlay.setMap(map)\n    return () => {\n      overlay.setMap(null)\n    }\n  }, [map, overlay])\n\n  useEffect(() => {\n    if (onCreate) onCreate(overlay)\n  }, [overlay, onCreate])\n\n  useEffect(() => {\n    overlay.setPosition(overlayPosition)\n  }, [overlay, overlayPosition])\n\n  useEffect(() => {\n    if (!zIndex) return\n    overlay.setZIndex(zIndex)\n  }, [overlay, zIndex])\n\n  useEffect(() => {\n    if (id) container.current.id = id\n  }, [id])\n\n  useEffect(() => {\n    if (className) container.current.className = className\n  }, [className])\n\n  useEffect(() => {\n    if (style) {\n      for (const [key, value] of Object.entries(style)) {\n        container.current.style[key] = value\n      }\n    }\n  }, [style])\n\n  return ReactDOM.createPortal(children, container.current)\n}\n\nexport default CustomOverlayMap\n","import React, { useEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeControlProps {\n  /**\n   * MapTypeControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 일반 지도/하이브리드 간 지도 타입 전환 컨트롤을 생성한다.\n * 현재는 일반 지도/하이브리드 간 전환 컨트롤만 지원되며 다른 지도 타입을 제어하는 컨트롤이 필요할 경우에는 직접 구현해야 한다.\n */\nconst MapTypeControl: React.FC<MapTypeControlProps> = ({\n  position = kakao.maps.ControlPosition.TOPRIGHT,\n}) => {\n  const map = useMap(`MapTypeControl`)\n\n  const mapTypeControl = useMemo(() => {\n    return new kakao.maps.MapTypeControl()\n  }, [])\n\n  useEffect(() => {\n    map.addControl(mapTypeControl, position)\n\n    return () => {\n      map.removeControl(mapTypeControl)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, position])\n\n  return null\n}\n\nexport default MapTypeControl\n","import React, { useEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface ZoomControlProps {\n  /**\n   * ZoomControl의 Position를 정의 한다.\n   */\n  position?: kakao.maps.ControlPosition\n}\n\n/**\n * 확대·축소 컨트롤을 생성한다.\n */\nconst ZoomControl: React.FC<ZoomControlProps> = ({\n  position = kakao.maps.ControlPosition.RIGHT,\n}) => {\n  const map = useMap(`ZoomControl`)\n\n  const ZoomControl = useMemo(() => {\n    return new kakao.maps.ZoomControl()\n  }, [])\n\n  useEffect(() => {\n    map.addControl(ZoomControl, position)\n\n    return () => {\n      map.removeControl(ZoomControl)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, position])\n\n  return null\n}\n\nexport default ZoomControl\n","import React, { useEffect } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface MapTypeIdProps {\n  /**\n   * MapTypeId를 정의 한다.\n   */\n  type: kakao.maps.MapTypeId\n}\n\n/**\n * 추가적으로 보이고 싶은 지도 타입을 추가 할 때 사용한다.\n */\nconst MapTypeId: React.FC<MapTypeIdProps> = ({ type }) => {\n  const map = useMap(`MapTypeId`)\n\n  useEffect(() => {\n    map.addOverlayMapTypeId(type)\n\n    return () => {\n      map.removeOverlayMapTypeId(type)\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [map, type])\n\n  return null\n}\n\nexport default MapTypeId\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface CircleProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 원의 반지름 크기를 지정합니다 (미터 단위).\n   */\n  radius: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Circle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Circle) => void\n}\n\n/**\n * Map 상에 원을 그립니다.\n */\nconst Circle: React.FC<CircleProps> = ({\n  center,\n  radius,\n  fillColor,\n  fillOpacity,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  zIndex,\n  onMouseover,\n  onMouseout,\n  onMousemove,\n  onMousedown,\n  onClick,\n  onCreate,\n}) => {\n  const map = useMap(`Circle`)\n\n  const circleCenter = useMemo(() => {\n    return new kakao.maps.LatLng(center.lat, center.lng)\n  }, [center.lat, center.lng])\n\n  const circle = useMemo(() => {\n    return new kakao.maps.Circle({\n      center: circleCenter,\n      radius,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    circle.setMap(map)\n    return () => {\n      circle.setMap(null)\n    }\n  }, [map, circle])\n\n  useEffect(() => {\n    if (onCreate) onCreate(circle)\n  }, [circle, onCreate])\n\n  useEffect(() => {\n    if (circle) circle.setPosition(circleCenter)\n  }, [circle, circleCenter])\n\n  useEffect(() => {\n    circle.setRadius(radius)\n  }, [circle, radius])\n\n  useEffect(() => {\n    if (!zIndex) return\n    circle.setZIndex(zIndex)\n  }, [circle, zIndex])\n\n  useEffect(() => {\n    circle.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    circle,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useKakaoEvent(circle, \"mouseover\", onMouseover)\n  useKakaoEvent(circle, \"mouseout\", onMouseout)\n  useKakaoEvent(circle, \"mousemove\", onMousemove)\n  useKakaoEvent(circle, \"mousedown\", onMousedown)\n  useKakaoEvent(circle, \"click\", onClick)\n\n  return null\n}\n\nexport default Circle\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolylineProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * 화살표 여부\n   */\n  endArrow?: boolean\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polyline,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polyline) => void\n}\n\n/**\n * Map 상에 폴리라인을 그립니다.\n */\nconst Polyline: React.FC<PolylineProps> = ({\n  path,\n  endArrow,\n  onClick,\n  onMousedown,\n  onMousemove,\n  onMouseout,\n  onMouseover,\n  onCreate,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  zIndex,\n}) => {\n  const map = useMap(`Polyline`)\n\n  const polyLinePath = useMemo(() => {\n    if ((path as LatLng[]).every((v) => v instanceof Array)) {\n      return (path as LatLng[][]).map((v) => {\n        return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n      })\n    }\n    return (path as LatLng[]).map((v) => {\n      return new kakao.maps.LatLng(v.lat, v.lng)\n    })\n  }, [path])\n\n  const polyline = useMemo(() => {\n    return new kakao.maps.Polyline({\n      path: polyLinePath,\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    polyline.setMap(map)\n    return () => polyline.setMap(null)\n  }, [map, polyline])\n\n  useEffect(() => {\n    if (onCreate) onCreate(polyline)\n  }, [polyline, onCreate])\n\n  useEffect(() => {\n    polyline.setOptions({\n      endArrow,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    polyline,\n    endArrow,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useEffect(() => {\n    polyline.setPath(polyLinePath)\n  }, [polyline, polyLinePath])\n\n  useEffect(() => {\n    if (zIndex) polyline.setZIndex(zIndex)\n  }, [polyline, zIndex])\n\n  useKakaoEvent(polyline, \"mouseover\", onMouseover)\n  useKakaoEvent(polyline, \"mouseout\", onMouseout)\n  useKakaoEvent(polyline, \"mousemove\", onMousemove)\n  useKakaoEvent(polyline, \"mousedown\", onMousedown)\n  useKakaoEvent(polyline, \"click\", onClick)\n\n  return null\n}\n\nexport default Polyline\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface PolygonProps {\n  path: LatLng[] | LatLng[][]\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Polygon,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Polygon) => void\n}\n\n/**\n * Map 상에 다각형을 그립니다.\n */\nconst Polygon: React.FC<PolygonProps> = ({\n  path,\n  onClick,\n  onMousedown,\n  onMousemove,\n  onMouseout,\n  onMouseover,\n  onCreate,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  fillColor,\n  fillOpacity,\n  zIndex,\n}) => {\n  const map = useMap(`Polygon`)\n\n  const polygonPath = useMemo(() => {\n    if ((path as LatLng[]).every((v) => v instanceof Array)) {\n      return (path as LatLng[][]).map((v) => {\n        return v.map((p) => new kakao.maps.LatLng(p.lat, p.lng))\n      })\n    }\n    return (path as LatLng[]).map((v) => {\n      return new kakao.maps.LatLng(v.lat, v.lng)\n    })\n  }, [path])\n\n  const polygon = useMemo(() => {\n    return new kakao.maps.Polygon({\n      path: polygonPath,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    polygon.setMap(map)\n    return () => polygon.setMap(null)\n  }, [map, polygon])\n\n  useEffect(() => {\n    if (onCreate) onCreate(polygon)\n  }, [polygon, onCreate])\n\n  useEffect(() => {\n    polygon.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    polygon,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useEffect(() => {\n    polygon.setPath(polygonPath)\n  }, [polygon, polygonPath])\n\n  useEffect(() => {\n    if (zIndex) polygon.setZIndex(zIndex)\n  }, [polygon, zIndex])\n\n  useKakaoEvent(polygon, \"mouseover\", onMouseover)\n  useKakaoEvent(polygon, \"mouseout\", onMouseout)\n  useKakaoEvent(polygon, \"mousemove\", onMousemove)\n  useKakaoEvent(polygon, \"mousedown\", onMousedown)\n  useKakaoEvent(polygon, \"click\", onClick)\n\n  return null\n}\n\nexport default Polygon\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\ninterface LatLng {\n  lat: number\n  lng: number\n}\n\nexport interface RectangleProps {\n  bounds: {\n    sw: LatLng\n    ne: LatLng\n  }\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n  /**\n   * 선의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Rectangle,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Rectangle) => void\n}\n\n/**\n * Map 상에 사각형을 그립니다.\n */\nconst Rectangle: React.FC<RectangleProps> = ({\n  bounds,\n  onClick,\n  onMousedown,\n  onMousemove,\n  onMouseout,\n  onMouseover,\n  onCreate,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  fillColor,\n  fillOpacity,\n  zIndex,\n}) => {\n  const map = useMap(`Rectangle`)\n\n  const rectangleBounds = useMemo(() => {\n    return new kakao.maps.LatLngBounds(\n      new kakao.maps.LatLng(bounds.sw.lat, bounds.sw.lng),\n      new kakao.maps.LatLng(bounds.ne.lat, bounds.ne.lng)\n    )\n  }, [bounds])\n\n  const rectangle = useMemo(() => {\n    return new kakao.maps.Rectangle({\n      bounds: rectangleBounds,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    rectangle.setMap(map)\n    return () => rectangle.setMap(null)\n  }, [map, rectangle])\n\n  useEffect(() => {\n    if (onCreate) onCreate(rectangle)\n  }, [rectangle, onCreate])\n\n  useEffect(() => {\n    rectangle.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    rectangle,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useEffect(() => {\n    rectangle.setBounds(rectangleBounds)\n  }, [rectangle, rectangleBounds])\n\n  useEffect(() => {\n    if (zIndex) rectangle.setZIndex(zIndex)\n  }, [rectangle, zIndex])\n\n  useKakaoEvent(rectangle, \"mouseover\", onMouseover)\n  useKakaoEvent(rectangle, \"mouseout\", onMouseout)\n  useKakaoEvent(rectangle, \"mousemove\", onMousemove)\n  useKakaoEvent(rectangle, \"mousedown\", onMousedown)\n  useKakaoEvent(rectangle, \"click\", onClick)\n\n  return null\n}\n\nexport default Rectangle\n","import React, { useEffect, useMemo } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface EllipseProps {\n  /**\n   * 중심 좌표를 지정합니다.\n   */\n  center: {\n    lat: number\n    lng: number\n  }\n  /**\n   * 미터 단위의 x축 반지름\n   */\n  rx: number\n\n  /**\n   * 미터 단위의 y축 반지름\n   */\n  ry: number\n\n  /**\n   * #xxxxxx 형태의 채움 색 (기본값: ‘#F10000’)\n   */\n  fillColor?: string\n\n  /**\n   * 채움 불투명도 (0-1) (기본값: 0)\n   */\n  fillOpacity?: number\n\n  /**\n   * 픽셀 단위의 선 두께 (기본값: 3)\n   */\n  strokeWeight?: number\n\n  /**\n   * #xxxxxx 형태의 선 색 (기본값: ‘#F10000’)\n   */\n  strokeColor?: string\n\n  /**\n   * 선 불투명도 (0-1) (기본값: 0.6)\n   */\n  strokeOpacity?: number\n\n  /**\n   * 선 스타일 (기본값: ‘solid’)\n   */\n  strokeStyle?: kakao.maps.StrokeStyles\n\n  /**\n   * 타원의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 타원에 마우스 커서를 올리면 발생한다.\n   */\n  onMouseover?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 마우스 커서가 타원에서 벗어나면 발생한다.\n   */\n  onMouseout?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스를 움직이면 발생한다.\n   */\n  onMousemove?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원에서 마우스 버튼을 누르면 발생한다.\n   */\n  onMousedown?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n  /**\n   * 타원을 클릭하면 발생한다.\n   */\n  onClick?: (\n    target: kakao.maps.Ellipse,\n    mouseEvent: kakao.maps.event.MouseEvent\n  ) => void\n\n  /**\n   * 객체 생성시 호출 됩니다.\n   */\n  onCreate?: (target: kakao.maps.Ellipse) => void\n}\n\n/**\n * Map 상에 타원을 그립니다.\n */\nconst Ellipse: React.FC<EllipseProps> = ({\n  center,\n  rx,\n  ry,\n  fillColor,\n  fillOpacity,\n  strokeColor,\n  strokeOpacity,\n  strokeStyle,\n  strokeWeight,\n  zIndex,\n  onMouseover,\n  onMouseout,\n  onMousemove,\n  onMousedown,\n  onClick,\n  onCreate,\n}) => {\n  const map = useMap(`Ellipse`)\n\n  const ellipseCenter = useMemo(() => {\n    return new kakao.maps.LatLng(center.lat, center.lng)\n  }, [center.lat, center.lng])\n\n  const ellipse = useMemo(() => {\n    return new kakao.maps.Ellipse({\n      center: ellipseCenter,\n      rx,\n      ry,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n      zIndex,\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    ellipse.setMap(map)\n\n    return () => {\n      ellipse.setMap(null)\n    }\n  }, [map, ellipse])\n\n  useEffect(() => {\n    if (onCreate) onCreate(ellipse)\n  }, [ellipse, onCreate])\n\n  useEffect(() => {\n    if (ellipse) ellipse.setPosition(ellipseCenter)\n  }, [ellipse, ellipseCenter])\n\n  useEffect(() => {\n    ellipse.setRadius(rx, ry)\n  }, [ellipse, rx, ry])\n\n  useEffect(() => {\n    if (!zIndex) return\n    ellipse.setZIndex(zIndex)\n  }, [ellipse, zIndex])\n\n  useEffect(() => {\n    ellipse.setOptions({\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeOpacity,\n      strokeStyle,\n      strokeWeight,\n    })\n  }, [\n    ellipse,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeOpacity,\n    strokeStyle,\n    strokeWeight,\n  ])\n\n  useKakaoEvent(ellipse, \"mouseover\", onMouseover)\n  useKakaoEvent(ellipse, \"mouseout\", onMouseout)\n  useKakaoEvent(ellipse, \"mousemove\", onMousemove)\n  useKakaoEvent(ellipse, \"mousedown\", onMousedown)\n  useKakaoEvent(ellipse, \"click\", onClick)\n\n  return null\n}\n\nexport default Ellipse\n","import React, { useEffect, useMemo } from \"react\"\nimport useMap from \"../hooks/useMap\"\n\nexport interface AbstractOverlayProps {\n  /**\n   * AbstractOverlay에서 필요한 `onAdd` 함수를 구현 합니다.\n   * 위치를 재조정할 필요가 있을 때 호출된다.\n   * 이 함수 내에서 엘리먼트의 위치를 잡아주어야 한다.\n   *\n   * 이때 arrow 함수가 아닌 일반 funtion으로 하여 this 바인딩이 되도록 하여 AbstractOverlay를 상속 받은 객체에 접근하여 필요 기능을 정의 합니다.\n   * ```tsx\n   * const panel = (this as kakao.maps.AbstractOverlay).getPanels().overlayLayer\n   * panel.appendChild(node.current)\n   * ```\n   */\n  draw: () => void\n  /**\n   * 지도에 올릴 때 호출된다.\n   * setMap(map) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 생성된 `DOM` 객체를 MapPanels에 자식 노드로 넣어주도록 한다.\n   *\n   * ```tsx\n   * var projection = this.getProjection()\n   * var point = projection.pointFromCoords(positionLatlng)\n   * var width = node.current.offsetWidth\n   * var height = node.current.offsetHeight\n   *\n   * console.log(point, width, height)\n   *\n   * node.current.style.left = point.x - width / 2 + \"px\"\n   * node.current.style.top = point.y - height / 2 + \"px\"\n   * ```\n   */\n  onAdd: () => void\n\n  /**\n   * 지도에서 제거할 때 호출된다.\n   * setMap(null) 을 실행하면 이 함수가 실행된다.\n   * 이 함수 내에서 MapPanels에 자식 노드로 넣어준 엘리먼트를 제거하도록 한다.\n   *\n   * ```tsx\n   * this.node.parentNode.removeChild(this.node);\n   * ```\n   */\n  onRemove: () => void\n\n  /**\n   * 생성된 kakao.maps.AbstractOverlay 객체를 받을 수 있는 CallBack 함수 입니다.\n   */\n  onCreate?: (target: kakao.maps.AbstractOverlay) => void\n}\n\n/**\n * `API` 사용자가 직접 정의할 수 있는 오버레이.\n * AbstractOverlay를 상속 받아 사용할 객체를 생성하고 prototype을 연결해 준다.\n * 온전히 동작하는 오버레이를 만들고자 한다면 3가지 인터페이스 메소드( onAdd, draw, onRemove )를 구현해야 한다.\n *\n * 해당 Component 내부에서 `ReactAbstractOveraly` class를 만들어 `onAdd`, `draw`, `onRemove` 를 연결한 후 React Life Cycle에 맞춰 `setMap` 를 자동으로 호출 합니다.\n *\n * *경고* `draw`, `onAdd`, `onRemove` 의 경우 반드시 익명함수가 **아닌** 형태로 만들어서 전달해야 합니다.\n * `this.~` 를 통한 접근이 가능하니 해당 부분을 이용해서 구현 해주세요!\n *\n * ### Example Code\n *\n * ```jsx live\n * function () {\n *  const TooltipMarker = ({\n *    position,\n *  }) => {\n *    const node = useRef(document.createElement(\"div\"))\n *\n *    const positionLatlng = useMemo(() => {\n *      return new kakao.maps.LatLng(position.lat, position.lng)\n *    }, [position.lat, position.lng])\n *\n *    function onAdd() {\n *      const panel = this.getPanels()\n *        .overlayLayer\n *      panel.appendChild(node.current)\n *    }\n *\n *    function onRemove() {\n *      node.current.parentNode.removeChild(node.current)\n *    }\n *\n *    function draw() {\n *      var projection = this.getProjection()\n *      var point = projection.pointFromCoords(positionLatlng)\n *      var width = node.current.offsetWidth\n *      var height = node.current.offsetHeight\n *\n *      console.log(point, width, height)\n *\n *      node.current.style.left = point.x - width / 2 + \"px\"\n *      node.current.style.top = point.y - height / 2 + \"px\"\n *    }\n *\n *    useEffect(() => {\n *      node.current.style.position = \"absolute\"\n *      node.current.style.whiteSpace = \"nowrap\"\n *    }, [])\n *\n *    return (\n *      <>\n *        <AbstractOverlay onAdd={onAdd} onRemove={onRemove} draw={draw} />\n *        {ReactDOM.createPortal(\n *          <div\n *            style={{\n *              color: \"#000\",\n *              backgroundColor: \"#fff\",\n *              padding: \"5px\",\n *              borderRadius: \"15px\",\n *            }}\n *          >\n *            Hello Marker!\n *          </div>,\n *          node.current\n *        )}\n *      </>\n *    )\n *  }\n *\n *  return (\n *    <>\n *      <Map // 지도를 표시할 Container\n *        center={{\n *          // 지도의 중심좌표\n *          lat: 37.54699,\n *          lng: 127.09598,\n *        }}\n *        style={{\n *          // 지도의 크기\n *          width: \"100%\",\n *          height: \"450px\",\n *        }}\n *        level={3} // 지도의 확대 레벨\n *      >\n *        <TooltipMarker\n *          position={{\n *            lat: 37.54699,\n *            lng: 127.09598,\n *          }}\n *        />\n *      </Map>\n *    </>\n *  )\n *}\n * ```\n */\nconst AbstractOverlay: React.FC<AbstractOverlayProps> = ({\n  draw,\n  onAdd,\n  onRemove,\n  onCreate,\n}) => {\n  const map = useMap()\n\n  const reactAbstractOverlay = useMemo(() => {\n    class ReactAbstractOveraly extends kakao.maps.AbstractOverlay {\n      constructor(draw: () => void, onAdd: () => void, onRemove: () => void) {\n        super()\n        this.draw = draw\n        this.onAdd = onAdd\n        this.onRemove = onRemove\n      }\n    }\n    const overlay = new ReactAbstractOveraly(draw, onAdd, onRemove)\n    return overlay\n  }, [draw, onAdd, onRemove])\n\n  useEffect(() => {\n    reactAbstractOverlay.setMap(map)\n\n    return () => {\n      reactAbstractOverlay.setMap(null)\n    }\n  }, [map, reactAbstractOverlay])\n\n  useEffect(() => {\n    if (onCreate) onCreate(reactAbstractOverlay)\n  }, [reactAbstractOverlay, onCreate])\n  return null\n}\n\nexport default AbstractOverlay\n","import React, { useEffect, useRef, useState } from \"react\"\nimport useKakaoEvent from \"../hooks/useKakaoEvent\"\n\nexport const KakaoRoadviewContext = React.createContext<kakao.maps.Roadview>(\n  undefined as unknown as kakao.maps.Roadview\n)\n\nexport interface RoadviewProps {\n  /**\n   * roadviewContinaer의 id에 대해서 지정합니다.\n   *\n   * @default  \"kakao-roadview-container\"\n   */\n  id?: string\n\n  /**\n   * roadviewContainer의 className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * roadviewContainer의 style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 중심으로 설정할 위치 입니다.\n   * 해당 lat와 lng에 해당하는 radius범위 안에서 가장가까운 Roadview을 선택합니다.\n   * 만약 없다면 lat, lng로 설정 됩니다.\n   */\n  position: {\n    lat: number\n    lng: number\n    radius: number\n  }\n\n  /**\n   * 로드뷰 시작 지역의 고유 아이디 값.\n   */\n  panoId?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수평 좌표값.\n   */\n  panoX?: number\n\n  /**\n   * panoId가 유효하지 않을 경우 지도좌표를 기반으로 데이터를 요청할 수직 좌표값.\n   */\n  panoY?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수평 각. 0이 정북방향. (0_360)\n   */\n  pan?: number\n\n  /**\n   * 로드뷰 처음 실행시에 바라봐야 할 수직 각.(-90_90)\n   */\n  tilt?: number\n\n  /**\n   * 로드뷰 줌 초기값.(-3_3)\n   */\n  zoom?: number\n\n  /**\n   * 로드뷰 생성후 해당 객체를 전달하는 callback.\n   */\n  onCreate?: (roadview: kakao.maps.Roadview) => void\n\n  /**\n   * 로드뷰가 초기화를 끝내면 발생한다.\n   */\n  onInit?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 파노라마 ID가 바뀌면 발생한다.\n   */\n  onPanoidChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 시점이 바뀌면 발생한다.\n   */\n  onViewpointChange?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * 지도 좌표가 바뀌면 발생한다.\n   */\n  onPositionChanged?: (target: kakao.maps.Roadview) => void\n\n  /**\n   * getNearestPanoId 동작 실패시 호출 합니다.\n   */\n  onErrorGetNearestPanoId?: (target: kakao.maps.Roadview) => void\n}\n\n/**\n * Roadview를 Roadview를 생성하는 컴포넌트 입니다.\n * props로 받는 `on*` 이벤트는 해당 `kakao.maps.Map` 객체를 반환 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `Roadview` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst Roadview: React.FC<RoadviewProps> = ({\n  id = \"kakao-roadview-container\",\n  style,\n  children,\n  position,\n  className,\n  pan,\n  panoId,\n  panoX,\n  panoY,\n  tilt,\n  zoom,\n  onCreate,\n  onInit,\n  onPanoidChange,\n  onPositionChanged,\n  onViewpointChange,\n  onErrorGetNearestPanoId,\n}) => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [roadview, setRoadview] = useState<kakao.maps.Roadview>()\n  const container = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    if (!window.kakao) {\n      console.warn(\n        \"kakao map javascript api를 먼저 불러와야 합니다. `https://apis.map.kakao.com/web/guide`\"\n      )\n      return\n    }\n    if (!container.current) return\n\n    const kakaoRoadview = new kakao.maps.Roadview(container.current, {\n      pan: pan,\n      panoId: panoId,\n      panoX: panoX,\n      panoY: panoY,\n      tilt: tilt,\n      zoom: zoom,\n    })\n\n    setRoadview(kakaoRoadview)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [panoX, panoY, zoom])\n\n  useEffect(() => {\n    if (!roadview || !onCreate) return\n    onCreate(roadview)\n  }, [roadview, onCreate])\n\n  useEffect(() => {\n    if (\n      !roadview ||\n      panoId ||\n      (roadview.getPosition().getLat() === position.lat &&\n        roadview.getPosition().getLng() === position.lng)\n    )\n      return\n\n    const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n\n    new kakao.maps.RoadviewClient().getNearestPanoId(\n      newPostion,\n      position.radius,\n      (panoId) => {\n        if (panoId === null && onErrorGetNearestPanoId) {\n          onErrorGetNearestPanoId(roadview)\n        } else {\n          roadview.setPanoId(panoId, newPostion)\n        }\n      }\n    )\n  }, [\n    roadview,\n    panoId,\n    position.lat,\n    position.lng,\n    position.radius,\n    onErrorGetNearestPanoId,\n  ])\n\n  useEffect(() => {\n    if (\n      !roadview ||\n      !panoId ||\n      panoId === roadview.getPanoId() ||\n      (roadview.getPosition().getLat() === position.lat &&\n        roadview.getPosition().getLng() === position.lng)\n    )\n      return\n\n    const newPostion = new kakao.maps.LatLng(position.lat, position.lng)\n    roadview.setPanoId(panoId, newPostion)\n  }, [roadview, panoId, position.lat, position.lng])\n\n  useEffect(() => {\n    if (!roadview) return\n\n    const prevViewpoint = roadview.getViewpoint()\n\n    if (prevViewpoint.pan === pan && prevViewpoint.tilt === tilt) return\n\n    if (pan) prevViewpoint.pan = pan\n    if (tilt) prevViewpoint.tilt = tilt\n    roadview.setViewpoint(prevViewpoint)\n  }, [roadview, pan, tilt])\n\n  useKakaoEvent(roadview, \"init\", (target) => {\n    setIsLoading(false)\n    if (onInit) onInit(target)\n  })\n  useKakaoEvent(roadview, \"panoid_changed\", onPanoidChange)\n  useKakaoEvent(roadview, \"viewpoint_changed\", onViewpointChange)\n  useKakaoEvent(roadview, \"position_changed\", onPositionChanged)\n\n  return (\n    <>\n      <div id={id} className={className} style={style} ref={container}></div>\n      {roadview && !isLoading && (\n        <KakaoRoadviewContext.Provider value={roadview}>\n          {children}\n        </KakaoRoadviewContext.Provider>\n      )}\n    </>\n  )\n}\n\nexport default Roadview\n","import { useContext } from \"react\"\nimport { KakaoRoadviewContext } from \"../components/Roadview\"\n\n/**\n * kakao roadview 객체를 가져오는 hook 입니다.\n * Roadview 객체 내부가 아니라면 Error를 발생 시킵니다.\n */\nconst useRoadview = (componentName?: string) => {\n  const kakaoRoadview = useContext(KakaoRoadviewContext)\n  if (!kakaoRoadview) {\n    throw new Error(\n      `${\n        componentName ? componentName + \" Component\" : \"useRoadview\"\n      } must exist inside Roadview Component!`\n    )\n  }\n\n  return kakaoRoadview\n}\n\nexport default useRoadview\n","import React, { useEffect, useMemo, useRef } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface CustomOverlayRoadviewProps {\n  /**\n   * CustomOverlay의 Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * CustomOverlay의 Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * CustomOverlay의 Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 커스텀 오버레이의 좌표\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n  /**\n   * 해당 객체 생성 후 Roadview의 시점을 전환하여 Focus 할 지에 대해서 정의 합니다.\n   */\n  isFocus?: boolean\n\n  /**\n   * true 로 설정하면 컨텐츠 영역을 클릭했을 경우 지도 이벤트를 막아준다.\n   */\n  clickable?: boolean\n\n  /**\n   * 컨텐츠의 x축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  xAnchor?: number\n\n  /**\n   * 컨텐츠의 y축 위치. 0_1 사이의 값을 가진다. 기본값은 0.5\n   */\n  yAnchor?: number\n\n  /**\n   * 커스텀 오버레이의 z-index\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰상에서 커스텀 오버레이의 높이(위치)를 지정한다.\n   * 단위는 m(미터)이며 현재 로드뷰의 바닥 높이를 기준으로 떨어져있는 높이를 말한다.\n   */\n  altitude?: number\n\n  /**\n   * 커스텀 오버레이의 가시반경을 설정한다.\n   * 로드뷰의 위치와 커스텀 오버레이의 위치 사이의 거리가 가시반경 이내일 경우에만 로드뷰상에 노출된다.\n   * 단위는 m(미터)이며 기본값은 500m이다.\n   */\n  range?: number\n\n  /**\n   * 커스텀 오버레이를 생성 후 해당 객체를 가지고 callback 함수를 실행 시켜줌\n   */\n  onCreate?: (customOverlay: kakao.maps.CustomOverlay) => void\n}\n\n/**\n * Roadview에 CustomOverlay를 올릴 때 사용하는 컴포넌트 입니다.\n * `onCreate` 함수를 통해서 `CustomOverlay` 객체에 직접 접근 및 초기 설정 작업을 지정할 수 있습니다.\n */\nconst CustomOverlayRoadview: React.FC<CustomOverlayRoadviewProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  clickable,\n  xAnchor,\n  yAnchor,\n  zIndex,\n  altitude,\n  range,\n  isFocus,\n  onCreate,\n}) => {\n  const roadview = useRoadview(`CustomOverlayRoadview`)\n  const container = useRef(document.createElement(\"div\"))\n\n  const overlayPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    return new kakao.maps.Viewpoint(\n      position.pan,\n      position.tilt,\n      position.zoom,\n      position.panoId\n    )\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [\n    // @ts-ignore\n    position.lat,\n    // @ts-ignore\n    position.lng,\n    // @ts-ignore\n    position.pan,\n    // @ts-ignore\n    position.tilt,\n    // @ts-ignore\n    position.zoom,\n    // @ts-ignore\n    position.panoId,\n  ])\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  const overlay = useMemo(() => {\n    const KakaoCustomOverlay = new kakao.maps.CustomOverlay({\n      clickable: clickable,\n      xAnchor: xAnchor,\n      yAnchor: yAnchor,\n      zIndex: zIndex,\n      position: overlayPosition,\n      content: container.current,\n    })\n\n    return KakaoCustomOverlay\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [clickable, xAnchor, yAnchor])\n\n  useEffect(() => {\n    if (!roadview) return\n\n    overlay.setMap(roadview)\n\n    if (isFocus) {\n      const projection = roadview.getProjection() // viewpoint(화면좌표)값을 추출할 수 있는 projection 객체를 가져옵니다.\n\n      // 커스텀오버레이의 position과 altitude값을 통해 viewpoint값(화면좌표)를 추출합니다.\n      const viewpoint = projection.viewpointFromCoords(\n        overlay.getPosition(),\n        overlay.getAltitude()\n      )\n      roadview.setViewpoint(viewpoint) //커스텀 오버레이를 로드뷰의 가운데에 오도록 로드뷰의 시점을 변화 시킵니다.\n    }\n\n    return () => {\n      overlay.setMap(null)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [overlay, roadview])\n\n  useEffect(() => {\n    if (onCreate) onCreate(overlay)\n  }, [overlay, onCreate])\n\n  useEffect(() => {\n    overlay.setPosition(overlayPosition)\n  }, [overlay, overlayPosition])\n\n  useEffect(() => {\n    if (!zIndex) return\n    overlay.setZIndex(zIndex)\n  }, [overlay, zIndex])\n\n  useEffect(() => {\n    if (!altitude) return\n    overlay.setAltitude(altitude)\n  }, [overlay, altitude])\n\n  useEffect(() => {\n    if (!range) return\n    overlay.setRange(range)\n  }, [overlay, range])\n\n  useEffect(() => {\n    if (id) container.current.id = id\n  }, [id])\n\n  useEffect(() => {\n    if (className) container.current.className = className\n  }, [className])\n\n  useEffect(() => {\n    if (style) {\n      for (const [key, value] of Object.entries(style)) {\n        container.current.style[key] = value\n      }\n    }\n  }, [style])\n\n  return ReactDOM.createPortal(children, container.current)\n}\n\nexport default CustomOverlayRoadview\n","import React, { useMemo } from \"react\"\nimport useRoadview from \"../hooks/useRoadview\"\nimport Marker from \"./Marker\"\n\nexport interface RoadviewMarkerProps {\n  /**\n   * 표시 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        x: number\n        y: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  image?: {\n    /**\n     * 표시 이미지 src\n     */\n    src: string\n\n    /**\n     * 표시 이미지 크기\n     */\n    size: {\n      width: number\n      height: number\n    }\n\n    options?: {\n      /**\n       * 마커 이미지의 alt 속성값을 정의한다.\n       */\n      alt?: string\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역을 표현하는 좌표값\n       */\n      coords?: string\n\n      /**\n       * 마커의 좌표에 일치시킬 이미지 안의 좌표 (기본값: 이미지의 가운데 아래)\n       */\n      offset?: { x: number; y: number }\n\n      /**\n       * 마커의 클릭 또는 마우스오버 가능한 영역의 모양\n       */\n      shape?: \"default\" | \"rect\" | \"circle\" | \"poly\"\n\n      /**\n       * 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n       */\n      spriteOrigin?: { x: number; y: number }\n\n      /**\n       * 스프라이트 이미지의 전체 크기\n       */\n      spriteSize?: { width: number; height: number }\n    }\n  }\n\n  /**\n   * click 이벤트 핸들러\n   */\n  onClick?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseover 이벤트 핸들러\n   */\n  onMouseOver?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * mouseout 이벤트 핸들러\n   */\n  onMouseOut?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragstart 이벤트 핸들러\n   */\n  onDragStart?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * dragend 이벤트 핸들러\n   */\n  onDragEnd?: (marker: kakao.maps.Marker) => void\n\n  /**\n   * Maker 생성 이벤트 핸들러\n   */\n  onCreate?: (maker: kakao.maps.Marker) => void\n\n  /**\n   * 마커 엘리먼트의 타이틀 속성 값 (툴팁)\n   */\n  title?: string\n\n  /**\n   * 클릭 가능한 마커\n   */\n  clickable?: boolean\n\n  /**\n   * 마커 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 마커 투명도 (0-1)\n   */\n  opacity?: number\n\n  /**\n   * 로드뷰에 올라있는 마커의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 마커의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 마커는 로드뷰에서 보이지 않게 된다.\n   */\n  range?: number\n\n  /**\n   * InfoWindow 옵션\n   */\n  infoWindowOptions?: {\n    /**\n     * Contianer id에 대해서 지정합니다.\n     */\n    id?: string\n\n    /**\n     * Contianer className에 대해서 지정합니다.\n     */\n    className?: string\n\n    /**\n     * Contianer style에 대해서 지정합니다.\n     */\n    style?: React.CSSProperties\n\n    /**\n     * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n     */\n    disableAutoPan?: boolean\n\n    /**\n     * 삭제 가능한 인포윈도우\n     */\n    removable?: boolean\n\n    /**\n     * 인포윈도우 엘리먼트의 z-index 속성 값\n     */\n    zIndex?: number\n  }\n}\n\n/**\n * Map에서 Marker를 생성할 때 사용 합니다.\n * `onCreate` 이벤트를 통해 생성 후 `maker` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewMarker: React.FC<RoadviewMarkerProps> = ({\n  image,\n  position,\n  children,\n  altitude,\n  clickable,\n  infoWindowOptions,\n  onClick,\n  onDragEnd,\n  onDragStart,\n  onMouseOut,\n  onMouseOver,\n  onCreate,\n  opacity,\n  range,\n  title,\n  zIndex,\n}) => {\n  const roadview = useRoadview(`RoadviewMarker`)\n\n  const markerImage = useMemo(() => {\n    return (\n      image &&\n      new kakao.maps.MarkerImage(\n        image.src,\n        new kakao.maps.Size(image.size.width, image.size.height),\n        {\n          alt: image.options?.alt,\n          coords: image.options?.coords,\n          offset:\n            image.options?.offset &&\n            new kakao.maps.Point(\n              image.options?.offset.x,\n              image.options?.offset.y\n            ),\n          shape: image.options?.shape,\n          spriteOrigin:\n            image.options?.spriteOrigin &&\n            new kakao.maps.Point(\n              image.options?.spriteOrigin.x,\n              image.options?.spriteOrigin.y\n            ),\n          spriteSize:\n            image.options?.spriteSize &&\n            new kakao.maps.Size(\n              image.options?.spriteSize.width,\n              image.options?.spriteSize.height\n            ),\n        }\n      )\n    )\n  }, [image])\n\n  const markerPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    if (\"x\" in position) {\n      return new kakao.maps.Coords(position.x, position.y).toLatLng()\n    }\n    return new kakao.maps.Viewpoint(\n      position.pan,\n      position.tilt,\n      position.zoom,\n      position.panoId\n    )\n\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [\n    // @ts-ignore\n    position.lat,\n    // @ts-ignore\n    position.lng,\n    // @ts-ignore\n    position.x,\n    // @ts-ignore\n    position.y,\n    // @ts-ignore\n    position.pan,\n    // @ts-ignore\n    position.tilt,\n    // @ts-ignore\n    position.zoom,\n    // @ts-ignore\n    position?.panoId,\n  ])\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return (\n    <Marker\n      map={roadview}\n      position={markerPosition}\n      image={markerImage}\n      altitude={altitude}\n      clickable={clickable}\n      infoWindowOptions={infoWindowOptions}\n      onClick={onClick}\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      onMouseOut={onMouseOut}\n      onMouseOver={onMouseOver}\n      onCreate={onCreate}\n      opacity={opacity}\n      range={range}\n      title={title}\n      zIndex={zIndex}\n    >\n      {children}\n    </Marker>\n  )\n}\n\nexport default RoadviewMarker\n","import React, { useMemo } from \"react\"\nimport InfoWindow from \"./InfoWindow\"\nimport useRoadview from \"../hooks/useRoadview\"\n\nexport interface RoadviewInfoWindowProps {\n  /**\n   * Contianer id에 대해서 지정합니다.\n   */\n  id?: string\n\n  /**\n   * Contianer className에 대해서 지정합니다.\n   */\n  className?: string\n\n  /**\n   * Contianer style에 대해서 지정합니다.\n   */\n  style?: React.CSSProperties\n\n  /**\n   * 인포윈도가 표시될 위치\n   */\n  position:\n    | {\n        lat: number\n        lng: number\n      }\n    | {\n        /**\n         * 가로 각도, 0부터 360 사이의 값으로 북쪽부터 시계방향으로 대응한다.\n         */\n        pan: number\n        /**\n         * 세로 각도, -90부터 90 사이의 값으로 위쪽부터 아래쪽으로 대응한다.\n         */\n        tilt: number\n        /**\n         * 확대 수준, -3부터 3 사이의 정수이다.\n         */\n        zoom?: number\n        /**\n         * 특정 위치의 로드뷰 고유의 아이디 값\n         */\n        panoId?: number\n      }\n\n  /**\n   * 인포윈도우를 열 때 지도가 자동으로 패닝하지 않을지의 여부 (기본값: false)\n   */\n  disableAutoPan?: boolean\n\n  /**\n   * 삭제 가능한 인포윈도우\n   */\n  removable?: boolean\n\n  /**\n   * 인포윈도우 엘리먼트의 z-index 속성 값\n   */\n  zIndex?: number\n\n  /**\n   * 로드뷰에 올라있는 인포윈도우의 높이 값(m 단위)\n   */\n  altitude?: number\n\n  /**\n   * 로드뷰 상에서 인포윈도우의 가시반경(m 단위), 두 지점 사이의 거리가 지정한 값보다 멀어지면 인포윈도우는 보이지 않게 된다\n   */\n  range?: number\n\n  /**\n   * 인포윈도우 객체 생성후 해당 객체를 반환하는 함수\n   */\n  onCreate?: (infoWindow: kakao.maps.InfoWindow) => void\n}\n\n/**\n * Map 컴포넌트에서 InfoWindow를 그릴 때 사용됩니다.\n * `onCreate` 이벤트를 통해 생성 후 `infoWindow` 객체에 직접 접근하여 초기 설정이 가능합니다.\n */\nconst RoadviewInfoWindow: React.FC<RoadviewInfoWindowProps> = ({\n  id,\n  className,\n  style,\n  position,\n  children,\n  altitude,\n  disableAutoPan,\n  range,\n  removable,\n  zIndex,\n  onCreate,\n}) => {\n  const roadview = useRoadview(`RoadviewInfoWindow`)\n  const infoPosition = useMemo(() => {\n    if (\"lat\" in position) {\n      return new kakao.maps.LatLng(position.lat, position.lng)\n    }\n    return new kakao.maps.Viewpoint(\n      position.pan,\n      position.tilt,\n      position.zoom,\n      position.panoId\n    )\n    /* eslint-disable react-hooks/exhaustive-deps */\n  }, [\n    // @ts-ignore\n    position.lat,\n    // @ts-ignore\n    position.lng,\n    // @ts-ignore\n    position.pan,\n    // @ts-ignore\n    position.tilt,\n    // @ts-ignore\n    position.zoom,\n    // @ts-ignore\n    position.panoId,\n  ])\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return (\n    <InfoWindow\n      id={id}\n      className={className}\n      style={style}\n      altitude={altitude}\n      disableAutoPan={disableAutoPan}\n      range={range}\n      removable={removable}\n      zIndex={zIndex}\n      map={roadview}\n      position={infoPosition}\n      onCreate={onCreate}\n    >\n      {children}\n    </InfoWindow>\n  )\n}\n\nexport default RoadviewInfoWindow\n"]},"metadata":{},"sourceType":"module"}