{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\typescript-jarviis-frontend\\\\src\\\\features\\\\admin\\\\components\\\\SBChart.js\";\nimport React, { useEffect, useState } from \"react\";\n/*\nparentid : 차트가 보여질 위치\nconfig : 차트에 대한 기본 설정\nstyle : 차트  div의 width, height \n\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SBChart = ({\n  parentid,\n  config,\n  setChartData,\n  style\n}) => {\n  console.log(style);\n  useEffect(() => {\n    const chartConfig = { ...config //복사본 = 외부영향을 받지않고 안에서만 쓰기위해서? 예외상황 줄이기?\n\n    };\n    const chart = new window.sb.chart(\"#\" + parentid, chartConfig); // chart객체 하나. => #=id\n\n    setChartData(chart);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: parentid,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default SBChart;","map":{"version":3,"sources":["C:/Users/emma0/workspace/typescript-jarviis-frontend/src/features/admin/components/SBChart.js"],"names":["React","useEffect","useState","SBChart","parentid","config","setChartData","style","console","log","chartConfig","chart","window","sb"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA,MAAV;AAAiBC,EAAAA,YAAjB;AAA+BC,EAAAA;AAA/B,CAAD,KAAyC;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,WAAW,GAAG,EAClB,GAAGL,MADe,CACR;;AADQ,KAApB;AAGA,UAAMM,KAAK,GAAG,IAAIC,MAAM,CAACC,EAAP,CAAUF,KAAd,CAAoB,MAAIP,QAAxB,EAAkCM,WAAlC,CAAd,CAJc,CAIgD;;AAC9DJ,IAAAA,YAAY,CAACK,KAAD,CAAZ;AACD,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAA,2BACE;AAAK,MAAA,EAAE,EAAEP,QAAT;AAAmB,MAAA,KAAK,EAAEG;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAdD;;AAgBA,eAAeJ,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\n/*\nparentid : 차트가 보여질 위치\nconfig : 차트에 대한 기본 설정\nstyle : 차트  div의 width, height \n\n*/\nconst SBChart = ({parentid,config,setChartData, style})=>{  \n  console.log(style)\n  useEffect(() => {\n    const chartConfig = {\n      ...config //복사본 = 외부영향을 받지않고 안에서만 쓰기위해서? 예외상황 줄이기?\n    }\n    const chart = new window.sb.chart(\"#\"+parentid, chartConfig); // chart객체 하나. => #=id\n    setChartData(chart);\n  }, []);\n  return (\n    <>\n      <div id={parentid} style={style}></div>\n    </>\n  );\n};\n\nexport default SBChart;\n"]},"metadata":{},"sourceType":"module"}