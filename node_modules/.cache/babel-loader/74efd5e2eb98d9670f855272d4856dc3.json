{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { historyFailure, historyRequest, historySuccess } from \"features/history/reducer/historySlice\";\nimport { historyAPI } from \"features/history\";\n\nfunction* create(action) {\n  try {\n    alert(\"Aaaaaaaaaaa\");\n    const result = yield call(historyAPI.createAPI, action.payload);\n    yield put(historySuccess(result));\n    alert(\"나 결과 가지고 도라옴\");\n  } catch (error) {\n    yield put(historyFailure(error));\n    alert(\"에ㅓㄹ에러에러에ㅓㄹ\");\n  }\n}\n\nexport function* watchCreate() {\n  yield takeLatest(historyRequest.type, create);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/typescript-jarviis-frontend/src/features/history/module/historySaga.ts"],"names":["call","put","takeLatest","historyFailure","historyRequest","historySuccess","historyAPI","create","action","alert","result","createAPI","payload","error","watchCreate","type"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAA6BC,cAA7B,EAA6DC,cAA7D,EAA8EC,cAA9E,QAAmG,uCAAnG;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,UAAUC,MAAV,CAAiBC,MAAjB,EAAuD;AACnD,MAAG;AACCC,IAAAA,KAAK,CAAC,aAAD,CAAL;AACA,UAAMC,MAA2B,GAAG,MAAMV,IAAI,CAC1CM,UAAU,CAACK,SAD+B,EAE1CH,MAAM,CAACI,OAFmC,CAA9C;AAIA,UAAMX,GAAG,CAACI,cAAc,CAACK,MAAD,CAAf,CAAT;AACAD,IAAAA,KAAK,CAAC,cAAD,CAAL;AACH,GARD,CAQC,OAAOI,KAAP,EAAiB;AACd,UAAMZ,GAAG,CAACE,cAAc,CAACU,KAAD,CAAf,CAAT;AACAJ,IAAAA,KAAK,CAAC,YAAD,CAAL;AACH;AACJ;;AAED,OAAO,UAAUK,WAAV,GAAuB;AAC1B,QAAMZ,UAAU,CAACE,cAAc,CAACW,IAAhB,EAAsBR,MAAtB,CAAhB;AACH","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { HistoryDataPayload, historyFailure, HistoryPayload, historyRequest,  historySuccess} from \"features/history/reducer/historySlice\";\nimport { historyAPI } from \"features/history\";\n\nfunction* create(action: PayloadAction<HistoryPayload>){\n    try{\n        alert(\"Aaaaaaaaaaa\")\n        const result : HistoryDataPayload = yield call(\n            historyAPI.createAPI,\n            action.payload\n        );\n        yield put(historySuccess(result));\n        alert(\"나 결과 가지고 도라옴\")\n    }catch (error:any){\n        yield put(historyFailure(error))\n        alert(\"에ㅓㄹ에러에러에ㅓㄹ\")\n    }\n}\n\nexport function* watchCreate(){\n    yield takeLatest(historyRequest.type, create);\n}"]},"metadata":{},"sourceType":"module"}